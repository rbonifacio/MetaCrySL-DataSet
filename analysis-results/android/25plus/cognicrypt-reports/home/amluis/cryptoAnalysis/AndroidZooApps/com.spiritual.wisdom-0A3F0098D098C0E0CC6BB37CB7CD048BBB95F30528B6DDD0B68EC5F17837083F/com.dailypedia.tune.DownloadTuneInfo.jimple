public class com.dailypedia.tune.DownloadTuneInfo extends android.app.Service
{
    private final java.lang.String TAG;
    private int countTimeoutException;
    private javax.net.ssl.SSLContext ctx;
    private boolean isDownloadingApps;
    private android.os.Handler mHandler;
    private java.lang.String mTune_url;
    private com.dailypedia.tune.UtilityTune mUtilityTune;
    private java.lang.Thread thread;
    private android.widget.Toast toast;
    public android.content.Intent ipcIntent;
    public android.os.IBinder ipcBinder_0;

    public void <init>()
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.lang.Class $r1;
        java.lang.String $r2, varReplacer1431;
        int varReplacer1429;
        null_type varReplacer1430;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        specialinvoke $r0.<android.app.Service: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG> = $r2;

        varReplacer1431 = "https://s3-us-west-2.amazonaws.com/dailypediaplus/Dailytunes/";

        $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String mTune_url> = varReplacer1431;

        varReplacer1429 = 1;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1429;

        varReplacer1430 = null;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx> = varReplacer1430;

        return;
    }

    static boolean access$000(com.dailypedia.tune.DownloadTuneInfo)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        boolean z0;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        z0 = $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps>;

        return z0;
    }

    static boolean access$002(com.dailypedia.tune.DownloadTuneInfo, boolean)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        boolean $z0;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $z0 := @parameter1: boolean;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = $z0;

        return $z0;
    }

    static android.widget.Toast access$1000(com.dailypedia.tune.DownloadTuneInfo)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        android.widget.Toast r1;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        r1 = $r0.<com.dailypedia.tune.DownloadTuneInfo: android.widget.Toast toast>;

        return r1;
    }

    static android.widget.Toast access$1002(com.dailypedia.tune.DownloadTuneInfo, android.widget.Toast)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        android.widget.Toast $r1;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $r1 := @parameter1: android.widget.Toast;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: android.widget.Toast toast> = $r1;

        return $r1;
    }

    static int access$102(com.dailypedia.tune.DownloadTuneInfo, int)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        int $i0, varReplacer1617, varReplacer1618;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $i0 := @parameter1: int;

        varReplacer1618 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: int countTimeoutException> = varReplacer1618;

        varReplacer1617 = 0;

        return varReplacer1617;
    }

    static com.dailypedia.tune.UtilityTune access$200(com.dailypedia.tune.DownloadTuneInfo)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        com.dailypedia.tune.UtilityTune r1;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        r1 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        return r1;
    }

    static android.graphics.Bitmap access$300(com.dailypedia.tune.DownloadTuneInfo, int)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        int $i0;
        android.graphics.Bitmap $r1;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $i0 := @parameter1: int;

        $r1 = specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: android.graphics.Bitmap downloadImage(int)>($i0);

        return $r1;
    }

    static void access$400(com.dailypedia.tune.DownloadTuneInfo, android.graphics.Bitmap, java.lang.String)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        android.graphics.Bitmap $r1;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $r1 := @parameter1: android.graphics.Bitmap;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: void httpConnection(android.graphics.Bitmap,java.lang.String)>($r1, $r2);

        return;
    }

    static java.lang.String access$500(com.dailypedia.tune.DownloadTuneInfo)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.lang.String r1;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        r1 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        return r1;
    }

    static void access$600(com.dailypedia.tune.DownloadTuneInfo, long)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        long $l0, varReplacer1616;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $l0 := @parameter1: long;

        varReplacer1616 = 1000L;

        specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: void sleep(long)>(varReplacer1616);

        return;
    }

    static void access$700(com.dailypedia.tune.DownloadTuneInfo, boolean)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        boolean $z0;
        int varReplacer1613;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $z0 := @parameter1: boolean;

        varReplacer1613 = 1;

        specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: void sendBroadCast(boolean)>(varReplacer1613);

        return;
    }

    static java.lang.Thread access$800(com.dailypedia.tune.DownloadTuneInfo)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.lang.Thread r1;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        r1 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.Thread thread>;

        return r1;
    }

    static javax.net.ssl.SSLContext access$902(com.dailypedia.tune.DownloadTuneInfo, javax.net.ssl.SSLContext)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        javax.net.ssl.SSLContext $r1;
        null_type varReplacer1614, varReplacer1615;

        nop;

        $r0 := @parameter0: com.dailypedia.tune.DownloadTuneInfo;

        $r1 := @parameter1: javax.net.ssl.SSLContext;

        varReplacer1614 = null;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx> = varReplacer1614;

        varReplacer1615 = null;

        return varReplacer1615;
    }

    private android.graphics.Bitmap downloadImage(int)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        int $i0, $i1, varReplacer1774, varReplacer1775, varReplacer1777, varReplacer1778, varReplacer1785, varReplacer1786, varReplacer1787, varReplacer1790, varReplacer1792;
        java.lang.Throwable $r1, $r14, $r15, $r16, $r17, $r26;
        java.io.File $r2, $r8, r31;
        com.dailypedia.tune.DownloadTuneInfo$2 $r3, r29;
        java.lang.String $r4, $r10, $r11, $r18, varReplacer1769, varReplacer1770, varReplacer1771, varReplacer1772, varReplacer1773, varReplacer1776, varReplacer1779, varReplacer1780, varReplacer1781, varReplacer1782, varReplacer1788, varReplacer1789, varReplacer1791;
        javax.net.ssl.SSLContext $r5;
        java.lang.Object[] $r6;
        java.lang.StringBuilder $r7, r30;
        com.dailypedia.tune.UtilityTune $r9;
        boolean $z0;
        java.io.FileInputStream $r12, r32;
        android.graphics.Bitmap $r13;
        java.net.URL $r19, r33;
        java.net.URLConnection $r20;
        javax.net.ssl.HttpsURLConnection $r21;
        javax.net.ssl.SSLSocketFactory $r22;
        com.dailypedia.tune.DownloadTuneInfo$3 $r23, r34;
        java.io.InputStream $r24;
        byte[] $r25;
        java.lang.OutOfMemoryError $r27;
        java.lang.Exception $r28;
        javax.net.ssl.TrustManager[] r35;
        java.security.NoSuchAlgorithmException r36;
        java.security.KeyManagementException r37;
        java.net.MalformedURLException r38;
        java.io.IOException r39;
        null_type varReplacer1783, varReplacer1784, varReplacer1793, varReplacer1794;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $i0 := @parameter0: int;

        $r4 = "";

     label01:
        $r5 = $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx>;

     label02:
        if $r5 != null goto label11;

     label03:
        r29 = new com.dailypedia.tune.DownloadTuneInfo$2;

     label04:
        $r3 = r29;

     label05:
        specialinvoke r29.<com.dailypedia.tune.DownloadTuneInfo$2: void <init>(com.dailypedia.tune.DownloadTuneInfo)>($r0);

     label06:
        varReplacer1771 = "TLS";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1771);

     label07:
        $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx> = $r5;

        $r5 = $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx>;

        $r6 = newarray (javax.net.ssl.TrustManager)[1];

     label08:
        $r6[0] = $r3;

     label09:
        r35 = (javax.net.ssl.TrustManager[]) $r6;

     label10:
        varReplacer1783 = null;

        varReplacer1784 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1783, r35, varReplacer1783);

     label11:
        r31 = new java.io.File;

     label12:
        $r2 = r31;

     label13:
        r30 = new java.lang.StringBuilder;

     label14:
        $r7 = r30;

     label15:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r8 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label16:
        $r9 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r10 = $r9.<com.dailypedia.tune.UtilityTune: java.lang.String folderName>;

     label17:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        varReplacer1779 = "/";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1779);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        r30 = new java.lang.StringBuilder;

     label19:
        $r7 = r30;

     label20:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1788 = ".png";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1788);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r10, $r11);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label21:
        if $z0 == 0 goto label37;

     label22:
        r32 = new java.io.FileInputStream;

     label23:
        $r12 = r32;

     label24:
        specialinvoke r32.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        $r13 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r12);

     label25:
        return $r13;

     label26:
        $r14 := @caughtexception;

     label27:
        varReplacer1792 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1792;

        r36 = (java.security.NoSuchAlgorithmException) $r14;

     label28:
        virtualinvoke r36.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label29:
        goto label11;

     label30:
        $r15 := @caughtexception;

        $r10 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1776 = "SocketTimeoutException image downloading: ";

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1776);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r10, $r4);

        $i1 = $r0.<com.dailypedia.tune.DownloadTuneInfo: int countTimeoutException>;

        $i1 = $i1 + 1;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: int countTimeoutException> = $i1;

        if $i1 >= 3 goto label36;

        $r13 = specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: android.graphics.Bitmap downloadImage(int)>($i0);

        return $r13;

     label31:
        $r16 := @caughtexception;

     label32:
        varReplacer1777 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1777;

        r37 = (java.security.KeyManagementException) $r16;

     label33:
        virtualinvoke r37.<java.security.KeyManagementException: void printStackTrace()>();

     label34:
        goto label11;

     label35:
        $r17 := @caughtexception;

        varReplacer1774 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1774;

        $r4 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1773 = "MalformedURLException downloadImage:";

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1773);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r10);

        r38 = (java.net.MalformedURLException) $r17;

        virtualinvoke r38.<java.net.MalformedURLException: void printStackTrace()>();

     label36:
        varReplacer1793 = null;

        return varReplacer1793;

     label37:
        r30 = new java.lang.StringBuilder;

     label38:
        $r7 = r30;

     label39:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

     label40:
        $r10 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String mTune_url>;

     label41:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1772 = "/";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1772);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1781 = ".png";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1781);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label42:
        $r4 = $r10;

     label43:
        $r11 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

     label44:
        r30 = new java.lang.StringBuilder;

     label45:
        $r7 = r30;

     label46:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1780 = "DailyTune URL_TuneImg : ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1780);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r18 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r18);

     label47:
        r33 = new java.net.URL;

     label48:
        $r19 = r33;

     label49:
        specialinvoke r33.<java.net.URL: void <init>(java.lang.String)>($r10);

        $r20 = virtualinvoke $r19.<java.net.URL: java.net.URLConnection openConnection()>();

     label50:
        $r21 = (javax.net.ssl.HttpsURLConnection) $r20;

        $r5 = $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx>;

     label51:
        $r22 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r21.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r22);

     label52:
        r34 = new com.dailypedia.tune.DownloadTuneInfo$3;

     label53:
        $r23 = r34;

     label54:
        specialinvoke r34.<com.dailypedia.tune.DownloadTuneInfo$3: void <init>(com.dailypedia.tune.DownloadTuneInfo)>($r0);

        virtualinvoke $r21.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r23);

        varReplacer1778 = 30000;

        virtualinvoke $r21.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>(varReplacer1778);

        varReplacer1790 = 30000;

        virtualinvoke $r21.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>(varReplacer1790);

        virtualinvoke $r21.<javax.net.ssl.HttpsURLConnection: void connect()>();

        $r24 = virtualinvoke $r21.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();

        $r25 = specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: byte[] getBytes(java.io.InputStream)>($r24);

     label55:
        $r10 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

     label56:
        r30 = new java.lang.StringBuilder;

     label57:
        $r7 = r30;

     label58:
        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1789 = "iStream byte: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1789);

     label59:
        $i1 = lengthof $r25;

     label60:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r10, $r11);

     label61:
        $i1 = lengthof $r25;

     label62:
        varReplacer1787 = 0;

        $r13 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r25, varReplacer1787, $i1);

     label63:
        goto label25;

     label64:
        $r26 := @caughtexception;

        varReplacer1775 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1775;

        $r4 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1791 = "IOException downloadImage:";

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1791);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r10);

        r39 = (java.io.IOException) $r26;

        virtualinvoke r39.<java.io.IOException: void printStackTrace()>();

        goto label36;

     label65:
        $r27 := @caughtexception;

        varReplacer1786 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1786;

        $r4 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1770 = "OutOfMemoryError downloadImage:";

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1770);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r10);

        virtualinvoke $r27.<java.lang.OutOfMemoryError: void printStackTrace()>();

        goto label36;

     label66:
        $r28 := @caughtexception;

        varReplacer1785 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1785;

        $r4 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1769 = "Exception downloadImage:";

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1769);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, $r10);

        varReplacer1794 = null;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx> = varReplacer1794;

        virtualinvoke $r28.<java.lang.Exception: void printStackTrace()>();

        goto label36;

     label67:
        $r1 := @caughtexception;

        $r4 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        varReplacer1782 = "Throwable downloadImage:";

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1782);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r10);

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace()>();

        $i1 = $r0.<com.dailypedia.tune.DownloadTuneInfo: int countTimeoutException>;

        $i1 = $i1 + 1;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: int countTimeoutException> = $i1;

        if $i1 >= 3 goto label36;

        $r13 = specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: android.graphics.Bitmap downloadImage(int)>($i0);

        return $r13;

        catch java.net.SocketTimeoutException from label05 to label06 with label30;
        catch java.net.MalformedURLException from label05 to label06 with label35;
        catch java.io.IOException from label05 to label06 with label64;
        catch java.lang.OutOfMemoryError from label03 to label04 with label65;
        catch java.lang.OutOfMemoryError from label05 to label06 with label65;
        catch java.lang.Exception from label01 to label02 with label66;
        catch java.lang.Exception from label05 to label06 with label66;
        catch java.lang.Throwable from label01 to label02 with label67;
        catch java.lang.Throwable from label03 to label04 with label67;
        catch java.lang.Throwable from label05 to label06 with label67;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label26;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label26;
        catch java.security.KeyManagementException from label06 to label07 with label31;
        catch java.security.KeyManagementException from label10 to label11 with label31;
        catch java.net.SocketTimeoutException from label06 to label07 with label30;
        catch java.net.SocketTimeoutException from label10 to label11 with label30;
        catch java.net.MalformedURLException from label06 to label07 with label35;
        catch java.net.MalformedURLException from label10 to label11 with label35;
        catch java.io.IOException from label06 to label07 with label64;
        catch java.io.IOException from label10 to label11 with label64;
        catch java.lang.OutOfMemoryError from label06 to label07 with label65;
        catch java.lang.OutOfMemoryError from label10 to label11 with label65;
        catch java.lang.Exception from label06 to label11 with label66;
        catch java.lang.Throwable from label06 to label08 with label67;
        catch java.lang.Throwable from label09 to label11 with label67;
        catch java.net.SocketTimeoutException from label15 to label16 with label30;
        catch java.net.SocketTimeoutException from label17 to label18 with label30;
        catch java.net.SocketTimeoutException from label20 to label21 with label30;
        catch java.net.SocketTimeoutException from label24 to label25 with label30;
        catch java.net.SocketTimeoutException from label28 to label29 with label30;
        catch java.net.MalformedURLException from label15 to label16 with label35;
        catch java.net.MalformedURLException from label17 to label18 with label35;
        catch java.net.MalformedURLException from label20 to label21 with label35;
        catch java.net.MalformedURLException from label24 to label25 with label35;
        catch java.net.MalformedURLException from label28 to label29 with label35;
        catch java.io.IOException from label15 to label16 with label64;
        catch java.io.IOException from label17 to label18 with label64;
        catch java.io.IOException from label20 to label21 with label64;
        catch java.io.IOException from label24 to label25 with label64;
        catch java.io.IOException from label28 to label29 with label64;
        catch java.lang.OutOfMemoryError from label11 to label12 with label65;
        catch java.lang.OutOfMemoryError from label13 to label14 with label65;
        catch java.lang.OutOfMemoryError from label15 to label16 with label65;
        catch java.lang.OutOfMemoryError from label17 to label19 with label65;
        catch java.lang.OutOfMemoryError from label20 to label21 with label65;
        catch java.lang.OutOfMemoryError from label22 to label23 with label65;
        catch java.lang.OutOfMemoryError from label24 to label25 with label65;
        catch java.lang.OutOfMemoryError from label28 to label29 with label65;
        catch java.lang.Exception from label15 to label18 with label66;
        catch java.lang.Exception from label20 to label21 with label66;
        catch java.lang.Exception from label24 to label25 with label66;
        catch java.lang.Exception from label27 to label29 with label66;
        catch java.lang.Throwable from label11 to label12 with label67;
        catch java.lang.Throwable from label13 to label14 with label67;
        catch java.lang.Throwable from label15 to label19 with label67;
        catch java.lang.Throwable from label20 to label21 with label67;
        catch java.lang.Throwable from label22 to label23 with label67;
        catch java.lang.Throwable from label24 to label25 with label67;
        catch java.lang.Throwable from label27 to label29 with label67;
        catch java.net.SocketTimeoutException from label33 to label34 with label30;
        catch java.net.MalformedURLException from label33 to label34 with label35;
        catch java.io.IOException from label33 to label34 with label64;
        catch java.lang.OutOfMemoryError from label33 to label34 with label65;
        catch java.lang.Exception from label32 to label34 with label66;
        catch java.lang.Throwable from label32 to label34 with label67;
        catch java.net.SocketTimeoutException from label39 to label40 with label30;
        catch java.net.SocketTimeoutException from label41 to label42 with label30;
        catch java.net.SocketTimeoutException from label46 to label47 with label30;
        catch java.net.SocketTimeoutException from label49 to label50 with label30;
        catch java.net.SocketTimeoutException from label51 to label52 with label30;
        catch java.net.SocketTimeoutException from label54 to label55 with label30;
        catch java.net.SocketTimeoutException from label58 to label59 with label30;
        catch java.net.SocketTimeoutException from label60 to label61 with label30;
        catch java.net.SocketTimeoutException from label62 to label63 with label30;
        catch java.net.MalformedURLException from label39 to label40 with label35;
        catch java.net.MalformedURLException from label41 to label42 with label35;
        catch java.net.MalformedURLException from label46 to label47 with label35;
        catch java.net.MalformedURLException from label49 to label50 with label35;
        catch java.net.MalformedURLException from label51 to label52 with label35;
        catch java.net.MalformedURLException from label54 to label55 with label35;
        catch java.net.MalformedURLException from label58 to label59 with label35;
        catch java.net.MalformedURLException from label60 to label61 with label35;
        catch java.net.MalformedURLException from label62 to label63 with label35;
        catch java.io.IOException from label39 to label40 with label64;
        catch java.io.IOException from label41 to label42 with label64;
        catch java.io.IOException from label46 to label47 with label64;
        catch java.io.IOException from label49 to label50 with label64;
        catch java.io.IOException from label51 to label52 with label64;
        catch java.io.IOException from label54 to label55 with label64;
        catch java.io.IOException from label58 to label59 with label64;
        catch java.io.IOException from label60 to label61 with label64;
        catch java.io.IOException from label62 to label63 with label64;
        catch java.lang.OutOfMemoryError from label37 to label38 with label65;
        catch java.lang.OutOfMemoryError from label39 to label40 with label65;
        catch java.lang.OutOfMemoryError from label41 to label42 with label65;
        catch java.lang.OutOfMemoryError from label44 to label45 with label65;
        catch java.lang.OutOfMemoryError from label46 to label48 with label65;
        catch java.lang.OutOfMemoryError from label49 to label50 with label65;
        catch java.lang.OutOfMemoryError from label51 to label53 with label65;
        catch java.lang.OutOfMemoryError from label54 to label55 with label65;
        catch java.lang.OutOfMemoryError from label56 to label57 with label65;
        catch java.lang.OutOfMemoryError from label58 to label59 with label65;
        catch java.lang.OutOfMemoryError from label60 to label61 with label65;
        catch java.lang.OutOfMemoryError from label62 to label63 with label65;
        catch java.lang.Exception from label39 to label42 with label66;
        catch java.lang.Exception from label43 to label44 with label66;
        catch java.lang.Exception from label46 to label47 with label66;
        catch java.lang.Exception from label49 to label52 with label66;
        catch java.lang.Exception from label54 to label56 with label66;
        catch java.lang.Exception from label58 to label63 with label66;
        catch java.lang.Throwable from label37 to label38 with label67;
        catch java.lang.Throwable from label39 to label42 with label67;
        catch java.lang.Throwable from label43 to label45 with label67;
        catch java.lang.Throwable from label46 to label48 with label67;
        catch java.lang.Throwable from label49 to label53 with label67;
        catch java.lang.Throwable from label54 to label57 with label67;
        catch java.lang.Throwable from label58 to label59 with label67;
        catch java.lang.Throwable from label60 to label61 with label67;
        catch java.lang.Throwable from label62 to label63 with label67;
    }

    private byte[] getBytes(java.io.InputStream) throws java.io.IOException
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.io.InputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        byte[] $r3;
        int $i0, varReplacer1795, varReplacer1796;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = newarray (byte)[1024];

     label1:
        $i0 = lengthof $r3;

        varReplacer1795 = 0;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r3, varReplacer1795, $i0);

        if $i0 == -1 goto label2;

        varReplacer1796 = 0;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, varReplacer1796, $i0);

        goto label1;

     label2:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void flush()>();

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    private void httpConnection(android.graphics.Bitmap, java.lang.String)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        android.graphics.Bitmap $r1;
        java.lang.String $r2, $r7, $r15, $r17, $r19, varReplacer1803, varReplacer1804, varReplacer1805, varReplacer1807, varReplacer1808, varReplacer1812, varReplacer1814;
        java.lang.StringBuilder $r3, r29;
        java.io.File $r4, $r18, r32;
        javax.net.ssl.SSLContext $r5;
        java.lang.Object[] $r6;
        com.dailypedia.tune.UtilityTune $r8;
        boolean $z0;
        java.net.URL $r9, r30;
        java.net.URLConnection $r10;
        javax.net.ssl.HttpsURLConnection $r11;
        javax.net.ssl.SSLSocketFactory $r12;
        com.dailypedia.tune.DownloadTuneInfo$5 $r13, r31;
        java.io.InputStream $r14;
        int $i0, varReplacer1797, varReplacer1798, varReplacer1799, varReplacer1800, varReplacer1802, varReplacer1806, varReplacer1811, varReplacer1813, varReplacer1815;
        java.util.ArrayList $r16;
        java.lang.Boolean $r20;
        java.lang.Integer $r21;
        java.lang.Throwable $r22, $r23, $r24, $r25, $r26;
        char $c1;
        java.lang.Exception $r27;
        com.dailypedia.tune.DownloadTuneInfo$4 r28;
        javax.net.ssl.TrustManager[] r33;
        java.security.NoSuchAlgorithmException r34;
        java.security.KeyManagementException r35;
        java.net.MalformedURLException r36;
        java.io.IOException r37;
        null_type varReplacer1801, varReplacer1809, varReplacer1810;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 := @parameter1: java.lang.String;

        $r5 = $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx>;

        if $r5 != null goto label04;

        r28 = new com.dailypedia.tune.DownloadTuneInfo$4;

        specialinvoke r28.<com.dailypedia.tune.DownloadTuneInfo$4: void <init>(com.dailypedia.tune.DownloadTuneInfo)>($r0);

     label01:
        varReplacer1807 = "TLS";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1807);

     label02:
        $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx> = $r5;

        $r5 = $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx>;

        $r6 = newarray (javax.net.ssl.TrustManager)[1];

        $r6[0] = r28;

        r33 = (javax.net.ssl.TrustManager[]) $r6;

     label03:
        varReplacer1809 = null;

        varReplacer1810 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1809, r33, varReplacer1809);

     label04:
        $r7 = "";

     label05:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

     label06:
        $z0 = virtualinvoke $r8.<com.dailypedia.tune.UtilityTune: boolean readTxtFile(java.lang.String,android.graphics.Bitmap)>($r2, $r1);

     label07:
        if $z0 != 0 goto label56;

        r30 = new java.net.URL;

        $r9 = r30;

        r29 = new java.lang.StringBuilder;

        $r3 = r29;

     label08:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

     label09:
        $r7 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String mTune_url>;

     label10:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer1814 = "/";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1814);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer1808 = ".txt";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1808);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.net.URL: void <init>(java.lang.String)>($r7);

        $r10 = virtualinvoke $r9.<java.net.URL: java.net.URLConnection openConnection()>();

     label11:
        $r11 = (javax.net.ssl.HttpsURLConnection) $r10;

        $r5 = $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx>;

     label12:
        $r12 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r12);

     label13:
        r31 = new com.dailypedia.tune.DownloadTuneInfo$5;

        $r13 = r31;

     label14:
        specialinvoke r31.<com.dailypedia.tune.DownloadTuneInfo$5: void <init>(com.dailypedia.tune.DownloadTuneInfo)>($r0);

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r13);

        varReplacer1811 = 10000;

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>(varReplacer1811);

        varReplacer1802 = 10000;

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>(varReplacer1802);

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void connect()>();

        $r14 = virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();

     label15:
        r29 = new java.lang.StringBuilder;

        $r3 = r29;

     label16:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

     label17:
        $i0 = virtualinvoke $r14.<java.io.InputStream: int read()>();

     label18:
        if $i0 != -1 goto label52;

     label19:
        $r15 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        $r7 = $r15;

     label21:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r16 = $r8.<com.dailypedia.tune.UtilityTune: java.util.ArrayList mTuneInfo>;

     label22:
        $r17 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label23:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r16 = $r8.<com.dailypedia.tune.UtilityTune: java.util.ArrayList mTuneIcon>;

     label24:
        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label25:
        r32 = new java.io.File;

        $r4 = r32;

        r29 = new java.lang.StringBuilder;

        $r3 = r29;

     label26:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r18 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

     label27:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r17 = $r8.<com.dailypedia.tune.UtilityTune: java.lang.String folderName>;

     label28:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        varReplacer1803 = "/";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1803);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r17 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label29:
        r29 = new java.lang.StringBuilder;

        $r3 = r29;

     label30:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer1805 = ".mp3";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1805);

        $r19 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r17, $r19);

     label31:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r16 = $r8.<com.dailypedia.tune.UtilityTune: java.util.ArrayList isUnLocked>;

     label32:
        varReplacer1798 = 0;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer1798);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label33:
        if $z0 == 0 goto label36;

     label34:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r16 = $r8.<com.dailypedia.tune.UtilityTune: java.util.ArrayList isUnLocked>;

     label35:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        varReplacer1799 = 1;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer1799);

        virtualinvoke $r16.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, $r20);

     label36:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

     label37:
        $r15 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r8.<com.dailypedia.tune.UtilityTune: void save(android.graphics.Bitmap,java.lang.String,java.lang.String)>($r1, $r2, $r15);

     label38:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r16 = $r8.<com.dailypedia.tune.UtilityTune: java.util.ArrayList mediaPlayerStatus>;

     label39:
        $i0 = <com.dailypedia.R$drawable: int play>;

     label40:
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label41:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $r16 = $r8.<com.dailypedia.tune.UtilityTune: java.util.ArrayList mp3Status>;

     label42:
        $i0 = <com.dailypedia.R$drawable: int unlock>;

     label43:
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label44:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $i0 = $r8.<com.dailypedia.tune.UtilityTune: int indexTuneCount>;

     label45:
        $i0 = $i0 % 10;

        if $i0 != 0 goto label60;

        $z0 = 1;

     label46:
        specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: void sendBroadCast(boolean)>($z0);

     label47:
        $r15 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

     label48:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r15, $r7);

     label49:
        return;

     label50:
        $r22 := @caughtexception;

        varReplacer1815 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1815;

        r34 = (java.security.NoSuchAlgorithmException) $r22;

        virtualinvoke r34.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label04;

     label51:
        $r23 := @caughtexception;

        varReplacer1806 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1806;

        r35 = (java.security.KeyManagementException) $r23;

        virtualinvoke r35.<java.security.KeyManagementException: void printStackTrace()>();

        goto label04;

     label52:
        $c1 = (char) $i0;

     label53:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label54:
        goto label17;

     label55:
        $r24 := @caughtexception;

        $r7 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        varReplacer1812 = "TimeoutException AppData downloading: ";

        $r3 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1812);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r2);

        $i0 = $r0.<com.dailypedia.tune.DownloadTuneInfo: int countTimeoutException>;

        $i0 = $i0 + 1;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: int countTimeoutException> = $i0;

        if $i0 >= 3 goto label63;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        varReplacer1804 = "";

        $r3 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1804);

        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

        $i0 = $r8.<com.dailypedia.tune.UtilityTune: int indexTuneCount>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: void httpConnection(android.graphics.Bitmap,java.lang.String)>($r1, $r2);

        return;

     label56:
        $r8 = $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune>;

     label57:
        $r15 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r8.<com.dailypedia.tune.UtilityTune: void save(android.graphics.Bitmap,java.lang.String,java.lang.String)>($r1, $r2, $r15);

     label58:
        goto label38;

     label59:
        $r25 := @caughtexception;

        varReplacer1797 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1797;

        r36 = (java.net.MalformedURLException) $r25;

        virtualinvoke r36.<java.net.MalformedURLException: void printStackTrace()>();

        return;

     label60:
        $z0 = 0;

        goto label46;

     label61:
        $r26 := @caughtexception;

        varReplacer1800 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1800;

        r37 = (java.io.IOException) $r26;

        virtualinvoke r37.<java.io.IOException: void printStackTrace()>();

        return;

     label62:
        $r27 := @caughtexception;

        varReplacer1813 = 0;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: boolean isDownloadingApps> = varReplacer1813;

        varReplacer1801 = null;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: javax.net.ssl.SSLContext ctx> = varReplacer1801;

        virtualinvoke $r27.<java.lang.Exception: void printStackTrace()>();

     label63:
        return;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label50;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label50;
        catch java.security.KeyManagementException from label01 to label02 with label51;
        catch java.security.KeyManagementException from label03 to label04 with label51;
        catch java.net.SocketTimeoutException from label06 to label07 with label55;
        catch java.net.SocketTimeoutException from label08 to label09 with label55;
        catch java.net.SocketTimeoutException from label10 to label11 with label55;
        catch java.net.SocketTimeoutException from label12 to label13 with label55;
        catch java.net.SocketTimeoutException from label14 to label15 with label55;
        catch java.net.SocketTimeoutException from label16 to label18 with label55;
        catch java.net.SocketTimeoutException from label19 to label20 with label55;
        catch java.net.SocketTimeoutException from label22 to label23 with label55;
        catch java.net.SocketTimeoutException from label24 to label25 with label55;
        catch java.net.SocketTimeoutException from label26 to label27 with label55;
        catch java.net.SocketTimeoutException from label28 to label29 with label55;
        catch java.net.SocketTimeoutException from label30 to label31 with label55;
        catch java.net.SocketTimeoutException from label32 to label33 with label55;
        catch java.net.SocketTimeoutException from label35 to label36 with label55;
        catch java.net.SocketTimeoutException from label37 to label38 with label55;
        catch java.net.SocketTimeoutException from label40 to label41 with label55;
        catch java.net.SocketTimeoutException from label43 to label44 with label55;
        catch java.net.SocketTimeoutException from label46 to label47 with label55;
        catch java.net.SocketTimeoutException from label48 to label49 with label55;
        catch java.net.MalformedURLException from label06 to label07 with label59;
        catch java.net.MalformedURLException from label08 to label09 with label59;
        catch java.net.MalformedURLException from label10 to label11 with label59;
        catch java.net.MalformedURLException from label12 to label13 with label59;
        catch java.net.MalformedURLException from label14 to label15 with label59;
        catch java.net.MalformedURLException from label16 to label18 with label59;
        catch java.net.MalformedURLException from label19 to label20 with label59;
        catch java.net.MalformedURLException from label22 to label23 with label59;
        catch java.net.MalformedURLException from label24 to label25 with label59;
        catch java.net.MalformedURLException from label26 to label27 with label59;
        catch java.net.MalformedURLException from label28 to label29 with label59;
        catch java.net.MalformedURLException from label30 to label31 with label59;
        catch java.net.MalformedURLException from label32 to label33 with label59;
        catch java.net.MalformedURLException from label35 to label36 with label59;
        catch java.net.MalformedURLException from label37 to label38 with label59;
        catch java.net.MalformedURLException from label40 to label41 with label59;
        catch java.net.MalformedURLException from label43 to label44 with label59;
        catch java.net.MalformedURLException from label46 to label47 with label59;
        catch java.net.MalformedURLException from label48 to label49 with label59;
        catch java.io.IOException from label06 to label07 with label61;
        catch java.io.IOException from label08 to label09 with label61;
        catch java.io.IOException from label10 to label11 with label61;
        catch java.io.IOException from label12 to label13 with label61;
        catch java.io.IOException from label14 to label15 with label61;
        catch java.io.IOException from label16 to label18 with label61;
        catch java.io.IOException from label19 to label20 with label61;
        catch java.io.IOException from label22 to label23 with label61;
        catch java.io.IOException from label24 to label25 with label61;
        catch java.io.IOException from label26 to label27 with label61;
        catch java.io.IOException from label28 to label29 with label61;
        catch java.io.IOException from label30 to label31 with label61;
        catch java.io.IOException from label32 to label33 with label61;
        catch java.io.IOException from label35 to label36 with label61;
        catch java.io.IOException from label37 to label38 with label61;
        catch java.io.IOException from label40 to label41 with label61;
        catch java.io.IOException from label43 to label44 with label61;
        catch java.io.IOException from label46 to label47 with label61;
        catch java.io.IOException from label48 to label49 with label61;
        catch java.lang.Exception from label05 to label07 with label62;
        catch java.lang.Exception from label08 to label13 with label62;
        catch java.lang.Exception from label14 to label15 with label62;
        catch java.lang.Exception from label16 to label18 with label62;
        catch java.lang.Exception from label19 to label20 with label62;
        catch java.lang.Exception from label21 to label25 with label62;
        catch java.lang.Exception from label26 to label29 with label62;
        catch java.lang.Exception from label30 to label33 with label62;
        catch java.lang.Exception from label34 to label39 with label62;
        catch java.lang.Exception from label40 to label42 with label62;
        catch java.lang.Exception from label43 to label45 with label62;
        catch java.lang.Exception from label46 to label49 with label62;
        catch java.net.SocketTimeoutException from label53 to label54 with label55;
        catch java.net.MalformedURLException from label53 to label54 with label59;
        catch java.io.IOException from label53 to label54 with label61;
        catch java.lang.Exception from label53 to label54 with label62;
        catch java.net.SocketTimeoutException from label57 to label58 with label55;
        catch java.net.MalformedURLException from label57 to label58 with label59;
        catch java.io.IOException from label57 to label58 with label61;
        catch java.lang.Exception from label56 to label58 with label62;
    }

    private void sendBroadCast(boolean)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        boolean $z0;
        android.content.Intent $r1;
        java.lang.String varReplacer1816, varReplacer1817, varReplacer1818;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $z0 := @parameter0: boolean;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        varReplacer1816 = "isRefreshPlanner";

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>(varReplacer1816, $z0);

        varReplacer1817 = "com.tune.dailypedia.intent.action.PROCESS_RESPONSE";

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>(varReplacer1817);

        varReplacer1818 = "android.intent.category.DEFAULT";

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(varReplacer1818);

        virtualinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: void sendBroadcast(android.content.Intent)>($r1);

        return;
    }

    private void sleep(long)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        long $l0, varReplacer1838;
        java.lang.Throwable $r1;
        java.lang.InterruptedException r2;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $l0 := @parameter0: long;

     label1:
        varReplacer1838 = 1000L;

        staticinvoke <java.lang.Thread: void sleep(long)>(varReplacer1838);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        r2 = (java.lang.InterruptedException) $r1;

        virtualinvoke r2.<java.lang.InterruptedException: void printStackTrace()>();

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void startDownLoadThread()
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.lang.Thread $r1;
        com.dailypedia.tune.DownloadTuneInfo$1 $r2;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $r1 = new java.lang.Thread;

        $r2 = new com.dailypedia.tune.DownloadTuneInfo$1;

        specialinvoke $r2.<com.dailypedia.tune.DownloadTuneInfo$1: void <init>(com.dailypedia.tune.DownloadTuneInfo)>($r0);

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.Thread thread> = $r1;

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.dailypedia.tune.DownloadTuneInfo this;
        android.content.Intent parameter0;

        nop;

        this := @this: com.dailypedia.tune.DownloadTuneInfo;

        parameter0 := @parameter0: android.content.Intent;

        this.<com.dailypedia.tune.DownloadTuneInfo: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.dailypedia.tune.DownloadTuneInfo: android.os.IBinder ipcBinder_0> = parameter0;

        return parameter0;
    }

    public void onCreate()
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.lang.Exception $r1;
        com.dailypedia.tune.UtilityTune $r2;
        android.os.Handler $r3;
        android.os.Looper $r4;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        specialinvoke $r0.<android.app.Service: void onCreate()>();

     label1:
        $r2 = staticinvoke <com.dailypedia.tune.UtilityTune: com.dailypedia.tune.UtilityTune getInstance()>();

        $r0.<com.dailypedia.tune.DownloadTuneInfo: com.dailypedia.tune.UtilityTune mUtilityTune> = $r2;

        specialinvoke $r0.<com.dailypedia.tune.DownloadTuneInfo: void startDownLoadThread()>();

     label2:
        $r3 = new android.os.Handler;

     label3:
        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        $r0.<com.dailypedia.tune.DownloadTuneInfo: android.os.Handler mHandler> = $r3;

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void onDestroy()
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.lang.String $r1, varReplacer1434;
        null_type varReplacer1433;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $r1 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.String TAG>;

        varReplacer1434 = "DownloadAppInfo onDestroy called";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, varReplacer1434);

        varReplacer1433 = null;

        $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.Thread thread> = varReplacer1433;

        specialinvoke $r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        android.content.Intent $r1;
        int $i0, $i1, varReplacer1432;
        java.lang.Exception $r2;
        boolean $z0;
        java.lang.Thread $r3;

        nop;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $r3 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.Thread thread>;

        $z0 = virtualinvoke $r3.<java.lang.Thread: boolean isAlive()>();

     label2:
        if $z0 != 0 goto label4;

     label3:
        $r3 = $r0.<com.dailypedia.tune.DownloadTuneInfo: java.lang.Thread thread>;

        virtualinvoke $r3.<java.lang.Thread: void start()>();

     label4:
        varReplacer1432 = 1;

        return varReplacer1432;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        goto label4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void showToastMSG(java.lang.String)
    {
        com.dailypedia.tune.DownloadTuneInfo $r0;
        java.lang.String $r1;
        android.os.Handler $r2;
        com.dailypedia.tune.DownloadTuneInfo$6 $r3;

        $r0 := @this: com.dailypedia.tune.DownloadTuneInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.dailypedia.tune.DownloadTuneInfo: android.os.Handler mHandler>;

        $r3 = new com.dailypedia.tune.DownloadTuneInfo$6;

        specialinvoke $r3.<com.dailypedia.tune.DownloadTuneInfo$6: void <init>(com.dailypedia.tune.DownloadTuneInfo,java.lang.String)>($r0, $r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }
}
