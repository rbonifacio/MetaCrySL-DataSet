class com.aspose.cells.zbp extends java.lang.Object
{
    private java.security.MessageDigest a;
    private javax.crypto.Cipher b;
    private int c;
    private byte[] d;
    private byte[] e;
    private byte[] f;
    private byte[] g;

    public void <init>(java.lang.String, int) throws java.lang.Exception
    {
        com.aspose.cells.zbp $r0;
        java.lang.String $r1;
        int $i0;
        byte[] $r2;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[16];

        $r2[0] = 83;

        $r2[1] = 15;

        $r2[2] = -37;

        $r2[3] = -89;

        $r2[4] = 86;

        $r2[5] = -75;

        $r2[6] = -10;

        $r2[7] = -115;

        $r2[8] = 61;

        $r2[9] = -31;

        $r2[10] = -106;

        $r2[11] = 31;

        $r2[12] = 16;

        $r2[13] = 81;

        $r2[14] = 36;

        $r2[15] = 2;

        specialinvoke $r0.<com.aspose.cells.zbp: void a(java.lang.String,byte[],int,int)>($r1, $r2, $i0, 1);

        return;
    }

    public void <init>(java.lang.String, byte[], int) throws java.lang.Exception
    {
        com.aspose.cells.zbp $r0;
        java.lang.String $r1;
        byte[] $r2;
        int $i0, varReplacer23348;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = specialinvoke $r0.<com.aspose.cells.zbp: int b(int)>($i0);

        varReplacer23348 = 2;

        specialinvoke $r0.<com.aspose.cells.zbp: void a(java.lang.String,byte[],int,int)>($r1, $r2, $i0, varReplacer23348);

        return;
    }

    public void <init>(java.lang.String, byte[], byte[], byte[], java.lang.String, long, long, long, long) throws java.lang.Exception
    {
        com.aspose.cells.zbp $r0;
        java.lang.String $r1, $r5;
        byte[] $r2, $r3, $r4;
        long $l0, $l1, $l2, $l3;
        int $i4;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: byte[];

        $r5 := @parameter4: java.lang.String;

        $l0 := @parameter5: long;

        $l1 := @parameter6: long;

        $l2 := @parameter7: long;

        $l3 := @parameter8: long;

        $i4 = (int) $l3;

        specialinvoke $r0.<com.aspose.cells.zbp: void <init>(java.lang.String,byte[],int)>($r1, $r2, $i4);

        $r0.<com.aspose.cells.zbp: byte[] f> = $r3;

        $r0.<com.aspose.cells.zbp: byte[] g> = $r4;

        return;
    }

    private short a(int)
    {
        com.aspose.cells.zbp $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: com.aspose.cells.zbp;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 128: goto label2;
            case 192: goto label3;
            case 256: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported key size: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        return 26126;

     label3:
        return 26127;

     label4:
        return 26128;
    }

    private void a(java.lang.String, byte[], int, int) throws java.lang.Exception
    {
        com.aspose.cells.zbp $r0;
        java.lang.String $r1, varReplacer23353, varReplacer23354, varReplacer23355, varReplacer23356, varReplacer23357, varReplacer23359;
        byte[] $r2, $r4;
        int $i0, $i1, $i2, varReplacer23358;
        java.lang.IllegalArgumentException $r3;
        java.security.MessageDigest $r5;
        javax.crypto.Cipher $r6;
        javax.crypto.spec.SecretKeySpec $r7;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        if $r1 == null goto label1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 >= 1 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        varReplacer23354 = "The password could not be null or empty.";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer23354);

        throw $r3;

     label2:
        varReplacer23356 = "UTF-16LE";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer23356);

        $r0.<com.aspose.cells.zbp: byte[] d> = $r4;

        $r4 = $r0.<com.aspose.cells.zbp: byte[] d>;

        $i2 = lengthof $r4;

        if $i2 >= 1 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        varReplacer23357 = "The password could not be null or empty.";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer23357);

        throw $r3;

     label3:
        $r0.<com.aspose.cells.zbp: int c> = $i0;

        $r0.<com.aspose.cells.zbp: byte[] e> = $r2;

        varReplacer23359 = "SHA-1";

        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23359);

        $r0.<com.aspose.cells.zbp: java.security.MessageDigest a> = $r5;

        varReplacer23353 = "AES/ECB/NoPadding";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer23353);

        $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b> = $r6;

        $r7 = new javax.crypto.spec.SecretKeySpec;

        $r2 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] c()>();

        varReplacer23355 = "AES";

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer23355);

        $r6 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        varReplacer23358 = 2;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer23358, $r7);

        return;
    }

    private byte[] a(byte[])
    {
        com.aspose.cells.zbp $r0;
        byte[] $r1;
        java.security.MessageDigest $r2;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.aspose.cells.zbp: java.security.MessageDigest a>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

        $r2 = $r0.<com.aspose.cells.zbp: java.security.MessageDigest a>;

        $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        return $r1;
    }

    private int b(int)
    {
        com.aspose.cells.zbp $r0;
        int $i0, varReplacer23349, varReplacer23351, varReplacer23352;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer23350;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 26126: goto label2;
            case 26127: goto label3;
            case 26128: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer23350 = "Unsupported keyAlgId: ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer23350);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        varReplacer23352 = 128;

        return varReplacer23352;

     label3:
        varReplacer23351 = 192;

        return varReplacer23351;

     label4:
        varReplacer23349 = 256;

        return varReplacer23349;
    }

    private byte[] b(byte[], byte[])
    {
        com.aspose.cells.zbp $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, varReplacer23380, varReplacer23381, varReplacer23382, varReplacer23383, varReplacer23384, varReplacer23385, varReplacer23386, varReplacer23387, varReplacer23388, varReplacer23389;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

        $r3 = newarray (byte)[$i0];

        $i0 = lengthof $r2;

        varReplacer23386 = 0;

        varReplacer23387 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer23386, $r3, varReplacer23386, $i0);

        $i0 = lengthof $r2;

        $i1 = lengthof $r1;

        varReplacer23389 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer23389, $r3, $i0, $i1);

        $r2 = newarray (byte)[24];

        $r1 = newarray (byte)[4];

        $r3 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r3);

        $i0 = 0;

     label1:
        if $i0 >= 50000 goto label2;

        varReplacer23388 = 0;

        staticinvoke <com.aspose.cells.zadu: void a(byte[],int,int)>($r1, varReplacer23388, $i0);

        varReplacer23380 = 0;

        varReplacer23381 = 0;

        varReplacer23382 = 4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer23380, $r2, varReplacer23380, varReplacer23382);

        varReplacer23383 = 0;

        varReplacer23384 = 4;

        varReplacer23385 = 20;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, varReplacer23383, $r2, varReplacer23384, varReplacer23385);

        $r3 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private byte[] c()
    {
        com.aspose.cells.zbp $r0;
        byte[] $r1, $r2, $r3;
        int $i0, varReplacer23360, varReplacer23361, varReplacer23362, varReplacer23363, varReplacer23364, varReplacer23365, varReplacer23367, varReplacer23368, varReplacer23369, varReplacer23370, varReplacer23371, varReplacer23372, varReplacer23373, varReplacer23374, varReplacer23375, varReplacer23376, varReplacer23377, varReplacer23378, varReplacer23379;
        byte $b1, $b2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, varReplacer23366;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 = $r0.<com.aspose.cells.zbp: byte[] d>;

        $r2 = $r0.<com.aspose.cells.zbp: byte[] e>;

        $r1 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] b(byte[],byte[])>($r1, $r2);

        $r2 = newarray (byte)[24];

        $i0 = lengthof $r1;

        varReplacer23364 = 0;

        varReplacer23365 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer23364, $r2, varReplacer23364, $i0);

        $r3 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r2);

        $r2 = newarray (byte)[64];

        varReplacer23376 = 54;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r2, varReplacer23376);

        $i0 = 0;

     label1:
        if $i0 >= 20 goto label2;

        $b1 = $r2[$i0];

        $b2 = $r3[$i0];

        $b1 = $b1 ^ $b2;

        $r2[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r1 = newarray (byte)[64];

        varReplacer23360 = 92;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r1, varReplacer23360);

        $i0 = 0;

     label3:
        if $i0 >= 20 goto label4;

        $b1 = $r1[$i0];

        $b2 = $r3[$i0];

        $b1 = $b1 ^ $b2;

        $r1[$i0] = $b1;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i0 = $r0.<com.aspose.cells.zbp: int c>;

        lookupswitch($i0)
        {
            case 128: goto label6;
            case 192: goto label7;
            case 256: goto label8;
            default: goto label5;
        };

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer23366 = "Unsupported key size: ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer23366);

        $i0 = $r0.<com.aspose.cells.zbp: int c>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label6:
        $r1 = newarray (byte)[16];

        $r2 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r2);

        varReplacer23367 = 0;

        varReplacer23368 = 0;

        varReplacer23369 = 16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer23367, $r1, varReplacer23367, varReplacer23369);

        return $r1;

     label7:
        $r3 = newarray (byte)[24];

        $r2 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r2);

        varReplacer23373 = 0;

        varReplacer23374 = 0;

        varReplacer23375 = 16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer23373, $r3, varReplacer23373, varReplacer23375);

        $r1 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r1);

        varReplacer23361 = 0;

        varReplacer23362 = 16;

        varReplacer23363 = 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer23361, $r3, varReplacer23362, varReplacer23363);

        return $r3;

     label8:
        $r3 = newarray (byte)[32];

        $r2 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r2);

        varReplacer23370 = 0;

        varReplacer23371 = 0;

        varReplacer23372 = 16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer23370, $r3, varReplacer23370, varReplacer23372);

        $r1 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r1);

        varReplacer23377 = 0;

        varReplacer23378 = 16;

        varReplacer23379 = 16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer23377, $r3, varReplacer23378, varReplacer23378);

        return $r3;
    }

    public com.aspose.cells.c.a.d.zh a(com.aspose.cells.c.a.d.zh) throws java.lang.Exception
    {
        com.aspose.cells.zbp $r0;
        com.aspose.cells.c.a.d.zh $r1;
        int $i0, $i2, $i3, varReplacer23332, varReplacer23333, varReplacer23334, varReplacer23335, varReplacer23336, varReplacer23337, varReplacer23339, varReplacer23341, varReplacer23342, varReplacer23343, varReplacer23344, varReplacer23345;
        com.aspose.cells.c.a.d.zb $r2;
        com.aspose.cells.c.a.d.za $r3;
        long $l1, varReplacer23338, varReplacer23340;
        com.aspose.cells.c.a.d.zm $r4;
        byte[] $r5;
        javax.crypto.Cipher $r6;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: com.aspose.cells.c.a.d.zh;

        $r3 = new com.aspose.cells.c.a.d.za;

        specialinvoke $r3.<com.aspose.cells.c.a.d.za: void <init>(com.aspose.cells.c.a.d.zm)>($r1);

        $l1 = virtualinvoke $r1.<com.aspose.cells.c.a.d.zh: long h()>();

        $l1 = $l1 + 15L;

        $l1 = $l1 / 16L;

        $i0 = (int) $l1;

        $r1 = new com.aspose.cells.c.a.d.zh;

        $i2 = $i0 * 16;

        specialinvoke $r1.<com.aspose.cells.c.a.d.zh: void <init>(int)>($i2);

        $r2 = new com.aspose.cells.c.a.d.zb;

        specialinvoke $r2.<com.aspose.cells.c.a.d.zb: void <init>(com.aspose.cells.c.a.d.zm)>($r1);

        $r4 = virtualinvoke $r3.<com.aspose.cells.c.a.d.za: com.aspose.cells.c.a.d.zm k()>();

        varReplacer23340 = 8L;

        varReplacer23341 = 0;

        virtualinvoke $r4.<com.aspose.cells.c.a.d.zm: long a(long,int)>(varReplacer23340, varReplacer23341);

        $r5 = newarray (byte)[16];

        $i2 = 0;

     label1:
        $i3 = $i0 + -1;

        if $i2 >= $i3 goto label2;

        varReplacer23332 = 0;

        varReplacer23333 = 16;

        virtualinvoke $r3.<com.aspose.cells.c.a.d.za: int a(byte[],int,int)>($r5, varReplacer23332, varReplacer23333);

        $r6 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        varReplacer23336 = 0;

        varReplacer23337 = 16;

        virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r5, varReplacer23336, varReplacer23337, $r5);

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        varReplacer23344 = 0;

        varReplacer23345 = 16;

        $i0 = virtualinvoke $r3.<com.aspose.cells.c.a.d.za: int a(byte[],int,int)>($r5, varReplacer23344, varReplacer23345);

        if $i0 <= 0 goto label4;

        if $i0 >= 16 goto label3;

        varReplacer23342 = 16;

        varReplacer23343 = 0;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r5, $i0, varReplacer23342, varReplacer23343);

     label3:
        $r6 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        varReplacer23334 = 0;

        varReplacer23335 = 16;

        virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r5, varReplacer23334, varReplacer23335, $r5);

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r5);

     label4:
        virtualinvoke $r3.<com.aspose.cells.c.a.d.za: void l()>();

        varReplacer23338 = 0L;

        varReplacer23339 = 0;

        virtualinvoke $r1.<com.aspose.cells.c.a.d.zh: long a(long,int)>(varReplacer23338, varReplacer23339);

        return $r1;
    }

    public boolean a()
    {
        com.aspose.cells.zbp $r0;
        byte[] $r1, $r2;
        boolean $z0;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r2 = $r0.<com.aspose.cells.zbp: byte[] f>;

        $r1 = $r0.<com.aspose.cells.zbp: byte[] g>;

        $z0 = virtualinvoke $r0.<com.aspose.cells.zbp: boolean a(byte[],byte[])>($r2, $r1);

        return $z0;
    }

    public boolean a(byte[], byte[])
    {
        com.aspose.cells.zbp $r0;
        byte[] $r1, $r2;
        byte $b0, $b2;
        javax.crypto.Cipher $r3;
        int $i1, varReplacer23346, varReplacer23347;
        java.lang.Exception $r4;
        java.lang.RuntimeException $r5;

        nop;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

     label1:
        $r3 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        $r1 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r1);

        $r3 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

     label2:
        $i1 = 0;

     label3:
        if $i1 >= 20 goto label7;

     label4:
        $b2 = $r1[$i1];

        $b0 = $r2[$i1];

     label5:
        if $b2 == $b0 goto label6;

        varReplacer23347 = 0;

        return varReplacer23347;

     label6:
        $i1 = $i1 + 1;

        goto label3;

     label7:
        varReplacer23346 = 1;

        return varReplacer23346;

     label8:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
    }

    public com.aspose.cells.c.a.d.zh b() throws java.lang.Exception
    {
        com.aspose.cells.zbp $r0;
        com.aspose.cells.c.a.d.zh $r1;
        com.aspose.cells.c.a.d.zb $r2;
        byte[] $r3, $r5, $r6, $r7;
        int $i0;
        short $s1;
        byte $b2;
        java.lang.String $r4;
        javax.crypto.Cipher $r8;
        com.aspose.cells.c.a.d.zm $r9;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 = new com.aspose.cells.c.a.d.zh;

        specialinvoke $r1.<com.aspose.cells.c.a.d.zh: void <init>(int)>(248);

        $r2 = new com.aspose.cells.c.a.d.zb;

        specialinvoke $r2.<com.aspose.cells.c.a.d.zb: void <init>(com.aspose.cells.c.a.d.zm)>($r1);

        $r3 = newarray (byte)[16];

        $r3[0] = 3;

        $r3[2] = 2;

        $r3[4] = 36;

        $r3[8] = -92;

        $r3[12] = 36;

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r3);

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r3, 0);

        $i0 = $r0.<com.aspose.cells.zbp: int c>;

        $s1 = specialinvoke $r0.<com.aspose.cells.zbp: short a(int)>($i0);

        staticinvoke <com.aspose.cells.zadu: void a(byte[],int,short)>($r3, 4, $s1);

        $r3[8] = 4;

        $r3[9] = -128;

        $i0 = $r0.<com.aspose.cells.zbp: int c>;

        $b2 = (byte) $i0;

        $r3[12] = $b2;

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r3);

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r3, 0);

        $r3[0] = 24;

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[],int,int)>($r3, 0, 12);

        $r4 = "Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)\u0000";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16LE");

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r5);

        $r3[0] = 16;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r3, 1, 4, 0);

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[],int,int)>($r3, 0, 4);

        $r5 = $r0.<com.aspose.cells.zbp: byte[] e>;

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r5);

        $r5 = newarray (byte)[32];

        $r6 = newarray (byte)[16];

        $r6[0] = 0;

        $r6[1] = 17;

        $r6[2] = 17;

        $r6[3] = 34;

        $r6[4] = 34;

        $r6[5] = 50;

        $r6[6] = 51;

        $r6[7] = 67;

        $r6[8] = 68;

        $r6[9] = 84;

        $r6[10] = 85;

        $r6[11] = 69;

        $r6[12] = 36;

        $r6[13] = 60;

        $r6[14] = 68;

        $r6[15] = 4;

        $r7 = specialinvoke $r0.<com.aspose.cells.zbp: byte[] a(byte[])>($r6);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r5, 0, 20);

        $r8 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        $i0 = lengthof $r6;

        virtualinvoke $r8.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r6, 0, $i0, $r6);

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r6);

        $r3[0] = 20;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r3, 1, 4, 0);

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[],int,int)>($r3, 0, 4);

        $r8 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        virtualinvoke $r8.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r5, 0, 16, $r5);

        $r8 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        virtualinvoke $r8.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r5, 16, 16, $r5, 16);

        virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r5);

        $r9 = virtualinvoke $r2.<com.aspose.cells.c.a.d.zb: com.aspose.cells.c.a.d.zm a()>();

        virtualinvoke $r9.<com.aspose.cells.c.a.d.zm: long a(long,int)>(0L, 0);

        return $r1;
    }

    public com.aspose.cells.c.a.d.zh b(com.aspose.cells.c.a.d.zh) throws java.lang.Exception
    {
        com.aspose.cells.zbp $r0;
        com.aspose.cells.c.a.d.zh $r1;
        byte[] $r2;
        int $i0, $i2, $i3;
        com.aspose.cells.c.a.d.za $r3;
        long $l1;
        com.aspose.cells.c.a.d.zb $r4;
        javax.crypto.Cipher $r5;

        $r0 := @this: com.aspose.cells.zbp;

        $r1 := @parameter0: com.aspose.cells.c.a.d.zh;

        $r3 = new com.aspose.cells.c.a.d.za;

        specialinvoke $r3.<com.aspose.cells.c.a.d.za: void <init>(com.aspose.cells.c.a.d.zm)>($r1);

        $r2 = newarray (byte)[8];

        $l1 = virtualinvoke $r1.<com.aspose.cells.c.a.d.zh: long h()>();

        staticinvoke <com.aspose.cells.zadu: void a(byte[],int,long)>($r2, 0, $l1);

        $l1 = virtualinvoke $r1.<com.aspose.cells.c.a.d.zh: long h()>();

        $i2 = (int) $l1;

        $i2 = $i2 + 15;

        $i2 = $i2 / 16;

        $r1 = new com.aspose.cells.c.a.d.zh;

        $i3 = $i2 * 16;

        $i3 = $i3 + 8;

        specialinvoke $r1.<com.aspose.cells.c.a.d.zh: void <init>(int)>($i3);

        $r4 = new com.aspose.cells.c.a.d.zb;

        specialinvoke $r4.<com.aspose.cells.c.a.d.zb: void <init>(com.aspose.cells.c.a.d.zm)>($r1);

        virtualinvoke $r4.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r2);

        $r2 = newarray (byte)[16];

        $i3 = 0;

     label1:
        $i0 = $i2 + -1;

        if $i3 >= $i0 goto label2;

        virtualinvoke $r3.<com.aspose.cells.c.a.d.za: int a(byte[],int,int)>($r2, 0, 16);

        $r5 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        $i0 = lengthof $r2;

        virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r2, 0, $i0, $r2);

        virtualinvoke $r4.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r2);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $i2 = virtualinvoke $r3.<com.aspose.cells.c.a.d.za: int a(byte[],int,int)>($r2, 0, 16);

        if $i2 <= 0 goto label4;

        if $i2 >= 16 goto label3;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r2, $i2, 16, 0);

     label3:
        $r5 = $r0.<com.aspose.cells.zbp: javax.crypto.Cipher b>;

        virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r2, 0, 16, $r2);

        virtualinvoke $r4.<com.aspose.cells.c.a.d.zb: void a(byte[])>($r2);

     label4:
        virtualinvoke $r1.<com.aspose.cells.c.a.d.zh: long a(long,int)>(0L, 0);

        return $r1;
    }
}
