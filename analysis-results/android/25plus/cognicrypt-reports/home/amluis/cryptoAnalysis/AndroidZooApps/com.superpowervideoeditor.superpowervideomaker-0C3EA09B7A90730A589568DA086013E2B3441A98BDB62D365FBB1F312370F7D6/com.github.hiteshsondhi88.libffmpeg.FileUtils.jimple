class com.github.hiteshsondhi88.libffmpeg.FileUtils extends java.lang.Object
{
    private static final int DEFAULT_BUFFER_SIZE;
    private static final int EOF;
    static final java.lang.String ffmpegFileName;

    void <init>()
    {
        com.github.hiteshsondhi88.libffmpeg.FileUtils $r0;

        $r0 := @this: com.github.hiteshsondhi88.libffmpeg.FileUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String SHA1(java.io.InputStream)
    {
        java.io.InputStream $r0;
        byte $b0;
        byte[] $r1;
        java.util.Formatter $r2;
        int $i1, $i2, varReplacer1971;
        java.security.MessageDigest $r3;
        java.lang.String $r4, varReplacer1969, varReplacer1970;
        java.lang.Throwable $r5, $r8, $r9;
        java.lang.Object[] $r6;
        java.lang.Byte $r7;
        null_type varReplacer1968;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $i2 = 0;

     label01:
        varReplacer1969 = "SHA1";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1969);

     label02:
        $r1 = newarray (byte)[4096];

     label03:
        $i1 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1);

     label04:
        if $i1 != -1 goto label11;

     label05:
        $r2 = new java.util.Formatter;

     label06:
        specialinvoke $r2.<java.util.Formatter: void <init>()>();

        $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label07:
        $i1 = lengthof $r1;

     label08:
        if $i2 < $i1 goto label17;

     label09:
        $r4 = virtualinvoke $r2.<java.util.Formatter: java.lang.String toString()>();

     label10:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r0);

        return $r4;

     label11:
        varReplacer1971 = 0;

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer1971, $i1);

     label12:
        goto label03;

     label13:
        $r5 := @caughtexception;

     label14:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Log: void e(java.lang.Throwable)>($r5);

     label15:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r0);

     label16:
        varReplacer1968 = null;

        return varReplacer1968;

     label17:
        $b0 = $r1[$i2];

        $r6 = newarray (java.lang.Object)[1];

     label18:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label19:
        $r6[0] = $r7;

     label20:
        varReplacer1970 = "%02x";

        virtualinvoke $r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(varReplacer1970, $r6);

     label21:
        $i2 = $i2 + 1;

        goto label08;

     label22:
        $r8 := @caughtexception;

     label23:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Log: void e(java.lang.Throwable)>($r8);

     label24:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r0);

        goto label16;

     label25:
        $r9 := @caughtexception;

        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r0);

        throw $r9;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label13;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label13;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label13;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label13;
        catch java.io.IOException from label01 to label02 with label22;
        catch java.io.IOException from label03 to label04 with label22;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.io.IOException from label09 to label10 with label22;
        catch java.lang.Throwable from label01 to label04 with label25;
        catch java.lang.Throwable from label05 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label22;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.security.NoSuchAlgorithmException from label18 to label19 with label13;
        catch java.security.NoSuchAlgorithmException from label20 to label21 with label13;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label17 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    static java.lang.String SHA1(java.lang.String)
    {
        java.lang.String $r0;
        java.io.BufferedInputStream $r1, $r2;
        java.io.FileInputStream $r3;
        java.lang.Throwable $r4, $r5;
        null_type varReplacer1966;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = null;

     label01:
        $r1 = new java.io.BufferedInputStream;

        $r3 = new java.io.FileInputStream;

     label02:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

     label03:
        $r0 = staticinvoke <com.github.hiteshsondhi88.libffmpeg.FileUtils: java.lang.String SHA1(java.io.InputStream)>($r1);

     label04:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r1);

        return $r0;

     label05:
        $r4 := @caughtexception;

     label06:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Log: void e(java.lang.Throwable)>($r4);

     label07:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r2);

        varReplacer1966 = null;

        return varReplacer1966;

     label08:
        $r5 := @caughtexception;

     label09:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r2);

        throw $r5;

     label10:
        $r5 := @caughtexception;

        $r2 = $r1;

        goto label09;

     label11:
        $r4 := @caughtexception;

        $r2 = $r1;

        goto label06;

        catch java.io.IOException from label02 to label03 with label05;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    static boolean copyBinaryFromAssetsToData(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, varReplacer1961, varReplacer1962;
        byte[] $r3;
        java.lang.Throwable $r4;
        java.io.FileOutputStream $r5;
        java.io.File $r6, $r9;
        android.content.res.AssetManager $r7;
        java.io.InputStream $r8;
        int $i0, varReplacer1959, varReplacer1960, varReplacer1963;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r6 = staticinvoke <com.github.hiteshsondhi88.libffmpeg.FileUtils: java.io.File getFilesDirectory(android.content.Context)>($r0);

     label01:
        $r7 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r8 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label02:
        $r5 = new java.io.FileOutputStream;

        $r9 = new java.io.File;

     label03:
        varReplacer1962 = "ffmpeg";

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, varReplacer1962);

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r9);

     label04:
        $r3 = newarray (byte)[4096];

     label05:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r3);

     label06:
        if -1 != $i0 goto label09;

     label07:
        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.OutputStream)>($r5);

        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Util: void close(java.io.InputStream)>($r8);

     label08:
        varReplacer1960 = 1;

        return varReplacer1960;

     label09:
        varReplacer1959 = 0;

        virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[],int,int)>($r3, varReplacer1959, $i0);

     label10:
        goto label05;

     label11:
        $r4 := @caughtexception;

        varReplacer1961 = "issue in coping binary from assets to data. ";

        staticinvoke <com.github.hiteshsondhi88.libffmpeg.Log: void e(java.lang.Object,java.lang.Throwable)>(varReplacer1961, $r4);

        varReplacer1963 = 0;

        return varReplacer1963;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    static java.lang.String getFFmpeg(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r1;
        java.io.File $r2;
        java.lang.String $r3, varReplacer1964;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <com.github.hiteshsondhi88.libffmpeg.FileUtils: java.io.File getFilesDirectory(android.content.Context)>($r0);

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = <java.io.File: java.lang.String separator>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer1964 = "ffmpeg";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1964);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static java.lang.String getFFmpeg(android.content.Context, java.util.Map)
    {
        android.content.Context $r0;
        java.util.Map $r1;
        java.lang.String $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.util.Map;

        $r2 = "";

        goto label1;

     label1:
        $r5 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = staticinvoke <com.github.hiteshsondhi88.libffmpeg.FileUtils: java.lang.String getFFmpeg(android.content.Context)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static java.io.File getFilesDirectory(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        return $r1;
    }
}
