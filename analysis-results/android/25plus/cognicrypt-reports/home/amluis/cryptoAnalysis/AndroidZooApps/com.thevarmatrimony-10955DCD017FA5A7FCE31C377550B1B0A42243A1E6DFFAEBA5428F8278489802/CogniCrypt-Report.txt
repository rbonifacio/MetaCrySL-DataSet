Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3717)
		Method: <pi: java.lang.String e(java.lang.String)>
		SHA-256: 9af6e133f739e0fd0dfef645156e539b9d578d886d5ee75b69f57664b8aea5fe
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String a(java.lang.String)>
		SHA-256: 86013a473622812ebdc4dd3b7975deadb700b951c72432e957d8828947b476fa
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair f(java.lang.String)>
		SHA-256: ee5e453ee42101f91820982d47348fd6db34aab5b8c0283c3388ec07a685e6e9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15506)
		Method: <in.juspay.godel.util.EncryptionHelper: java.lang.String a(byte[])>
		SHA-256: 23827e02a5970051873846fedb70883f42f3db6228dc70c4eb40a33e9145ad3d
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: ee43d3c27e21c5b1ebbc253f41bdf471d170acb772d54f94537e8e4b3da9ea54
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <in.juspay.godel.util.EncryptionHelper: java.lang.String a(byte[])>
		SHA-256: da46b4b65ba97f637994785e4458bc30f7055e0b1b39bd6aea2c1a980383b4c9
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 2cbee2b1f1e301f5e0fd6a68eabf46e222064dcd3b3e2060dbe5051d968e770f
		Secure: true
	Object:
		Variable: r27
		Type: java.security.SecureRandom
		Statement: specialinvoke r27.<java.security.SecureRandom: void <init>()>()
		Method: <un: void i()>
		SHA-256: 483ffa362585e03813e7fd8c6980826c98eedc036714a01903461c208b624766
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: 756b01b06feb63ec058f055931b7364dec725eddbf18032316df47bfbaf76753
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair a()>
		SHA-256: b6cc8ac493f44dad3810c3a2f8466a33a72ab2c638b8dfbfccb655950d0b27ab
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8835)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: de5b2fde1972d2308837a30aac417c4dd160ba5b121f0a6d85e8d2804d5b1a0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <in.juspay.godel.core.LoggingUtil: boolean a(double)>
		SHA-256: 609afef56c729912835cd26666fc1deb1e8df03b26c93615aaf0c2bcccd05fc
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: bb7187a5bb3b8757816d72f6d792fc777b962cfcc06524eec6d517f459d321b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer8872)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair a()>
		SHA-256: 47abe72f393083b3252cf39f1cced0dac4bf2991367440860d4b845c1cee6756
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <pi: java.lang.String e(java.lang.String)>
		SHA-256: 13318fb84386ab70f250574cd944e9b0b7208244588fada8a026116b3a7d323f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16119)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String a(java.lang.String)>
		SHA-256: 1479ecf583cf50c5cba6ccf1db18fa199477e6f52e886665c4ca465fc11e914e
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14972)
		Method: <un: void i()>
		SHA-256: 2a85feb6ac774b9e37e2b75aa462cfb3d2b204cbdfdab06b64e02fdefe7b140c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1
		Secure: false

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #de5b2fde1972d2308837a30aac417c4dd160ba5b121f0a6d85e8d2804d5b1a0)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8835)


Findings in Java Class: us$a

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2a85feb6ac774b9e37e2b75aa462cfb3d2b204cbdfdab06b64e02fdefe7b140c)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r11 = virtualinvoke $r9.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2a85feb6ac774b9e37e2b75aa462cfb3d2b204cbdfdab06b64e02fdefe7b140c)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r9 = staticinvoke <un: javax.net.ssl.SSLContext c()>()


Findings in Java Class: org.java_websocket.drafts.Draft_10

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1479ecf583cf50c5cba6ccf1db18fa199477e6f52e886665c4ca465fc11e914e)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16119)


Findings in Java Class: un

	 in Method: void i()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14970, r31, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14970, r31, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 3
	RequiredPredicateError: 3
=====================================================================