Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer889)
		Method: <c.aj: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: d8001f2cef66b45035099f4249fe30ec04596e1c657a5f6f82019b8a75c87b19
		Secure: false
	Object:
		Variable: varReplacer3803
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3802, $i0, varReplacer3803)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 83da8a932c7db7571ba782d19db5d2f9466eb6f1703988a372a3f9f512ea5e30
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3819)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 6d9f387efd8f567bab6a264775419e44588e67a3294df5067b3ba4569514f48e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer291)
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: 418172da16d5b8201b0b798c2223fc2b42a95734828e805f0d13a8e07db50b25
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4048)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 3e0ef66faf17d2fbdeab8fdec3d6f901bbf5ab0d69a71d398ca0d3aa1ded98af
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3794)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 3cbd6bd748fc96cc3f4664c99ac0b45c8c102487facded3cde7c8f7b78fec3b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3815)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 230c15ac7d9ef25f85daeaa57cbedb971cd8a108a38787b8922407d3e5d257f2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3802, $i0, varReplacer3803)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: aac4715b31edbe1019636a993a67d6af07e93e9da44bb75d06409be87a84a145
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer3808, varReplacer3809)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 9a11d9b9584e73205eba83ffb3a9acd8c5a2268ff5ba2fe0dd6b35c805338aa1
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 3f11a2aebe407b793940ab5a06c1a9c0c3504da88c0e2c8f3f4c736766d43690
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3800)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 29b740081000ace6247738e3e977e94a23dea23d68817ccd956520f712544e40
		Secure: false
	Object:
		Variable: varReplacer3819
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3819)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 9359d0da0735f32cada4e3c27137f02bcba02420c1848cf22d3ffb2807e3eed6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3811, varReplacer3812)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: cf7bbbffa5a7b71d6ab280bea229446fedd988078e956dd8d81c0f51c08c3c78
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4047)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 46ada70fe058f66832ca3942572dded37e77d6e51edcdf9860eb754d6783f99f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3816)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 4ae19f9874926139e0f97056b504751b7f6fede7b1997730969b93ad1942fc0e
		Secure: false
	Object:
		Variable: varReplacer3812
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3811, varReplacer3812)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: c0645769746a4644ca9a091a90455e02a669e78cea564b6406666036768d0061
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 36ccaffd5df31af12c6519920ab1cc93c8763b7b3de943b0e4737a6f5039543
		Secure: false
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: specialinvoke r14.<java.security.SecureRandom: void <init>()>()
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: 8d0642c9b9f4d9f53ae393fba9113dac0b32662ae94782b26c676bc69e4472e8
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3793)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 6b417cf3539f887fac972c74808bdcf99f668604c99321b8d29c09e09abf6bb1
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3823)
		Method: <com.c.a.c: void d()>
		SHA-256: 8a7dcf6a65f5f94c2c98adeeb8bf6df58bb09d97db19df96334e16c7c23924c2
		Secure: true
	Object:
		Variable: varReplacer3794
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3794)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 55cbf61683ab90475b8e3f2344b2c1c4cb7d7f834d8ea6e6c3bb6715dd6728c8
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.c: void d()>
		SHA-256: 5f11170c0830485070437f05ddb232c64d2202d1714075160e608039cee429ab
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4259)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 623d05b7ba3bdc4e9a2180c1d6146cc83c59c138304e6b5427b8866fd93142b3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: varReplacer3815
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3815)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 42371b5d727d2b0a2975331ffdec546338c91417b6832f6927f1e4f7ff1db0f
		Secure: false
	Object:
		Variable: varReplacer3800
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3800)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 236907cdaf2efa2e7d1ff56d464217984cd82336beec0f7a5d2845ef79c46e5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer284)
		Method: <parknshop.parknshopapp.r: c.ak a(c.ak)>
		SHA-256: 14011eb7bf360d1f453377e6b94f3e64ed52eb67361ded6ed87f0424af3b1caa
		Secure: false

Findings in Java Class: com.c.a.a

	 in Method: com.c.a.f a(java.lang.String)
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3802, $i0, varReplacer3803)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3802, $i0, varReplacer3803)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3800)


	 in Method: com.c.a.f a(java.lang.String,byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cf7bbbffa5a7b71d6ab280bea229446fedd988078e956dd8d81c0f51c08c3c78)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3811, varReplacer3812)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3815)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cf7bbbffa5a7b71d6ab280bea229446fedd988078e956dd8d81c0f51c08c3c78)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3819)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3811, varReplacer3812)


	 in Method: byte[] a(com.c.a.b,com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4260, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: com.c.a.b a(byte[],com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4046, $r5, $r2)


	 in Method: com.c.a.f a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3794)


Findings in Java Class: c.aj

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer887, r7, varReplacer887)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer887, r7, varReplacer887)


Findings in Java Class: parknshop.parknshopapp.Utils.f

	 in Method: c.ak a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer289, r16, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer289, r16, $r0)


Findings in Java Class: parknshop.parknshopapp.r

	 in Method: c.ak a(c.ak)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer287, r16, varReplacer287)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer287, r16, varReplacer287)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 32

	CogniCrypt found the following violations. For details see description above.
	ImpreciseValueExtractionError: 1
	NeverTypeOfError: 1
	IncompleteOperationError: 1
	RequiredPredicateError: 16
=====================================================================