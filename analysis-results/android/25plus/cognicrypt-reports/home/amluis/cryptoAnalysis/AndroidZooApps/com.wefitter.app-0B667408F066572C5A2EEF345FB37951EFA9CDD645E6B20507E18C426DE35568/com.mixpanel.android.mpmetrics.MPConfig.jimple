public class com.mixpanel.android.mpmetrics.MPConfig extends java.lang.Object
{
    public static boolean DEBUG;
    private static final java.lang.String LOGTAG;
    static final int MAX_NOTIFICATION_CACHE_COUNT;
    static final java.lang.String REFERRER_PREFS_NAME;
    public static final int UI_FEATURES_MIN_API;
    public static final java.lang.String VERSION;
    private static com.mixpanel.android.mpmetrics.MPConfig sInstance;
    private static final java.lang.Object sInstanceLock;
    private final boolean mAutoShowMixpanelUpdates;
    private final int mBulkUploadLimit;
    private final int mDataExpiration;
    private final java.lang.String mDecideEndpoint;
    private final java.lang.String mDecideFallbackEndpoint;
    private final boolean mDisableAppOpenEvent;
    private final boolean mDisableDecideChecker;
    private final boolean mDisableEmulatorBindingUI;
    private final boolean mDisableFallback;
    private final boolean mDisableGestureBindingUI;
    private final boolean mDisableViewCrawler;
    private final java.lang.String mEditorUrl;
    private final java.lang.String mEventsEndpoint;
    private final java.lang.String mEventsFallbackEndpoint;
    private final int mFlushInterval;
    private final int mImageCacheMaxMemoryFactor;
    private final int mMinimumDatabaseLimit;
    private com.mixpanel.android.util.OfflineMode mOfflineMode;
    private final java.lang.String mPeopleEndpoint;
    private final java.lang.String mPeopleFallbackEndpoint;
    private final java.lang.String mResourcePackageName;
    private javax.net.ssl.SSLSocketFactory mSSLSocketFactory;
    private final boolean mTestMode;

    static void <clinit>()
    {
        java.lang.Object $r0;
        int varReplacer1273;

        nop;

        varReplacer1273 = 0;

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = varReplacer1273;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock> = $r0;

        return;
    }

    void <init>(android.os.Bundle, android.content.Context)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        android.os.Bundle $r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        javax.net.ssl.SSLContext $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        boolean $z0, $z1;
        int $i0, varReplacer1285, varReplacer1295, varReplacer1309, varReplacer1315, varReplacer1319, varReplacer1326, varReplacer1328, varReplacer1330, varReplacer1332, varReplacer1334, varReplacer1338, varReplacer1341, varReplacer1352, varReplacer1357, varReplacer1360;
        java.lang.String $r6, $r7, varReplacer1276, varReplacer1277, varReplacer1278, varReplacer1279, varReplacer1280, varReplacer1281, varReplacer1282, varReplacer1283, varReplacer1284, varReplacer1286, varReplacer1287, varReplacer1288, varReplacer1289, varReplacer1290, varReplacer1291, varReplacer1292, varReplacer1293, varReplacer1294, varReplacer1296, varReplacer1297, varReplacer1298, varReplacer1299, varReplacer1300, varReplacer1301, varReplacer1302, varReplacer1303, varReplacer1304, varReplacer1305, varReplacer1306, varReplacer1307, varReplacer1308, varReplacer1310, varReplacer1314, varReplacer1316, varReplacer1317, varReplacer1318, varReplacer1320, varReplacer1321, varReplacer1322, varReplacer1323, varReplacer1324, varReplacer1325, varReplacer1327, varReplacer1329, varReplacer1331, varReplacer1333, varReplacer1335, varReplacer1336, varReplacer1337, varReplacer1339, varReplacer1340, varReplacer1342, varReplacer1343, varReplacer1344, varReplacer1345, varReplacer1346, varReplacer1347, varReplacer1348, varReplacer1349, varReplacer1350, varReplacer1351, varReplacer1353, varReplacer1354, varReplacer1355, varReplacer1356, varReplacer1358, varReplacer1359, varReplacer1361, varReplacer1362, varReplacer1363, varReplacer1364, varReplacer1365, varReplacer1366;
        java.lang.StringBuilder $r8;
        null_type varReplacer1311, varReplacer1312, varReplacer1313;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        varReplacer1365 = "TLS";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1365);

        varReplacer1311 = null;

        varReplacer1312 = null;

        varReplacer1313 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1311, varReplacer1311, varReplacer1311);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label02:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r5;

        varReplacer1308 = "com.mixpanel.android.MPConfig.EnableDebugLogging";

        varReplacer1309 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1308, varReplacer1309);

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = $z0;

        varReplacer1344 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(varReplacer1344);

        if $z0 == 0 goto label03;

        varReplacer1291 = "MixpanelAPI.Conf";

        varReplacer1292 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys has been deprecated in favor of com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates. Please update this key as soon as possible.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1291, varReplacer1292);

     label03:
        varReplacer1293 = "com.mixpanel.android.MPConfig.DebugFlushInterval";

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(varReplacer1293);

        if $z0 == 0 goto label04;

        varReplacer1278 = "MixpanelAPI.Conf";

        varReplacer1279 = "We do not support com.mixpanel.android.MPConfig.DebugFlushInterval anymore. There will only be one flush interval. Please, update your AndroidManifest.xml.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1278, varReplacer1279);

     label04:
        varReplacer1284 = "com.mixpanel.android.MPConfig.BulkUploadLimit";

        varReplacer1285 = 40;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1284, varReplacer1285);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit> = $i0;

        varReplacer1327 = "com.mixpanel.android.MPConfig.FlushInterval";

        varReplacer1328 = 60000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1327, varReplacer1328);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval> = $i0;

        varReplacer1356 = "com.mixpanel.android.MPConfig.DataExpiration";

        varReplacer1357 = 432000000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1356, varReplacer1357);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration> = $i0;

        varReplacer1337 = "com.mixpanel.android.MPConfig.MinimumDatabaseLimit";

        varReplacer1338 = 20971520;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1337, varReplacer1338);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit> = $i0;

        varReplacer1318 = "com.mixpanel.android.MPConfig.DisableFallback";

        varReplacer1319 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1318, varReplacer1319);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback> = $z0;

        varReplacer1355 = "com.mixpanel.android.MPConfig.ResourcePackageName";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1355);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName> = $r6;

        varReplacer1359 = "com.mixpanel.android.MPConfig.DisableGestureBindingUI";

        varReplacer1360 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1359, varReplacer1360);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI> = $z0;

        varReplacer1325 = "com.mixpanel.android.MPConfig.DisableEmulatorBindingUI";

        varReplacer1326 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1325, varReplacer1326);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI> = $z0;

        varReplacer1331 = "com.mixpanel.android.MPConfig.DisableAppOpenEvent";

        varReplacer1332 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1331, varReplacer1332);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent> = $z0;

        varReplacer1314 = "com.mixpanel.android.MPConfig.DisableViewCrawler";

        varReplacer1315 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1314, varReplacer1315);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableViewCrawler> = $z0;

        varReplacer1294 = "com.mixpanel.android.MPConfig.DisableDecideChecker";

        varReplacer1295 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1294, varReplacer1295);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableDecideChecker> = $z0;

        varReplacer1329 = "com.mixpanel.android.MPConfig.ImageCacheMaxMemoryFactor";

        varReplacer1330 = 10;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1329, varReplacer1330);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mImageCacheMaxMemoryFactor> = $i0;

        varReplacer1340 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        varReplacer1341 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1340, varReplacer1341);

        varReplacer1351 = "com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates";

        varReplacer1352 = 1;

        $z1 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1351, varReplacer1352);

        if $z0 == 0 goto label14;

        if $z1 == 0 goto label14;

        $z0 = 1;

     label05:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates> = $z0;

        varReplacer1333 = "com.mixpanel.android.MPConfig.TestMode";

        varReplacer1334 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1333, varReplacer1334);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode> = $z0;

        varReplacer1362 = "com.mixpanel.android.MPConfig.EventsEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1362);

        $r7 = $r6;

        if $r6 != null goto label06;

        $r7 = "https://api.mixpanel.com/track?ip=1";

     label06:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint> = $r7;

        varReplacer1296 = "com.mixpanel.android.MPConfig.EventsFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1296);

        $r7 = $r6;

        if $r6 != null goto label07;

        $r7 = "http://api.mixpanel.com/track?ip=1";

     label07:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint> = $r7;

        varReplacer1299 = "com.mixpanel.android.MPConfig.PeopleEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1299);

        $r7 = $r6;

        if $r6 != null goto label08;

        $r7 = "https://api.mixpanel.com/engage";

     label08:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint> = $r7;

        varReplacer1306 = "com.mixpanel.android.MPConfig.PeopleFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1306);

        $r7 = $r6;

        if $r6 != null goto label09;

        $r7 = "http://api.mixpanel.com/engage";

     label09:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint> = $r7;

        varReplacer1304 = "com.mixpanel.android.MPConfig.DecideEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1304);

        $r7 = $r6;

        if $r6 != null goto label10;

        $r7 = "https://decide.mixpanel.com/decide";

     label10:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint> = $r7;

        varReplacer1301 = "com.mixpanel.android.MPConfig.DecideFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1301);

        $r7 = $r6;

        if $r6 != null goto label11;

        $r7 = "http://decide.mixpanel.com/decide";

     label11:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint> = $r7;

        varReplacer1310 = "com.mixpanel.android.MPConfig.EditorUrl";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1310);

        $r7 = $r6;

        if $r6 != null goto label12;

        $r7 = "wss://switchboard.mixpanel.com/connect/";

     label12:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl> = $r7;

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        if $z0 == 0 goto label15;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1345 = "Mixpanel (4.9.1) configured with:\n    AutoShowMixpanelUpdates ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1345);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getAutoShowMixpanelUpdates()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1305 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1305);

        varReplacer1364 = "    BulkUploadLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1364);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getBulkUploadLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1288 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1288);

        varReplacer1320 = "    FlushInterval ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1320);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getFlushInterval()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1358 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1358);

        varReplacer1280 = "    DataExpiration ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1280);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getDataExpiration()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1335 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1335);

        varReplacer1349 = "    MinimumDatabaseLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1349);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getMinimumDatabaseLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1363 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1363);

        varReplacer1282 = "    DisableFallback ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1282);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableFallback()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1298 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1298);

        varReplacer1289 = "    DisableAppOpenEvent ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1289);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableAppOpenEvent()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1316 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1316);

        varReplacer1354 = "    DisableViewCrawler ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1354);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableViewCrawler()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1339 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1339);

        varReplacer1346 = "    DisableDeviceUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1346);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableGestureBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1307 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1307);

        varReplacer1347 = "    DisableEmulatorUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1347);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableEmulatorBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1353 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1353);

        varReplacer1350 = "    EnableDebugLogging ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1350);

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1366 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1366);

        varReplacer1286 = "    TestMode ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1286);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getTestMode()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1281 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1281);

        varReplacer1323 = "    EventsEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1323);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1348 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1348);

        varReplacer1324 = "    PeopleEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1324);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1297 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1297);

        varReplacer1302 = "    DecideEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1302);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1277 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1277);

        varReplacer1276 = "    EventsFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1276);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1343 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1343);

        varReplacer1287 = "    PeopleFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1287);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1300 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1300);

        varReplacer1361 = "    DecideFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1361);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1336 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1336);

        varReplacer1342 = "    EditorUrl ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1342);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEditorUrl()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1283 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1283);

        varReplacer1317 = "    DisableDecideChecker ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1317);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableDecideChecker()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1303 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1303);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1290 = "MixpanelAPI.Conf";

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(varReplacer1290, $r6);

        return;

     label13:
        $r3 := @caughtexception;

        varReplacer1321 = "MixpanelAPI.Conf";

        varReplacer1322 = "System has no SSL support. Built-in events editor will not be available";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1321, varReplacer1322, $r3);

        $r5 = null;

        goto label02;

     label14:
        $z0 = 0;

        goto label05;

     label15:
        return;

        catch java.security.GeneralSecurityException from label01 to label02 with label13;
    }

    public static com.mixpanel.android.mpmetrics.MPConfig getInstance(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        com.mixpanel.android.mpmetrics.MPConfig $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock>;

        entermonitor $r1;

     label1:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        if $r2 != null goto label2;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = staticinvoke <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)>($r0);

        <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance> = $r2;

     label2:
        exitmonitor $r1;

     label3:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        return $r2;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, varReplacer1275;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5;
        com.mixpanel.android.mpmetrics.MPConfig $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8;
        int varReplacer1274;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        varReplacer1274 = 128;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, varReplacer1274);

     label2:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r5 != null goto label4;

        $r5 = new android.os.Bundle;

     label3:
        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label4:
        $r6 = new com.mixpanel.android.mpmetrics.MPConfig;

     label5:
        specialinvoke $r6.<com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>($r5, $r0);

     label6:
        return $r6;

     label7:
        $r1 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1275 = "Can\'t configure Mixpanel with package name ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1275);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r1);

        throw $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
    }

    public boolean getAutoShowMixpanelUpdates()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates>;

        return z0;
    }

    public int getBulkUploadLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit>;

        return i0;
    }

    public int getDataExpiration()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration>;

        return i0;
    }

    public java.lang.String getDecideEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint>;

        return r1;
    }

    public java.lang.String getDecideFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint>;

        return r1;
    }

    public boolean getDisableAppOpenEvent()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent>;

        return z0;
    }

    public boolean getDisableDecideChecker()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableDecideChecker>;

        return z0;
    }

    public boolean getDisableEmulatorBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI>;

        return z0;
    }

    public boolean getDisableFallback()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback>;

        return z0;
    }

    public boolean getDisableGestureBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI>;

        return z0;
    }

    public boolean getDisableViewCrawler()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableViewCrawler>;

        return z0;
    }

    public java.lang.String getEditorUrl()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl>;

        return r1;
    }

    public java.lang.String getEventsEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint>;

        return r1;
    }

    public java.lang.String getEventsFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint>;

        return r1;
    }

    public int getFlushInterval()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval>;

        return i0;
    }

    public int getImageCacheMaxMemoryFactor()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mImageCacheMaxMemoryFactor>;

        return i0;
    }

    public int getMinimumDatabaseLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit>;

        return i0;
    }

    public com.mixpanel.android.util.OfflineMode getOfflineMode()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.Throwable $r1;
        com.mixpanel.android.util.OfflineMode r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.util.OfflineMode mOfflineMode>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getPeopleEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint>;

        return r1;
    }

    public java.lang.String getPeopleFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint>;

        return r1;
    }

    public java.lang.String getResourcePackageName()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.Throwable $r1;
        javax.net.ssl.SSLSocketFactory r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getTestMode()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode>;

        return z0;
    }

    public void setOfflineMode(com.mixpanel.android.util.OfflineMode)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        com.mixpanel.android.util.OfflineMode $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: com.mixpanel.android.util.OfflineMode;

        entermonitor $r0;

     label1:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.util.OfflineMode mOfflineMode> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        entermonitor $r0;

     label1:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
