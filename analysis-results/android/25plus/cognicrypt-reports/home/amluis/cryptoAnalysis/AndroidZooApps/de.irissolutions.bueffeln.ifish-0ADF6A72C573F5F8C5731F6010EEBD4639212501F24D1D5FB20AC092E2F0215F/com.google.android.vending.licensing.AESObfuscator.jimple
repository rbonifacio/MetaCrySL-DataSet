public class com.google.android.vending.licensing.AESObfuscator extends java.lang.Object implements com.google.android.vending.licensing.Obfuscator
{
    private static final java.lang.String CIPHER_ALGORITHM;
    private static final byte[] IV;
    private static final java.lang.String KEYGEN_ALGORITHM;
    private static final java.lang.String UTF8;
    private static final java.lang.String header;
    private javax.crypto.Cipher mDecryptor;
    private javax.crypto.Cipher mEncryptor;

    static void <clinit>()
    {
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[16];

        $r0[0] = 16;

        $r0[1] = 74;

        $r0[2] = 71;

        $r0[3] = -80;

        $r0[4] = 32;

        $r0[5] = 101;

        $r0[6] = -47;

        $r0[7] = 72;

        $r0[8] = 117;

        $r0[9] = -14;

        $r0[10] = 0;

        $r0[11] = -29;

        $r0[12] = 70;

        $r0[13] = 65;

        $r0[14] = -12;

        $r0[15] = 74;

        <com.google.android.vending.licensing.AESObfuscator: byte[] IV> = $r0;

        return;
    }

    public void <init>(byte[], java.lang.String, java.lang.String)
    {
        com.google.android.vending.licensing.AESObfuscator $r0;
        byte[] $r1;
        java.lang.String $r2, $r3, varReplacer380, varReplacer383, varReplacer384, varReplacer385, varReplacer388;
        java.lang.Throwable $r4;
        javax.crypto.spec.PBEKeySpec $r5;
        javax.crypto.spec.SecretKeySpec $r6;
        javax.crypto.SecretKeyFactory $r7;
        java.lang.StringBuilder $r8;
        char[] $r9;
        javax.crypto.SecretKey $r10;
        javax.crypto.Cipher $r11;
        javax.crypto.spec.IvParameterSpec $r12;
        java.lang.RuntimeException $r13;
        int varReplacer381, varReplacer382, varReplacer386, varReplacer387;

        nop;

        $r0 := @this: com.google.android.vending.licensing.AESObfuscator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        varReplacer380 = "PBEWITHSHAAND256BITAES-CBC-BC";

        $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer380);

     label02:
        $r5 = new javax.crypto.spec.PBEKeySpec;

        $r8 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        varReplacer386 = 1024;

        varReplacer387 = 256;

        specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r1, varReplacer386, varReplacer387);

        $r10 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5);

     label04:
        $r6 = new javax.crypto.spec.SecretKeySpec;

     label05:
        $r1 = interfaceinvoke $r10.<javax.crypto.SecretKey: byte[] getEncoded()>();

        varReplacer383 = "AES";

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer383);

        varReplacer384 = "AES/CBC/PKCS5Padding";

        $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer384);

     label06:
        $r0.<com.google.android.vending.licensing.AESObfuscator: javax.crypto.Cipher mEncryptor> = $r11;

        $r11 = $r0.<com.google.android.vending.licensing.AESObfuscator: javax.crypto.Cipher mEncryptor>;

        $r12 = new javax.crypto.spec.IvParameterSpec;

        $r1 = <com.google.android.vending.licensing.AESObfuscator: byte[] IV>;

     label07:
        specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        varReplacer381 = 1;

        virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer381, $r6, $r12);

        varReplacer385 = "AES/CBC/PKCS5Padding";

        $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer385);

     label08:
        $r0.<com.google.android.vending.licensing.AESObfuscator: javax.crypto.Cipher mDecryptor> = $r11;

        $r11 = $r0.<com.google.android.vending.licensing.AESObfuscator: javax.crypto.Cipher mDecryptor>;

        $r12 = new javax.crypto.spec.IvParameterSpec;

        $r1 = <com.google.android.vending.licensing.AESObfuscator: byte[] IV>;

     label09:
        specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        varReplacer382 = 2;

        virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer382, $r6, $r12);

     label10:
        return;

     label11:
        $r4 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        varReplacer388 = "Invalid environment";

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer388, $r4);

        throw $r13;

        catch java.security.GeneralSecurityException from label01 to label02 with label11;
        catch java.security.GeneralSecurityException from label03 to label04 with label11;
        catch java.security.GeneralSecurityException from label05 to label06 with label11;
        catch java.security.GeneralSecurityException from label07 to label08 with label11;
        catch java.security.GeneralSecurityException from label09 to label10 with label11;
    }

    public java.lang.String obfuscate(java.lang.String, java.lang.String)
    {
        com.google.android.vending.licensing.AESObfuscator $r0;
        java.lang.String $r1, $r2, varReplacer823, varReplacer824, varReplacer826, varReplacer827;
        javax.crypto.Cipher $r3;
        java.lang.StringBuilder $r4;
        byte[] $r5;
        java.lang.Throwable $r6, $r8;
        java.lang.RuntimeException $r7;
        null_type varReplacer825;

        nop;

        $r0 := @this: com.google.android.vending.licensing.AESObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        varReplacer825 = null;

        return varReplacer825;

     label1:
        $r3 = $r0.<com.google.android.vending.licensing.AESObfuscator: javax.crypto.Cipher mEncryptor>;

        $r4 = new java.lang.StringBuilder;

     label2:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer827 = "com.android.vending.licensing.AESObfuscator-1|";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer827);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer824 = "UTF-8";

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer824);

        $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        $r1 = staticinvoke <com.google.android.vending.licensing.util.Base64: java.lang.String encode(byte[])>($r5);

     label3:
        return $r1;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        varReplacer823 = "Invalid environment";

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer823, $r6);

        throw $r7;

     label5:
        $r8 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        varReplacer826 = "Invalid environment";

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer826, $r8);

        throw $r7;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
        catch java.security.GeneralSecurityException from label2 to label3 with label5;
    }

    public java.lang.String unobfuscate(java.lang.String, java.lang.String) throws com.google.android.vending.licensing.ValidationException
    {
        com.google.android.vending.licensing.AESObfuscator $r0;
        java.lang.String $r1, $r2, $r3, $r7, varReplacer837, varReplacer838, varReplacer839, varReplacer840, varReplacer841, varReplacer843, varReplacer844;
        javax.crypto.Cipher $r4;
        byte[] $r5;
        java.lang.StringBuilder $r6, r12;
        int $i0, $i1;
        com.google.android.vending.licensing.util.Base64DecoderException $r8;
        java.lang.Throwable $r9, $r10, $r11;
        com.google.android.vending.licensing.ValidationException r13;
        java.lang.RuntimeException r14;
        javax.crypto.IllegalBlockSizeException r15;
        javax.crypto.BadPaddingException r16;
        null_type varReplacer842;

        nop;

        $r0 := @this: com.google.android.vending.licensing.AESObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label01;

        varReplacer842 = null;

        return varReplacer842;

     label01:
        $r7 = new java.lang.String;

        $r3 = $r7;

        $r4 = $r0.<com.google.android.vending.licensing.AESObfuscator: javax.crypto.Cipher mDecryptor>;

     label02:
        $r5 = staticinvoke <com.google.android.vending.licensing.util.Base64: byte[] decode(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        varReplacer840 = "UTF-8";

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, varReplacer840);

     label03:
        r12 = new java.lang.StringBuilder;

        $r6 = r12;

     label04:
        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer837 = "com.android.vending.licensing.AESObfuscator-1|";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer837);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>($r7);

     label05:
        if $i0 == 0 goto label09;

        r13 = new com.google.android.vending.licensing.ValidationException;

        r12 = new java.lang.StringBuilder;

        $r6 = r12;

     label06:
        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer841 = "Header not found (invalid data or key):";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer841);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<com.google.android.vending.licensing.ValidationException: void <init>(java.lang.String)>($r2);

     label07:
        throw r13;

     label08:
        $r8 := @caughtexception;

        r13 = new com.google.android.vending.licensing.ValidationException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r8.<com.google.android.vending.licensing.util.Base64DecoderException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer838 = ":";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer838);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<com.google.android.vending.licensing.ValidationException: void <init>(java.lang.String)>($r1);

        throw r13;

     label09:
        $r7 = "com.android.vending.licensing.AESObfuscator-1|";

     label10:
        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

     label11:
        $i0 = $i0 + $i1;

     label12:
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label13:
        return $r2;

     label14:
        $r9 := @caughtexception;

        r13 = new com.google.android.vending.licensing.ValidationException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        r15 = (javax.crypto.IllegalBlockSizeException) $r9;

        $r2 = virtualinvoke r15.<javax.crypto.IllegalBlockSizeException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer843 = ":";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer843);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<com.google.android.vending.licensing.ValidationException: void <init>(java.lang.String)>($r1);

        throw r13;

     label15:
        $r10 := @caughtexception;

        r13 = new com.google.android.vending.licensing.ValidationException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        r16 = (javax.crypto.BadPaddingException) $r10;

        $r2 = virtualinvoke r16.<javax.crypto.BadPaddingException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer844 = ":";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer844);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<com.google.android.vending.licensing.ValidationException: void <init>(java.lang.String)>($r1);

        throw r13;

     label16:
        $r11 := @caughtexception;

        r14 = new java.lang.RuntimeException;

        varReplacer839 = "Invalid environment";

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer839, $r11);

        throw r14;

        catch com.google.android.vending.licensing.util.Base64DecoderException from label02 to label03 with label08;
        catch com.google.android.vending.licensing.util.Base64DecoderException from label04 to label05 with label08;
        catch com.google.android.vending.licensing.util.Base64DecoderException from label06 to label07 with label08;
        catch javax.crypto.IllegalBlockSizeException from label02 to label03 with label14;
        catch javax.crypto.IllegalBlockSizeException from label04 to label05 with label14;
        catch javax.crypto.IllegalBlockSizeException from label06 to label07 with label14;
        catch javax.crypto.BadPaddingException from label02 to label03 with label15;
        catch javax.crypto.BadPaddingException from label04 to label05 with label15;
        catch javax.crypto.BadPaddingException from label06 to label07 with label15;
        catch java.io.UnsupportedEncodingException from label02 to label03 with label16;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label16;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label16;
        catch com.google.android.vending.licensing.util.Base64DecoderException from label10 to label11 with label08;
        catch com.google.android.vending.licensing.util.Base64DecoderException from label12 to label13 with label08;
        catch javax.crypto.IllegalBlockSizeException from label10 to label11 with label14;
        catch javax.crypto.IllegalBlockSizeException from label12 to label13 with label14;
        catch javax.crypto.BadPaddingException from label10 to label11 with label15;
        catch javax.crypto.BadPaddingException from label12 to label13 with label15;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label16;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label16;
    }
}
