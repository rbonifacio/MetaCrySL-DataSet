class com.microsoft.windowsazure.messaging.Connection extends java.lang.Object
{
    private static final java.lang.String API_VERSION;
    private static final java.lang.String API_VERSION_KEY;
    private static final java.lang.String AUTHORIZATION_HEADER;
    private static final java.lang.String ENDPOINT_KEY;
    private static final int EXPIRE_MINUTES;
    private static final java.lang.String SDK_VERSION;
    private static final java.lang.String SHARED_ACCESS_KEY;
    private static final java.lang.String SHARED_ACCESS_KEY_NAME;
    private static final java.lang.String UTC_TIME_ZONE;
    private static final java.lang.String UTF8_ENCODING;
    private java.util.Map mConnectionData;

    public void <init>(java.lang.String)
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.microsoft.windowsazure.messaging.ConnectionStringParser: java.util.Map parse(java.lang.String)>($r1);

        $r0.<com.microsoft.windowsazure.messaging.Connection: java.util.Map mConnectionData> = $r2;

        return;
    }

    private java.lang.String AddApiVersionToUrl(java.lang.String)
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        java.lang.String $r1, $r3, varReplacer677, varReplacer678, varReplacer679, varReplacer680, varReplacer681;
        java.net.URI $r2;
        java.lang.StringBuilder $r4;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String getQuery()>();

        if $r3 != null goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer680 = "?";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer680);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer678 = "api-version";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer678);

        varReplacer681 = "=";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer681);

        varReplacer677 = "2014-09";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer677);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer679 = "&";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer679);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    private void addAuthorizationHeader(org.apache.http.client.methods.HttpUriRequest) throws java.security.InvalidKeyException
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        org.apache.http.client.methods.HttpUriRequest $r1;
        java.net.URI $r2;
        java.lang.String $r3, varReplacer690;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        $r2 = interfaceinvoke $r1.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toString()>();

        $r3 = specialinvoke $r0.<com.microsoft.windowsazure.messaging.Connection: java.lang.String generateAuthToken(java.lang.String)>($r3);

        varReplacer690 = "Authorization";

        interfaceinvoke $r1.<org.apache.http.client.methods.HttpUriRequest: void addHeader(java.lang.String,java.lang.String)>(varReplacer690, $r3);

        return;
    }

    private java.lang.String executeRequest(org.apache.http.client.methods.HttpUriRequest, java.lang.String) throws java.lang.Exception
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        org.apache.http.client.methods.HttpUriRequest $r1;
        java.lang.String $r2, $r3, $r5, varReplacer682, varReplacer683;
        android.net.http.AndroidHttpClient $r4, $r6;
        boolean $z0, $z1;
        org.apache.http.HttpResponse $r7;
        org.apache.http.StatusLine $r8;
        int $i0;
        com.microsoft.windowsazure.messaging.NotificationHubException $r9;
        java.lang.StringBuilder $r10;
        org.apache.http.Header $r11;
        java.lang.Throwable $r12;
        com.microsoft.windowsazure.messaging.NotificationHubResourceNotFoundException $r13;
        com.microsoft.windowsazure.messaging.NotificationHubUnauthorizedException $r14;
        com.microsoft.windowsazure.messaging.RegistrationGoneException $r15;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.microsoft.windowsazure.messaging.Connection: void addAuthorizationHeader(org.apache.http.client.methods.HttpUriRequest)>($r1);

        $r3 = null;

        $r4 = null;

        $z0 = 0;

     label01:
        $r5 = specialinvoke $r0.<com.microsoft.windowsazure.messaging.Connection: java.lang.String getUserAgent()>();

        $r6 = staticinvoke <android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>($r5);

     label02:
        $r4 = $r6;

     label03:
        $r7 = virtualinvoke $r6.<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r1);

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r8.<org.apache.http.StatusLine: int getStatusCode()>();

        $r5 = specialinvoke $r0.<com.microsoft.windowsazure.messaging.Connection: java.lang.String getResponseContent(org.apache.http.HttpResponse)>($r7);

     label04:
        if $r2 == null goto label07;

     label05:
        $z1 = interfaceinvoke $r7.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>($r2);

     label06:
        if $z1 != 0 goto label09;

        $z0 = 1;

     label07:
        if $r6 == null goto label08;

        virtualinvoke $r6.<android.net.http.AndroidHttpClient: void close()>();

     label08:
        if $i0 < 200 goto label15;

        if $i0 >= 300 goto label15;

        if $z0 == 0 goto label13;

        $r9 = new com.microsoft.windowsazure.messaging.NotificationHubException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer682 = "The \'";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer682);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer683 = "\' header does not present in collection";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer683);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.microsoft.windowsazure.messaging.NotificationHubException: void <init>(java.lang.String,int)>($r2, $i0);

        throw $r9;

     label09:
        $r11 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>($r2);

        $r3 = interfaceinvoke $r11.<org.apache.http.Header: java.lang.String getValue()>();

     label10:
        goto label07;

     label11:
        $r12 := @caughtexception;

        if $r4 == null goto label12;

        virtualinvoke $r4.<android.net.http.AndroidHttpClient: void close()>();

     label12:
        throw $r12;

     label13:
        if $r2 != null goto label14;

        return $r5;

     label14:
        return $r3;

     label15:
        if $i0 != 404 goto label16;

        $r13 = new com.microsoft.windowsazure.messaging.NotificationHubResourceNotFoundException;

        specialinvoke $r13.<com.microsoft.windowsazure.messaging.NotificationHubResourceNotFoundException: void <init>()>();

        throw $r13;

     label16:
        if $i0 != 401 goto label17;

        $r14 = new com.microsoft.windowsazure.messaging.NotificationHubUnauthorizedException;

        specialinvoke $r14.<com.microsoft.windowsazure.messaging.NotificationHubUnauthorizedException: void <init>()>();

        throw $r14;

     label17:
        if $i0 != 410 goto label18;

        $r15 = new com.microsoft.windowsazure.messaging.RegistrationGoneException;

        specialinvoke $r15.<com.microsoft.windowsazure.messaging.RegistrationGoneException: void <init>()>();

        throw $r15;

     label18:
        $r9 = new com.microsoft.windowsazure.messaging.NotificationHubException;

        specialinvoke $r9.<com.microsoft.windowsazure.messaging.NotificationHubException: void <init>(java.lang.String,int)>($r5, $i0);

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    private java.lang.String generateAuthToken(java.lang.String) throws java.security.InvalidKeyException
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        long $l0;
        javax.crypto.spec.SecretKeySpec $r1;
        java.lang.String $r2, $r5, $r7, $r8, varReplacer698, varReplacer699, varReplacer700, varReplacer701, varReplacer702, varReplacer705, varReplacer706, varReplacer707, varReplacer710, varReplacer711, varReplacer712, varReplacer713;
        java.util.Map $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.AssertionError $r6;
        java.util.Locale $r9;
        java.util.TimeZone $r10;
        java.util.Calendar $r11;
        java.lang.StringBuilder $r12;
        byte[] $r13, $r16;
        javax.crypto.Mac $r14, $r15;
        java.lang.Throwable $r17, $r18, $r19;
        int varReplacer703, varReplacer704, varReplacer708, varReplacer709;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r2 := @parameter0: java.lang.String;

        $r3 = $r0.<com.microsoft.windowsazure.messaging.Connection: java.util.Map mConnectionData>;

        varReplacer702 = "SharedAccessKeyName";

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer702);

        $r5 = (java.lang.String) $r4;

        $z0 = staticinvoke <com.microsoft.windowsazure.messaging.Utils: boolean isNullOrWhiteSpace(java.lang.String)>($r5);

        if $z0 == 0 goto label01;

        $r6 = new java.lang.AssertionError;

        varReplacer705 = "SharedAccessKeyName";

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(varReplacer705);

        throw $r6;

     label01:
        $r3 = $r0.<com.microsoft.windowsazure.messaging.Connection: java.util.Map mConnectionData>;

        varReplacer700 = "SharedAccessKey";

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer700);

        $r7 = (java.lang.String) $r4;

        $z0 = staticinvoke <com.microsoft.windowsazure.messaging.Utils: boolean isNullOrWhiteSpace(java.lang.String)>($r7);

        if $z0 == 0 goto label02;

        $r6 = new java.lang.AssertionError;

        varReplacer710 = "SharedAccessKey";

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(varReplacer710);

        throw $r6;

     label02:
        varReplacer711 = "UTF-8";

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, varReplacer711);

     label03:
        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

     label04:
        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

     label05:
        $r2 = $r8;

     label06:
        varReplacer706 = "UTC";

        $r10 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(varReplacer706);

        $r11 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r10);

        varReplacer708 = 12;

        varReplacer709 = 5;

        virtualinvoke $r11.<java.util.Calendar: void add(int,int)>(varReplacer708, varReplacer709);

        $l0 = virtualinvoke $r11.<java.util.Calendar: long getTimeInMillis()>();

        $l0 = $l0 / 1000L;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer703 = 10;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer703);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        $r14 = null;

     label07:
        varReplacer713 = "HmacSHA256";

        $r15 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer713);

     label08:
        $r14 = $r15;

     label09:
        $r1 = new javax.crypto.spec.SecretKeySpec;

        $r16 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        $r7 = virtualinvoke $r14.<javax.crypto.Mac: java.lang.String getAlgorithm()>();

        specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, $r7);

        virtualinvoke $r14.<javax.crypto.Mac: void init(java.security.Key)>($r1);

        $r13 = virtualinvoke $r14.<javax.crypto.Mac: byte[] doFinal(byte[])>($r13);

        varReplacer704 = 0;

        $r7 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r13, varReplacer704);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $r7 = $r8;

     label10:
        varReplacer707 = "UTF-8";

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, varReplacer707);

     label11:
        $r7 = $r8;

     label12:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer701 = "SharedAccessSignature sr=";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer701);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer699 = "&sig=";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer699);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer698 = "&se=";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer698);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        varReplacer712 = "&skn=";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer712);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label13:
        $r17 := @caughtexception;

        goto label12;

     label14:
        $r18 := @caughtexception;

        goto label09;

     label15:
        $r19 := @caughtexception;

        goto label06;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label15;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label15;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label14;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label13;
    }

    private java.lang.String getResponseContent(org.apache.http.HttpResponse) throws java.io.IOException
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        org.apache.http.HttpResponse $r1;
        java.io.BufferedReader $r2;
        java.lang.StringBuilder $r3;
        org.apache.http.HttpEntity $r4;
        java.io.InputStream $r5;
        java.io.InputStreamReader $r6;
        java.lang.String $r7;
        null_type varReplacer692;
        int varReplacer693;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        $r4 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r4 == null goto label3;

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r2 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label1:
        if $r7 == null goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer693 = 10;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer693);

        $r7 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label1;

     label2:
        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label3:
        varReplacer692 = null;

        return varReplacer692;
    }

    private java.lang.String getUserAgent()
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        java.lang.Object[] $r1;
        com.microsoft.windowsazure.messaging.PnsSpecificRegistrationFactory $r2;
        java.lang.String $r3, varReplacer691;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = "2014-09";

        $r2 = staticinvoke <com.microsoft.windowsazure.messaging.PnsSpecificRegistrationFactory: com.microsoft.windowsazure.messaging.PnsSpecificRegistrationFactory getInstance()>();

        $r3 = virtualinvoke $r2.<com.microsoft.windowsazure.messaging.PnsSpecificRegistrationFactory: java.lang.String getAPIOrigin()>();

        $r1[1] = $r3;

        $r1[2] = "Android";

        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r1[3] = $r3;

        varReplacer691 = "NOTIFICATIONHUBS/%s (api-origin=%s; os=%s; os_version=%s;)";

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer691, $r1);

        return $r3;
    }

    public transient java.lang.String executeRequest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.http.Header[]) throws java.lang.Exception
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r12, $r15, varReplacer670, varReplacer671, varReplacer672, varReplacer673, varReplacer674, varReplacer675, varReplacer676;
        org.apache.http.Header[] $r6;
        org.apache.http.Header $r7;
        int $i0, $i1;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r8;
        org.apache.http.impl.client.EntityEnclosingRequestWrapper $r9;
        java.util.Map $r10;
        java.lang.Object $r11;
        java.net.URI $r13;
        java.lang.StringBuilder $r14;
        boolean $z0;
        org.apache.http.entity.StringEntity $r16;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: org.apache.http.Header[];

        $r10 = $r0.<com.microsoft.windowsazure.messaging.Connection: java.util.Map mConnectionData>;

        varReplacer671 = "Endpoint";

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer671);

        $r12 = (java.lang.String) $r11;

        $r13 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r12);

        $r12 = virtualinvoke $r13.<java.net.URI: java.lang.String getScheme()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer674 = "https";

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer674);

        $r15 = virtualinvoke $r13.<java.net.URI: java.lang.String toString()>();

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        $r12 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>($i0);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = $r12;

        varReplacer675 = "/";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer675);

        if $z0 != 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer670 = "/";

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer670);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = specialinvoke $r0.<com.microsoft.windowsazure.messaging.Connection: java.lang.String AddApiVersionToUrl(java.lang.String)>($r1);

        $r8 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        specialinvoke $r8.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>($r4, $r1);

        $z0 = staticinvoke <com.microsoft.windowsazure.messaging.Utils: boolean isNullOrWhiteSpace(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $r16 = new org.apache.http.entity.StringEntity;

        varReplacer676 = "UTF-8";

        specialinvoke $r16.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r2, varReplacer676);

        virtualinvoke $r8.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>($r16);

     label2:
        varReplacer672 = "Content-Type";

        varReplacer673 = "application/atom+xml";

        virtualinvoke $r8.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void addHeader(java.lang.String,java.lang.String)>(varReplacer672, varReplacer673);

        $r9 = new org.apache.http.impl.client.EntityEnclosingRequestWrapper;

        specialinvoke $r9.<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void <init>(org.apache.http.HttpEntityEnclosingRequest)>($r8);

        if $r6 == null goto label4;

        $i0 = lengthof $r6;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r7 = $r6[$i1];

        virtualinvoke $r9.<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void addHeader(org.apache.http.Header)>($r7);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r1 = specialinvoke $r0.<com.microsoft.windowsazure.messaging.Connection: java.lang.String executeRequest(org.apache.http.client.methods.HttpUriRequest,java.lang.String)>($r9, $r5);

        return $r1;
    }

    public transient java.lang.String executeRequest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.http.Header[]) throws java.lang.Exception
    {
        com.microsoft.windowsazure.messaging.Connection $r0;
        java.lang.String $r1, $r2, $r3, $r4, varReplacer637;
        org.apache.http.Header[] $r5;
        null_type varReplacer638;

        nop;

        $r0 := @this: com.microsoft.windowsazure.messaging.Connection;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: org.apache.http.Header[];

        varReplacer637 = "application/atom+xml";

        varReplacer638 = null;

        $r1 = virtualinvoke $r0.<com.microsoft.windowsazure.messaging.Connection: java.lang.String executeRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.http.Header[])>($r1, $r2, varReplacer637, $r4, varReplacer638, $r5);

        return $r1;
    }
}
