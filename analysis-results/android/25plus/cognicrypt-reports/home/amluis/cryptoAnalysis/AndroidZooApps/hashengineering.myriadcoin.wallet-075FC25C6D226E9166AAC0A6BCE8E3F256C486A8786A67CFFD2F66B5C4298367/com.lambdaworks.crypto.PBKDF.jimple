public class com.lambdaworks.crypto.PBKDF extends java.lang.Object
{

    public void <init>()
    {
        com.lambdaworks.crypto.PBKDF $r0;

        $r0 := @this: com.lambdaworks.crypto.PBKDF;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void pbkdf2(javax.crypto.Mac, byte[], int, byte[], int) throws java.security.GeneralSecurityException
    {
        javax.crypto.Mac $r0;
        byte[] $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, varReplacer6600, varReplacer6602, varReplacer6603, varReplacer6604, varReplacer6605, varReplacer6606, varReplacer6607;
        double $d0, $d1, $d2, varReplacer6608, varReplacer6609;
        byte $b4, $b8;
        java.security.GeneralSecurityException $r6;
        java.lang.String varReplacer6601;

        nop;

        $r0 := @parameter0: javax.crypto.Mac;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i1 := @parameter4: int;

        $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>();

        $d0 = (double) $i1;

        varReplacer6608 = 2.0;

        varReplacer6609 = 32.0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(varReplacer6608, varReplacer6609);

        $d1 = $d1 - 1.0;

        $d2 = (double) $i3;

        $d1 = $d1 * $d2;

        $b4 = $d0 cmpl $d1;

        if $b4 <= 0 goto label1;

        $r6 = new java.security.GeneralSecurityException;

        varReplacer6601 = "Requested key length too long";

        specialinvoke $r6.<java.security.GeneralSecurityException: void <init>(java.lang.String)>(varReplacer6601);

        throw $r6;

     label1:
        $r4 = newarray (byte)[$i3];

        $r3 = newarray (byte)[$i3];

        $i2 = lengthof $r1;

        $i2 = $i2 + 4;

        $r5 = newarray (byte)[$i2];

        $d0 = (double) $i1;

        $d1 = (double) $i3;

        $d0 = $d0 / $d1;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d0;

        $i5 = $i2 + -1;

        $i5 = $i5 * $i3;

        $i1 = $i1 - $i5;

        $i5 = lengthof $r1;

        varReplacer6605 = 0;

        varReplacer6606 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer6605, $r5, varReplacer6605, $i5);

        $i5 = 1;

     label2:
        if $i5 > $i2 goto label9;

        $i6 = lengthof $r1;

        $i7 = $i5 >> 24;

        $i7 = $i7 & 255;

        $b4 = (byte) $i7;

        $r5[$i6] = $b4;

        $i6 = lengthof $r1;

        $i6 = $i6 + 1;

        $i7 = $i5 >> 16;

        $i7 = $i7 & 255;

        $b4 = (byte) $i7;

        $r5[$i6] = $b4;

        $i6 = lengthof $r1;

        $i6 = $i6 + 2;

        $i7 = $i5 >> 8;

        $i7 = $i7 & 255;

        $b4 = (byte) $i7;

        $r5[$i6] = $b4;

        $i6 = lengthof $r1;

        $i6 = $i6 + 3;

        $i7 = $i5 >> 0;

        $i7 = $i7 & 255;

        $b4 = (byte) $i7;

        $r5[$i6] = $b4;

        virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r5);

        varReplacer6607 = 0;

        virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6607);

        varReplacer6602 = 0;

        varReplacer6603 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, varReplacer6602, $r3, varReplacer6602, $i3);

        $i6 = 1;

     label3:
        if $i6 >= 1 goto label6;

        virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4);

        varReplacer6600 = 0;

        virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6600);

        $i7 = 0;

     label4:
        if $i7 >= $i3 goto label5;

        $b4 = $r3[$i7];

        $b8 = $r4[$i7];

        $b4 = $b4 ^ $b8;

        $r3[$i7] = $b4;

        $i7 = $i7 + 1;

        goto label4;

     label5:
        $i6 = $i6 + 1;

        goto label3;

     label6:
        $i6 = $i5 + -1;

        $i6 = $i6 * $i3;

        if $i5 != $i2 goto label8;

        $i7 = $i1;

     label7:
        varReplacer6604 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, varReplacer6604, $r2, $i6, $i7);

        $i5 = $i5 + 1;

        goto label2;

     label8:
        $i7 = $i3;

        goto label7;

     label9:
        return;
    }

    public static byte[] pbkdf2(java.lang.String, byte[], byte[], int, int) throws java.security.GeneralSecurityException
    {
        java.lang.String $r0;
        byte[] $r1, $r2;
        int $i0, $i1;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Mac $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r0);

        $r3 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r0);

        virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3);

        $r1 = newarray (byte)[$i1];

        staticinvoke <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>($r4, $r2, $i0, $r1, $i1);

        return $r1;
    }
}
