Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7626)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 89e928c2f5b86e52f430ba5cc24186dc16a9e54c0b6fd2e06ebf08bd0e8b451a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7627)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 40bf607c940b517acc9bced8046f58660f46235219d298ee3aaf2858300127a4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7869)
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: 85af084bf4a3fd564143a85860a6a0a407a5a8bc03b29355ef69e34d755fa0de
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8041)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 33b78b0c8877556d11cad7dfd5f27efc42b2c839353ddbaff4b4fc7fac025095
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: 9426bc241b4896a2481b14d138bdab52844378f8d5066e922f9765986e30abe0
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 921527a4d56c9731eabbd204e7f3975b795533b68dde403bf13034be3bf0ecb6
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <jp.co.cec.module.serverAction.ServerHttps: void <init>(android.content.Context,java.lang.String,java.lang.String[])>
		SHA-256: 5c20288382bcf0a1627715b310cf727c36369d6746bce4d31f3047df6489b5fb
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8526)
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: a50f6e1c9d6189c88632e1649a0c8d2b715d1a82baf4e17b4da5f7a4ffa12ade
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: 13da1abb1645ee29635bf8ebe0438b07a7a0767c2b98b526267fb85d76610d4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 2f3806df3da28fe0dd00b1490efaf1a439d9488f1b4544c31f1cc2a9107706a2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11669)
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 20767b65beff14eaa0bc65b42f956af52869afe4500d00acbae6888d8c165a80
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10892)
		Method: <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 612d0a39f040b3b6316a4c9fc13a5c2dc38536037ab5d176c83d2a0305d11f7d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7599)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: 3ed1bff14be894ebd64ad569b7e01957af62230c197c9679a1f50d575e2abfde
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7739)
		Method: <org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: e32c4d5c10c4744dca5fde39b674c7f66d12a1ae26cc71ae696dd94397fefc2c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8042)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 4ac303ad9f1d2b066111fac973dfa52e21de1e0de0fff0c779d94616c67c7813
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8131)
		Method: <jp.co.cec.module.serverAction.MySSLSocketFactory: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])>
		SHA-256: 98756e3d4277fccd51a3817ecda878f712886b04418727bb2072468a4f441b8d
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <org.mozilla.gecko.kaito.activate.MultiProxyHttpRequest: org.apache.http.client.HttpClient getHttpClient(org.mozilla.gecko.kaito.activate.KAITOProxy)>
		SHA-256: 1550e599c346e1b335a45b5cfa0f723491256651b00c75d73c02a1cde82c0974
		Secure: true
	Object:
		Variable: varReplacer7626
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7626)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: f59f902bfad8818f49fa31535b112b5184ae91e62dcd5188e3c6d707dc31b37f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13075)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: a8965dac3b47d67f5b6b75f6e7f24d2a9d51a635c4383b3314cd450604cef0f2
		Secure: true
	Object:
		Variable: varReplacer8042
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8042)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 86684e41db5102bfa15909bda8a5cfd39427cc99f6a0cda9788569c29451a453
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.Utils: void <clinit>()>
		SHA-256: 21751f7aecf1d291eda3d279cbf29dd85f2a1ab722649b63742a78fd41b9d237
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.updater.UpdateService: boolean verifyDownloadedPackage(java.io.File)>
		SHA-256: 4ac6f5b22eca17889109082c03467dfaeae8a7313547682c44458185824f732e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: 55c463b3fcc9431d3a265126e007f00c9d82d9b1025b7da12398b8d8dbf7556d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 16fbdee3ccf53566f47857ba4ca4b44fb5e9d395e6f918a68cd3d7ad2b4abc32
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: 52672da9d432b3c5d5edd961e30f2dca2331e40469fa9b97c7383befbde61f28
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3418)
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 244cc6286e9d5d638e432d59d0fa76c96d61722dcbc02ba7d03496b0ea6fcd29
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 8d880835e7f352b72277cb342ada320ac4ef0e1cf4825b19c38a652440e84c82
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer12962)
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 3485988a5ce364771a55072f5183f3985cdee649b91f1f1610b0c916cfb4e95c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: 9ced9c51c14331591363970df2ef4929fe6f001ffc3faa22cbe577fc8899fde4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8295)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: aa9601358d6eaf92f7cc0c57958fca1c7e45a20ad42f6d64ce0be7f3c80287d2
		Secure: true

Findings in Java Class: org.mozilla.gecko.updater.UpdateService

	 in Method: boolean verifyDownloadedPackage(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #612d0a39f040b3b6316a4c9fc13a5c2dc38536037ab5d176c83d2a0305d11f7d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>($r3)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #612d0a39f040b3b6316a4c9fc13a5c2dc38536037ab5d176c83d2a0305d11f7d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.mozilla.gecko.browserid.DSACryptoImplementation

	 in Method: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #3485988a5ce364771a55072f5183f3985cdee649b91f1f1610b0c916cfb4e95c)
			First parameter (with value 1024) should be any of {2048}
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer12963)


Findings in Java Class: org.mozilla.gecko.kaito.KAITOLoader

	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7633, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7626)


	 in Method: byte[] encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8043, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8042)


Findings in Java Class: org.mozilla.gecko.sync.net.BaseResource

	 in Method: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11676, varReplacer11676, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11676, varReplacer11676, $r3)


Findings in Java Class: ch.boye.httpclientandroidlib.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3419, varReplacer3419, varReplacer3419)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3419, varReplacer3419, varReplacer3419)


Findings in Java Class: org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7740, r5, varReplacer7740)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7740, r5, varReplacer7740)


Findings in Java Class: jp.co.cec.module.serverAction.MySSLSocketFactory

	 in Method: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8132, r8, varReplacer8132)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8132, r8, varReplacer8132)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 1
	RequiredPredicateError: 12
	TypestateError: 1
=====================================================================