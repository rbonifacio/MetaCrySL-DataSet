Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer346
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer346)
		Method: <com.batch.android.d.i: void <init>(java.lang.String)>
		SHA-256: ce3ab2dc72b09f88fe1ce9862b6872b316bc6cca6085b97c9a5c43655e767085
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 65248ad68e0da338be1d1770f5a3f22e68be37dc7191db524a9ce9dd765d07fd
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: ba9bb308a71aec07457ed4d6c590aa1fcf1340a600509d26e22024f0687510d6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer817)
		Method: <com.batch.android.d.b: java.lang.String c(java.lang.String)>
		SHA-256: 724599e0acad3e5326b57d9f7f1a9c8c2d9e96dbb3420527df62a0dd64446fc7
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1935)
		Method: <com.purplebrain.adbuddiz.sdk.i.g: java.lang.String a(byte[])>
		SHA-256: 57d92b389f10d15645e3fedd86e490ee4bd15225047496a6970525ae85e191ec
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.purplebrain.adbuddiz.sdk.i.g: java.lang.String a(byte[])>
		SHA-256: e4bf59c3e9030b7a91977abab8db686582b5cea2a2ac5fa004a6319ddc99d716
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5131)
		Method: <mkisly.icheckers.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c7a4b3498b6ffc9824c18fbd00d096c593269eefe4530483276ad32b82fcd31f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer815)
		Method: <com.batch.android.d.b: java.lang.String d(java.lang.String)>
		SHA-256: 52eacbf76bf33e3ed58bf4b5fbdd253c29096417cab1351a681a9e0cf78c9e3f
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4296)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 537d1c8f76aebacbf610495e527bd2ba1fb1e6475ae05293f105ce257d9d64ff
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 9786886ac2db0761c1d3e10a75b011a24d1f7cb01580ee49b66504310b00eae2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.batch.android.d.b: java.lang.String d(java.lang.String)>
		SHA-256: 145665e9f4abfa0b758e7b79a04a72b778f82708ef4c378b7c2aa094d2cf05bb
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 9d810ebc488d6d34556786abeae1ee34b49bd2f136a5086fac97f67236c8382
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 661e32cd295f4274a97a82d17d1e90e9036a95c02aa444ba91eb7099e83676e1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 196e703c69b82d759bde2f288a409abbe6c66f41818298a6ffe615234db719b4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.batch.android.d.i: byte[] d(byte[])>
		SHA-256: f6e7bf0db32c2bf85f08a5574e785bf4bfda9c8dc8f6aa6cea10e1056e42c957
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.purplebrain.adbuddiz.sdk.i.n: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 66acfa86f43c6bef4031c740afb4f0d411a01b0169f5c60b9dfe599b8d6a19a6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.batch.android.d.b: java.lang.String c(java.lang.String)>
		SHA-256: c59b53719b1ba66a267a3aad6b975797ff9f244863b2a39b7021de3a983241df
		Secure: true
	Object:
		Variable: varReplacer1957
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1957)
		Method: <com.purplebrain.adbuddiz.sdk.i.g: javax.crypto.spec.SecretKeySpec a()>
		SHA-256: 93e752258a22b1d8300b7267d4dbf2c8ea5870c552dd0124ba98f8ab712aa8a7
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: a360b5211bf78865367bcc344e953aeccd99cafdecc0ce7f53c048e57134fb7b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer910)
		Method: <com.batch.android.d.i: byte[] c(byte[])>
		SHA-256: b8ad9bdff4cf8402980be7bea6a342c882a4345b4565a0422b318b52d37a4ff1
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4295)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: df1c26533cd6a76138862ef69da70283432cf7a35bf86cc1152b19930433d1ed
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 5b308e51c0d797983fd3b8b6a253264da34509029c611af283a4a365e4b22a82
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <mkisly.utility.Encryption: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: f5ec15884e920f268313d32e6a06c3f102eb94c6525b984af1a414ac8dd65845
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.batch.android.d.i: byte[] c(byte[])>
		SHA-256: 63204078602a60442a49ab62c92ee39e6e3f3485806bbe81fdc1c8966d6a4a8f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1957)
		Method: <com.purplebrain.adbuddiz.sdk.i.g: javax.crypto.spec.SecretKeySpec a()>
		SHA-256: 5c967d46576473ebd13d4777f10a4b50f337e3f3792e3043cbc2f004f0620c42
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.purplebrain.adbuddiz.sdk.i.g: java.lang.String a(byte[])>
		SHA-256: 430940d92d60f0f4cb339281d035b2fee2bf6234babba27a0ddbbdbf2860b38d
		Secure: false
	Object:
		Variable: varReplacer4296
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4296)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 3298883a2a95e2bb94b3469c35cf36aeedcd8ae34072b7e29df09b09694168b5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4500)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzai(java.lang.String)>
		SHA-256: 4d7888aa548410da1e074c201b8bc623e8b612a668d4f53c9a2e471e1cb35550
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzo: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 1c0f489768ca14400ee7e90b9f6481010dea308921d254fd4fcfc39ad2682a
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzai(java.lang.String)>
		SHA-256: cfe1821e51a982b8ee62bf40bf5e5d604e5024a0e9b0823b378ca3541e67b3b5
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4195)
		Method: <com.google.android.gms.internal.zzfl: java.lang.String zzfb()>
		SHA-256: be3fbe29a7bed839a625db3b09fbc07e17f1019910c07233e3b5277e7bc6feb1
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5326)
		Method: <com.google.example.games.basegameutils.GameHelperUtils: java.lang.String getSHA1CertFingerprint(android.content.Context)>
		SHA-256: ba642795227901632c49a181e837b27281e17a73e2317fc0acc9003e2c5c26bd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.purplebrain.adbuddiz.sdk.i.n: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 621404d6799d20345d7213665329736052f6df62e795cf4a039c9951a7e03c0d
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <mkisly.icheckers.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.google.example.games.basegameutils.GameHelperUtils: java.lang.String getSHA1CertFingerprint(android.content.Context)>
		SHA-256: b95cd9a42f4be3abf3fd2df0455645f6074fd03b611ae8a509eee3fa3cf10597
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer346)
		Method: <com.batch.android.d.i: void <init>(java.lang.String)>
		SHA-256: 489b3f201bf4e9553113f0c80c912e50b71ff180e400eda078371ed8dfe4a5bd
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer367)
		Method: <com.batch.android.d.i: byte[] d(byte[])>
		SHA-256: 4f6e34444449dba46895eff0d244d3558f59d4bb1fd2faf035a3dca1a5c25543
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzai: byte[] zzn(java.lang.String)>
		SHA-256: ae2dbc6a1515c66ca78d645e195440a31fecd4a8875a7e06597ed061a54e6d99
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzfl: java.lang.String zzfb()>
		SHA-256: 52cebfb14bbbf7b204d5db18cd61ed704698d2324683caf2d188d8bcb4114742
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5692)
		Method: <com.google.android.gms.internal.zzaf: java.security.MessageDigest zzbE()>
		SHA-256: 15899ee24dd2b8bb31814394b7d9e8e2347ae338d6bf48c655e66f11eff8b346
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <mkisly.utility.Encryption: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: a68237421236dbf085e7715265d9c17b05c1669c33de3056ddfeb9bb29148e74
		Secure: false

Findings in Java Class: com.batch.android.d.b

	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #52eacbf76bf33e3ed58bf4b5fbdd253c29096417cab1351a681a9e0cf78c9e3f)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer815)


Findings in Java Class: mkisly.utility.Encryption

	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #661e32cd295f4274a97a82d17d1e90e9036a95c02aa444ba91eb7099e83676e1)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a360b5211bf78865367bcc344e953aeccd99cafdecc0ce7f53c048e57134fb7b)
			First parameter (with value "DES") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3847, $r8)


	 in Method: java.lang.String encrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4062, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #65248ad68e0da338be1d1770f5a3f22e68be37dc7191db524a9ce9dd765d07fd)
			First parameter (with value "DES") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #f5ec15884e920f268313d32e6a06c3f102eb94c6525b984af1a414ac8dd65845)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)


Findings in Java Class: com.google.example.games.basegameutils.GameHelperUtils

	 in Method: java.lang.String getSHA1CertFingerprint(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ba642795227901632c49a181e837b27281e17a73e2317fc0acc9003e2c5c26bd)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5326)


Findings in Java Class: com.google.android.gms.internal.zzag

	 in Method: java.lang.String zzp(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #15899ee24dd2b8bb31814394b7d9e8e2347ae338d6bf48c655e66f11eff8b346)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzaf: byte[] zzn(java.lang.String)>($r1)


	 in Method: java.lang.String zzo(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #15899ee24dd2b8bb31814394b7d9e8e2347ae338d6bf48c655e66f11eff8b346)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzaf: byte[] zzn(java.lang.String)>($r1)


Findings in Java Class: com.purplebrain.adbuddiz.sdk.i.g

	 in Method: javax.crypto.spec.SecretKeySpec a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1957)


	 in Method: java.lang.String a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1933, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1933, $r3, $r2)


Findings in Java Class: mkisly.icheckers.billing.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.google.android.gms.internal.zzo

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4296)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4297, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


Findings in Java Class: com.batch.android.d.i

	 in Method: void <init>(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer346)


	 in Method: byte[] c(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer909, $r2)


	 in Method: byte[] d(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer368, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 41

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 15
	IncompleteOperationError: 2
	ConstraintError: 6
=====================================================================