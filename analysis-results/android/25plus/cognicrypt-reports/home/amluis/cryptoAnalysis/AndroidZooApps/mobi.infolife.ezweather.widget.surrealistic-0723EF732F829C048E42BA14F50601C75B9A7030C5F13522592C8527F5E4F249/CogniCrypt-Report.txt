Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String generateSigStr(java.lang.String)>
		SHA-256: e2d69856c9b744dac1dc3c7ac29a90ff33ee68c91c73e371d93120163d7d21bc
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] b(byte[],byte[])>
		SHA-256: a69ba1c0681ad75d9b9a76b3f7012b423dc5a434090353d3cd3b1ebb8a1701dc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16882)
		Method: <com.cmcm.orion.utils.b: byte[] b(byte[],byte[])>
		SHA-256: 832396ccf353cc717f7cf28123088603de84a0fe61a0718e493386202010d716
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer17302)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: 50334e7f9465a3fe02ad9fef5b2bfccd3e96e06fd3d08e5c4dadf4566ba051fe
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] b(byte[],byte[])>
		SHA-256: 9e818bdf7747d2779b8077c0fedf7399b8f6636c8064145231f0d6338e1ab2ff
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1020)
		Method: <com.cmcm.adsdk.report.a: byte[] a(byte[])>
		SHA-256: aa62273ff76c7dd978f132222d99c883ac7cafb856fc1af3d451f81eb6bba439
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 150bd5b7f4fa98bd7d19b4334335a3f364b812a82990b17162c6a447c071634b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: d0f6f4706546c156ee289b202709825e5df53f7e4f36e0982c154eb3536bcb6c
		Secure: false
	Object:
		Variable: varReplacer17302
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer17302)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: f46ccf00103e22aa9ea74623ba344bd6c1a89c1d1a2de8c70bd9a834ed7554c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17521)
		Method: <com.amberweather.ist_library.userId.AndroidDeviceID: java.lang.String getSha1Hash(java.lang.String)>
		SHA-256: cbbbbb496b63d4b8795f3ff8796ad98803fa54ddb8f972fb70eacc057a0e9086
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.amberweather.ist_library.userId.AndroidDeviceID: java.lang.String getSha1Hash(java.lang.String)>
		SHA-256: efcceff32b0ed962e35edf6e1d0cb2f1e781104f871b1bff7df26cccd8f108d0
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1005)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: c32c07d315717afdf4731de7386315005e411e79c053a86aed0df1d6cd7a3203
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: a107f0a15b16b8e021c95c077590c48b5b253ddc4b8bda38bce253162a9875cd
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2075)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: b2f0f7b199ac453a5444c45d7723a385bf5900e7ef22dca10a7137fe26494d9a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17303)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: 3ad9e1aa72bc3a53a996fee751595fa7a09e333381fa4a847b30f78e89a414f5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.adsdk.report.a: byte[] a(byte[])>
		SHA-256: 46f7ffd9ba9f0fbdeecda0158b98e79c077833560688195f3166bc3a80c52ead
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14639)
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 2f3a8666d86c60019269fd5295817c57435e1feaf6a04fc0365d402e0398e93f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2077)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: fce4927d0fee50a8e0866ac3eec7910f095fa29cd73c0e763c7763f047910124
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16319)
		Method: <com.amazonaws.http.UrlHttpClient: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)>
		SHA-256: b2083e30c04579d4e33ff92482e78b35599539c1106de3f82b7ddd487b38f4f4
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: ee20511c101e9f3462677ac977fd480495a47c1faa8556b4d8f041bb73a163a6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15748)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: 70e78725673010a62a08eb17278b5b2853844fd6d13616e93b127cef8558d227
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8721)
		Method: <com.cmcm.orion.picks.impl.a$1$1: java.lang.String b(java.lang.String)>
		SHA-256: 432c585e93f2dff253c4eb3c423f59c07e4a4ac38ab5ae67d3d05ac3ae11e78
		Secure: true
	Object:
		Variable: varReplacer2077
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2077)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: b5b54d19ffb2c2583fff0d9274e6e6e07bc1909743fb88fb2bde072aa4f1598d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17046)
		Method: <com.cmcm.orion.utils.b: byte[] a(byte[],byte[])>
		SHA-256: 9ef0c01b429005b9f8e8cbcf102dc1e07d85d9598c98b070df66b06f01f563b1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17132)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String generateSigStr(java.lang.String)>
		SHA-256: e64a4c461ba9a6b200233a57c61b41c410167c6b96a16e609c1bb014f837a138
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cmcm.orion.picks.impl.a$1$1: java.lang.String b(java.lang.String)>
		SHA-256: 9e8b4c9c3a385d14ce83ed1234f17837ebff5ae4987490d6a5c211cb9f1ff774
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: 1dfb89f37c9374b0f8797bb983909bd30950d34d01d7bf720df31e0857648cba
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18476)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 88e0a4ff945ce6c172575016d14f8fc5e1daebfc013236985f2acf00aec56649
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6742)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: c58f128ad4b06b963f82c99ffdb062e1f73601592526bc44f5528cf11db5b0c5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] a(byte[],byte[])>
		SHA-256: 3e407fecc05e78999e7d43d66f4d16e5d6e6c29547848cbaac2765b54d6dc50
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 51d771176588bd9b377838ae77608f0ca53802f65bd7d4d703667e5fef52b40b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5783)
		Method: <com.amberweather.sdk.amberinterstitialad.Utils.AmberUtils: java.lang.String md5(byte[])>
		SHA-256: 8921d6870085915c5d1c90a1c903de75298cd976ebdd1a17d9c8ef437d311b64
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer16919)
		Method: <com.cmcm.orion.utils.b: java.security.Key aT(java.lang.String)>
		SHA-256: 1bf89379b39d631e1835fc32cf58d451ad7be30f70df7847ffc2c3bfc939eb9a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2758)
		Method: <com.duapps.ad.stats.ToolStatsCore: boolean a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 59fd99c0286a77d8ecaed81625c0052b3e5eca372507138e187b939a46c21de6
		Secure: true
	Object:
		Variable: r6
		Type: java.security.SecureRandom
		Statement: specialinvoke r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: 326c892eafee669a652e905d60ef67edde44b849328880dfa09f355c60ebf2cc
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7282)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: b5d9e2251c5db66912d0c9e79bdefbd85711b3c17f1188a8e5075f87a981824a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amberweather.sdk.amberinterstitialad.Utils.AmberUtils: java.lang.String md5(byte[])>
		SHA-256: 5e72dd85de168c9c08028f18f055cd4e856ede41e4bf6951409bcc5da8efb484
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] a(byte[],byte[])>
		SHA-256: 92f0b5153c0953cefafd845bfbe12a45b3d4c2ed122d0ddcdbc14928ed421169
		Secure: false
	Object:
		Variable: varReplacer1005
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1005)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: e7e52ac6bdb479c88c7e3b600c753f8ea126360ca11e5f6008489b8d3bbdbd52
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.cmcm.orion.utils.b: java.security.Key aT(java.lang.String)>
		SHA-256: 95eb8a582489815d545653f28b85ce5b62df1e31bf21bf17a4f540ca5fc46078
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: 628e38a52ee52d69ccf402b0e70352e497db2ee6841c308f8d94d82ec6baa482
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.duapps.ad.stats.ToolStatsCore: boolean a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6dccddc85db8a0420413b2cdd7c4e79ecfe1ab461275a4708c7dffcf2c681e11
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke r6.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: 8b8fc2b325f11b2dcff641fc3d17e8bd17c6aaf9108f0ce3b797711d632ffdb8
		Secure: true

Findings in Java Class: com.cmcm.orion.utils.b

	 in Method: byte[] b(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #832396ccf353cc717f7cf28123088603de84a0fe61a0718e493386202010d716)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16882)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer16883, $r3)


	 in Method: java.security.Key aT(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #1bf89379b39d631e1835fc32cf58d451ad7be30f70df7847ffc2c3bfc939eb9a)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer16919)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)


	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9ef0c01b429005b9f8e8cbcf102dc1e07d85d9598c98b070df66b06f01f563b1)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17046)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer17045, $r3)


Findings in Java Class: com.cmcm.adsdk.config.RequestUFS

	 in Method: java.lang.String decryptResult(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3ad9e1aa72bc3a53a996fee751595fa7a09e333381fa4a847b30f78e89a414f5)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17303)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3ad9e1aa72bc3a53a996fee751595fa7a09e333381fa4a847b30f78e89a414f5)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17303)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer17302)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer17300, $r3, $r6)


Findings in Java Class: com.cmcm.adsdk.report.a

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1022, $r2, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1022, $r2, $r3)


	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1005)


Findings in Java Class: com.duapps.ad.base.a

	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2076, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2077)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6743, varReplacer6743, varReplacer6743)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6743, varReplacer6743, varReplacer6743)


Findings in Java Class: com.amazonaws.http.UrlHttpClient

	 in Method: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16320, $r2, varReplacer16320)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16320, $r2, varReplacer16320)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 45

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	RequiredPredicateError: 16
=====================================================================