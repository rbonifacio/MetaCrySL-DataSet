public class tools.p extends java.lang.Object
{
    public static java.lang.String a;

    static void <clinit>()
    {
        null_type varReplacer172;

        nop;

        varReplacer172 = null;

        <tools.p: java.lang.String a> = varReplacer172;

        return;
    }

    public static java.lang.Boolean a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.lang.Boolean $r3;
        int varReplacer169, varReplacer170;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer170 = 0;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer170);

        $r2 = <tools.p: java.lang.String a>;

        if $r2 != null goto label1;

        staticinvoke <tools.p: void d(java.lang.String,java.lang.String)>($r0, $r1);

        varReplacer169 = 1;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer169);

     label1:
        return $r3;
    }

    public static java.lang.String a(int, a.b, int, java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        a.b $r0;
        java.lang.String $r1;
        int[] $r2;

        nop;

        $i0 := @parameter0: int;

        $r0 := @parameter1: a.b;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

        $i1 = $i1 + 1;

        $i2 = -1;

        $r2 = <tools.r: int[] a>;

        $i3 = virtualinvoke $r0.<a.b: int ordinal()>();

        $i3 = $r2[$i3];

        lookupswitch($i3)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label08;
            case 4: goto label13;
            case 5: goto label18;
            case 6: goto label23;
            default: goto label01;
        };

     label01:
        $r1 = staticinvoke <tools.p: java.lang.String a(int,java.lang.String)>($i2, $r1);

        return $r1;

     label02:
        $i0 = $i0 * 1000;

        $i2 = $i0 + $i1;

        goto label01;

     label03:
        lookupswitch($i0)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            default: goto label04;
        };

     label04:
        goto label01;

     label05:
        $i2 = $i1 + 3000;

        goto label01;

     label06:
        $i2 = $i1 + 5000;

        goto label01;

     label07:
        $i2 = $i1 + 4000;

        goto label01;

     label08:
        lookupswitch($i0)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            default: goto label09;
        };

     label09:
        goto label01;

     label10:
        $i2 = $i1 + 5000;

        goto label01;

     label11:
        $i2 = $i1 + 4000;

        goto label01;

     label12:
        $i2 = $i1 + 2000;

        goto label01;

     label13:
        lookupswitch($i0)
        {
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label17;
            default: goto label14;
        };

     label14:
        goto label01;

     label15:
        $i2 = $i1 + 2000;

        goto label01;

     label16:
        $i2 = $i1 + 1000;

        goto label01;

     label17:
        $i2 = $i1 + 3000;

        goto label01;

     label18:
        lookupswitch($i0)
        {
            case 1: goto label20;
            case 2: goto label21;
            case 3: goto label22;
            default: goto label19;
        };

     label19:
        goto label01;

     label20:
        $i2 = $i1 + 4000;

        goto label01;

     label21:
        $i2 = $i1 + 1000;

        goto label01;

     label22:
        $i2 = $i1 + 5000;

        goto label01;

     label23:
        $i1 = $i1 * 100;

        $i1 = $i1 + 10000;

        $i2 = $i1 + $i0;

        goto label01;
    }

    private static java.lang.String a(int, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, varReplacer1591;
        java.util.HashMap $r0;
        tools.s $r1;
        java.lang.String $r2, $r3, varReplacer1588, varReplacer1589, varReplacer1590, varReplacer1592;
        boolean $z0;
        java.lang.Boolean $r4;
        org.json.JSONArray $r5;
        org.json.JSONObject $r6;
        java.lang.Integer $r7;
        java.lang.Throwable $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.Exception $r10;
        java.lang.RuntimeException $r11;
        java.lang.Object $r12;

        nop;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.String;

        $r3 = <tools.p: java.lang.String a>;

        if $r3 == null goto label25;

        $r3 = <tools.p: java.lang.String a>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        varReplacer1592 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1592);

        if $z0 == 0 goto label01;

        return $r2;

     label01:
        $r0 = new java.util.HashMap;

        varReplacer1591 = 4;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(varReplacer1591);

        $r3 = <tools.p: java.lang.String a>;

     label02:
        $z0 = staticinvoke <tools.p: boolean c(java.lang.String)>($r3);

     label03:
        if $z0 == 0 goto label25;

        $r3 = <tools.p: java.lang.String a>;

     label04:
        $r4 = staticinvoke <tools.p: java.lang.Boolean b(java.lang.String)>($r3);

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label05:
        if $z0 == 0 goto label24;

        $r5 = new org.json.JSONArray;

        $r3 = <tools.p: java.lang.String a>;

     label06:
        specialinvoke $r5.<org.json.JSONArray: void <init>(java.lang.String)>($r3);

     label07:
        if $r5 == null goto label25;

     label08:
        $i1 = virtualinvoke $r5.<org.json.JSONArray: int length()>();

     label09:
        $i2 = 0;

     label10:
        if $i2 >= $i1 goto label21;

     label11:
        $r6 = virtualinvoke $r5.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i2);

     label12:
        $r1 = new tools.s;

     label13:
        specialinvoke $r1.<tools.s: void <init>()>();

        varReplacer1589 = "id";

        $i3 = virtualinvoke $r6.<org.json.JSONObject: int getInt(java.lang.String)>(varReplacer1589);

     label14:
        $r1.<tools.s: int a> = $i3;

     label15:
        varReplacer1590 = "body";

        $r2 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1590);

     label16:
        $r1.<tools.s: java.lang.String b> = $r2;

        $i3 = $r1.<tools.s: int a>;

     label17:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r1);

     label18:
        $i2 = $i2 + 1;

        goto label10;

     label19:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        varReplacer1588 = "Invalid JSON format";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1588);

        throw $r9;

     label20:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label21:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r1 = (tools.s) $r12;

        if $r1 == null goto label23;

        $r2 = $r1.<tools.s: java.lang.String b>;

     label22:
        return $r2;

     label23:
        $r2 = null;

        goto label22;

     label24:
        $r5 = null;

        goto label07;

     label25:
        return $r2;

        catch java.lang.NumberFormatException from label02 to label03 with label19;
        catch java.lang.NumberFormatException from label04 to label05 with label19;
        catch java.lang.NumberFormatException from label06 to label07 with label19;
        catch java.lang.NumberFormatException from label08 to label09 with label19;
        catch java.lang.NumberFormatException from label11 to label12 with label19;
        catch java.lang.NumberFormatException from label13 to label14 with label19;
        catch java.lang.NumberFormatException from label15 to label16 with label19;
        catch java.lang.NumberFormatException from label17 to label18 with label19;
        catch java.lang.Exception from label02 to label03 with label20;
        catch java.lang.Exception from label04 to label05 with label20;
        catch java.lang.Exception from label06 to label07 with label20;
        catch java.lang.Exception from label08 to label09 with label20;
        catch java.lang.Exception from label11 to label12 with label20;
        catch java.lang.Exception from label13 to label18 with label20;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, $r1, r15, varReplacer3092, varReplacer3093, varReplacer3095;
        javax.crypto.spec.DESKeySpec $r2, r14;
        byte[] $r3;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;
        javax.crypto.Cipher $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.security.InvalidKeyException r16;
        java.io.UnsupportedEncodingException r17;
        java.security.spec.InvalidKeySpecException r18;
        java.security.NoSuchAlgorithmException r19;
        javax.crypto.BadPaddingException r20;
        javax.crypto.NoSuchPaddingException r21;
        javax.crypto.IllegalBlockSizeException r22;
        int varReplacer3094, varReplacer3096;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = "5apr1$EdhusnvN$y3.80mU3ZphY.2qS5m38y1";

        r14 = new javax.crypto.spec.DESKeySpec;

        $r2 = r14;

     label01:
        varReplacer3095 = "UTF8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3095);

        specialinvoke r14.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r3);

        varReplacer3092 = "DES";

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3092);

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        varReplacer3096 = 0;

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer3096);

        varReplacer3093 = "DES";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3093);

        varReplacer3094 = 2;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3094, $r5);

        $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

     label02:
        r15 = new java.lang.String;

     label03:
        specialinvoke r15.<java.lang.String: void <init>(byte[])>($r3);

     label04:
        return r15;

     label05:
        $r7 := @caughtexception;

        r16 = (java.security.InvalidKeyException) $r7;

        virtualinvoke r16.<java.security.InvalidKeyException: void printStackTrace()>();

        return $r0;

     label06:
        $r8 := @caughtexception;

        r17 = (java.io.UnsupportedEncodingException) $r8;

        virtualinvoke r17.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return $r0;

     label07:
        $r9 := @caughtexception;

        r18 = (java.security.spec.InvalidKeySpecException) $r9;

        virtualinvoke r18.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        return $r0;

     label08:
        $r10 := @caughtexception;

        r19 = (java.security.NoSuchAlgorithmException) $r10;

        virtualinvoke r19.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return $r0;

     label09:
        $r11 := @caughtexception;

        r20 = (javax.crypto.BadPaddingException) $r11;

        virtualinvoke r20.<javax.crypto.BadPaddingException: void printStackTrace()>();

        return $r0;

     label10:
        $r12 := @caughtexception;

        r21 = (javax.crypto.NoSuchPaddingException) $r12;

        virtualinvoke r21.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        return $r0;

     label11:
        $r13 := @caughtexception;

        r22 = (javax.crypto.IllegalBlockSizeException) $r13;

        virtualinvoke r22.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        return $r0;

        catch java.security.InvalidKeyException from label01 to label02 with label05;
        catch java.security.InvalidKeyException from label03 to label04 with label05;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label06;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label06;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label07;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label07;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label08;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label08;
        catch javax.crypto.BadPaddingException from label01 to label02 with label09;
        catch javax.crypto.BadPaddingException from label03 to label04 with label09;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label10;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label10;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label11;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label11;
    }

    private static java.lang.Boolean b(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, varReplacer1593, varReplacer1594, varReplacer1595, varReplacer1596;
        char $c1;
        java.lang.Boolean $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

     label1:
        varReplacer1596 = 0;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(varReplacer1596);

        if $c1 == 91 goto label3;

        varReplacer1593 = 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(varReplacer1593);

        goto label1;

     label2:
        varReplacer1594 = 0;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer1594);

        return $r1;

     label3:
        varReplacer1595 = 1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer1595);

        return $r1;
    }

    public static void b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <tools.p: void d(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    static java.lang.String c(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <tools.p: java.lang.String f(java.lang.String,java.lang.String)>($r0, $r1);

        return $r0;
    }

    private static boolean c(java.lang.String)
    {
        java.lang.String $r0;
        com.google.a.g $r1;
        com.google.a.b $r2;
        boolean $z0;
        com.google.a.i $r3;
        int varReplacer1597, varReplacer1598;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.google.a.g;

     label1:
        specialinvoke $r1.<com.google.a.g: void <init>()>();

        $r2 = virtualinvoke $r1.<com.google.a.g: com.google.a.b a(java.lang.String)>($r0);

        $z0 = virtualinvoke $r2.<com.google.a.b: boolean e()>();

     label2:
        if $z0 != 0 goto label5;

     label3:
        $z0 = virtualinvoke $r2.<com.google.a.b: boolean d()>();

     label4:
        if $z0 == 0 goto label7;

     label5:
        varReplacer1598 = 1;

        return varReplacer1598;

     label6:
        $r3 := @caughtexception;

     label7:
        varReplacer1597 = 0;

        return varReplacer1597;

        catch com.google.a.i from label1 to label2 with label6;
        catch com.google.a.i from label3 to label4 with label6;
    }

    private static void d(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Thread $r2;
        tools.q $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.Thread;

        $r3 = new tools.q;

        specialinvoke $r3.<tools.q: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    private static java.net.URL e(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer3097, varReplacer3098, varReplacer3099, varReplacer3100, varReplacer3102;
        java.lang.StringBuilder $r2, r4;
        java.lang.Throwable $r3;
        java.net.URL r5;
        java.net.MalformedURLException r6;
        null_type varReplacer3101;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r5 = new java.net.URL;

        r4 = new java.lang.StringBuilder;

        $r2 = r4;

     label1:
        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer3099 = "http://redappz.com/src/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3099);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer3102 = "/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3102);

        varReplacer3100 = "source";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3100);

        varReplacer3097 = "_";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3097);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer3098 = ".txt";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3098);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<java.net.URL: void <init>(java.lang.String)>($r0);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        r6 = (java.net.MalformedURLException) $r3;

        virtualinvoke r6.<java.net.MalformedURLException: void printStackTrace()>();

        varReplacer3101 = null;

        return varReplacer3101;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private static java.lang.String f(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer3079, varReplacer3080, varReplacer3081, varReplacer3082, varReplacer3083, varReplacer3085, varReplacer3087, varReplacer3088, varReplacer3089, varReplacer3090;
        java.net.URL $r2;
        java.net.URLConnection $r3;
        java.net.HttpURLConnection $r4;
        java.lang.StringBuilder $r5;
        byte[] $r6;
        java.io.BufferedReader $r7;
        java.io.InputStreamReader $r8;
        java.io.InputStream $r9;
        java.lang.Exception $r10;
        java.io.PrintStream $r11;
        int varReplacer3084, varReplacer3086;
        null_type varReplacer3091;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label01:
        $r2 = staticinvoke <tools.p: java.net.URL e(java.lang.String,java.lang.String)>($r0, $r1);

        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r4 = (java.net.HttpURLConnection) $r3;

        varReplacer3085 = "GET";

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer3085);

        varReplacer3079 = "Accept";

        varReplacer3080 = "application/json";

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer3079, varReplacer3080);

        varReplacer3081 = "UyVni3oQHgGFyckzG+bG8w==";

        $r0 = staticinvoke <tools.p: java.lang.String a(java.lang.String)>(varReplacer3081);

        varReplacer3082 = "rNis72nSp2I23nBXGPUL+ZeBhhzcQei78kxE94/Gkw0=";

        $r1 = staticinvoke <tools.p: java.lang.String a(java.lang.String)>(varReplacer3082);

     label02:
        $r5 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer3090 = ":";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3090);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3088 = "UTF-8";

        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3088);

        varReplacer3086 = 2;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r6, varReplacer3086);

     label04:
        $r5 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer3083 = "Basic ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3083);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3087 = "Authorization";

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer3087, $r0);

     label06:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

     label07:
        $r9 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

     label08:
        $r5 = new java.lang.StringBuilder;

     label09:
        varReplacer3084 = 1024;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(varReplacer3084);

     label10:
        $r0 = virtualinvoke $r7.<java.io.BufferedReader: java.lang.String readLine()>();

     label11:
        if $r0 == null goto label15;

     label12:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label13:
        goto label10;

     label14:
        $r10 := @caughtexception;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer3089 = "Error:";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3089);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r0);

        varReplacer3091 = null;

        return varReplacer3091;

     label15:
        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        <tools.p: java.lang.String a> = $r0;

     label17:
        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        return $r0;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label14;
        catch java.lang.Exception from label17 to label18 with label14;
    }
}
