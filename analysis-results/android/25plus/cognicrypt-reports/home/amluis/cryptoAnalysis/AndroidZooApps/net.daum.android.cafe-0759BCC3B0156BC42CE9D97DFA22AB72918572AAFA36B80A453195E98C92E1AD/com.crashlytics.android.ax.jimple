final class com.crashlytics.android.ax extends java.lang.Object
{
    final java.security.KeyStore a;
    private final java.util.HashMap b;

    public void <init>(java.io.InputStream, java.lang.String)
    {
        com.crashlytics.android.ax $r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        java.security.KeyStore $r3;
        java.util.HashMap $r4;

        nop;

        $r0 := @this: com.crashlytics.android.ax;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.crashlytics.android.ax: java.security.KeyStore a(java.io.InputStream,java.lang.String)>($r1, $r2);

        $r4 = staticinvoke <com.crashlytics.android.ax: java.util.HashMap a(java.security.KeyStore)>($r3);

        $r0.<com.crashlytics.android.ax: java.util.HashMap b> = $r4;

        $r0.<com.crashlytics.android.ax: java.security.KeyStore a> = $r3;

        return;
    }

    private static java.security.KeyStore a(java.io.InputStream, java.lang.String)
    {
        java.io.InputStream $r0;
        java.lang.String $r1, varReplacer5350;
        java.security.KeyStore $r2;
        java.io.BufferedInputStream $r3;
        char[] $r4;
        java.lang.Throwable $r5, $r6, $r8, $r9, $r10, $r11;
        java.lang.AssertionError $r7;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

     label01:
        varReplacer5350 = "BKS";

        $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5350);

     label02:
        $r3 = new java.io.BufferedInputStream;

     label03:
        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r0);

     label04:
        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r4);

     label05:
        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

     label06:
        return $r2;

     label07:
        $r5 := @caughtexception;

     label08:
        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

        throw $r5;

     label09:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r7;

     label10:
        $r8 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r7;

     label11:
        $r9 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r7;

     label12:
        $r10 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r7;

     label13:
        $r11 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r7;

        catch java.security.KeyStoreException from label01 to label02 with label09;
        catch java.security.KeyStoreException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.cert.CertificateException from label01 to label02 with label11;
        catch java.security.cert.CertificateException from label03 to label04 with label11;
        catch android.content.res.Resources$NotFoundException from label01 to label02 with label12;
        catch android.content.res.Resources$NotFoundException from label03 to label04 with label12;
        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.security.KeyStoreException from label05 to label06 with label09;
        catch java.security.KeyStoreException from label08 to label09 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label10;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
        catch java.security.cert.CertificateException from label05 to label06 with label11;
        catch java.security.cert.CertificateException from label08 to label09 with label11;
        catch android.content.res.Resources$NotFoundException from label05 to label06 with label12;
        catch android.content.res.Resources$NotFoundException from label08 to label09 with label12;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label08 to label09 with label13;
    }

    private static java.util.HashMap a(java.security.KeyStore)
    {
        java.security.KeyStore $r0;
        java.util.HashMap $r1;
        java.util.Enumeration $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.security.cert.Certificate $r5;
        java.security.cert.X509Certificate $r6;
        javax.security.auth.x500.X500Principal $r7;
        java.lang.Throwable $r8;
        java.lang.AssertionError $r9;

        nop;

        $r0 := @parameter0: java.security.KeyStore;

        $r1 = new java.util.HashMap;

     label01:
        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

     label03:
        if $z0 == 0 goto label11;

     label04:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

     label05:
        $r4 = (java.lang.String) $r3;

     label06:
        $r5 = virtualinvoke $r0.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r4);

     label07:
        $r6 = (java.security.cert.X509Certificate) $r5;

        if $r6 == null goto label02;

     label08:
        $r7 = virtualinvoke $r6.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

     label09:
        goto label02;

     label10:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r9;

     label11:
        return $r1;

        catch java.security.KeyStoreException from label01 to label03 with label10;
        catch java.security.KeyStoreException from label04 to label05 with label10;
        catch java.security.KeyStoreException from label06 to label07 with label10;
        catch java.security.KeyStoreException from label08 to label09 with label10;
    }

    public final boolean a(java.security.cert.X509Certificate)
    {
        com.crashlytics.android.ax $r0;
        java.security.cert.X509Certificate $r1, $r5;
        java.util.HashMap $r2;
        javax.security.auth.x500.X500Principal $r3;
        java.lang.Object $r4;
        java.security.PublicKey $r6, $r7;
        boolean $z0;

        $r0 := @this: com.crashlytics.android.ax;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = $r0.<com.crashlytics.android.ax: java.util.HashMap b>;

        $r3 = virtualinvoke $r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.security.cert.X509Certificate) $r4;

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r7 = virtualinvoke $r1.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.security.cert.X509Certificate b(java.security.cert.X509Certificate)
    {
        com.crashlytics.android.ax $r0;
        java.security.cert.X509Certificate $r1, $r5;
        java.util.HashMap $r2;
        javax.security.auth.x500.X500Principal $r3, $r6;
        java.lang.Object $r4;
        boolean $z0;
        java.security.PublicKey $r7;
        java.lang.Throwable $r8;

        $r0 := @this: com.crashlytics.android.ax;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = $r0.<com.crashlytics.android.ax: java.util.HashMap b>;

        $r3 = virtualinvoke $r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.security.cert.X509Certificate) $r4;

        if $r5 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r6 = virtualinvoke $r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z0 = virtualinvoke $r3.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r7 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        virtualinvoke $r1.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>($r7);

     label3:
        return $r5;

     label4:
        $r8 := @caughtexception;

        return null;

        catch java.security.GeneralSecurityException from label2 to label3 with label4;
    }
}
