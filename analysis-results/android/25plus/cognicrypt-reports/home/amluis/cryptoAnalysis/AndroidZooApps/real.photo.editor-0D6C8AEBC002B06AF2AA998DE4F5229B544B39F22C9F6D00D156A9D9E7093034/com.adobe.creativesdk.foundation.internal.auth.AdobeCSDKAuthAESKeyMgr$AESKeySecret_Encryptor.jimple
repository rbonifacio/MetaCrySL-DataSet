class com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor extends java.lang.Object
{
    private static final java.lang.String APP_RSA_KEY_PAIR_SECRET_ALIAS;
    private java.security.PrivateKey _app_privateRSAKey;
    private java.security.PublicKey _app_publicRSAKey;
    private boolean _isRunningAPI_18_Above;
    final com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr this$0;

    public void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr $r1;
        boolean $z0;
        int varReplacer1209;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer1209 = 0;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: boolean _isRunningAPI_18_Above> = varReplacer1209;

        $z0 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: boolean _isRunningAPI_18_Above>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: void initializeRSAKeyPairs()>();

        return;
    }

    private byte[] deCryptUsingPrivateKey(byte[])
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        byte[] $r1;
        java.lang.Exception $r2;
        javax.crypto.Cipher $r3;
        java.security.PrivateKey $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.String $r6, $r7, varReplacer5643;
        java.lang.IllegalArgumentException $r8;
        int varReplacer5642;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

        $r1 := @parameter0: byte[];

        $r3 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: javax.crypto.Cipher getRSACipher()>();

     label1:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: java.security.PrivateKey _app_privateRSAKey>;

        varReplacer5642 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5642, $r4);

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r6 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        $r7 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r6, $r7, $r2);

        $r8 = new java.lang.IllegalArgumentException;

        varReplacer5643 = "Auth Foundation : Auth AESKeyMgr : Failed to decyrpt using private key";

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer5643, $r2);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private byte[] encryptUsingPublicKey(byte[])
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        byte[] $r1;
        java.lang.Exception $r2;
        javax.crypto.Cipher $r3;
        java.security.PublicKey $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.String $r6, $r7, varReplacer5648;
        java.lang.IllegalArgumentException $r8;
        int varReplacer5647;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

        $r1 := @parameter0: byte[];

        $r3 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: javax.crypto.Cipher getRSACipher()>();

     label1:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: java.security.PublicKey _app_publicRSAKey>;

        varReplacer5647 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5647, $r4);

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r6 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        $r7 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r6, $r7, $r2);

        $r8 = new java.lang.IllegalArgumentException;

        varReplacer5648 = "Auth Foundation : Auth AESKeyMgr : Failed to encrypt using public key";

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer5648, $r2);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void generateAppRSAPublicPrivateKeys()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        java.lang.Exception $r1;
        java.util.Calendar $r2;
        java.util.Date $r3, $r4;
        java.security.KeyPairGenerator $r5;
        com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder $r6;
        android.content.Context $r7;
        android.security.KeyPairGeneratorSpec$Builder $r8;
        java.math.BigInteger $r9;
        javax.security.auth.x500.X500Principal $r10;
        java.lang.Object[] $r11;
        android.content.pm.ApplicationInfo $r12;
        java.lang.String $r13, $r16, varReplacer1215, varReplacer1216, varReplacer1217, varReplacer1218, varReplacer1220;
        int $i0, varReplacer1219, varReplacer1221, varReplacer1222;
        android.security.KeyPairGeneratorSpec $r14;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r15;
        java.lang.IllegalArgumentException $r17;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r3 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        varReplacer1221 = 1;

        varReplacer1222 = 25;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(varReplacer1221, varReplacer1222);

        $r4 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

     label01:
        varReplacer1215 = "RSA";

        varReplacer1216 = "AndroidKeyStore";

        $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer1215, varReplacer1216);

        $r6 = staticinvoke <com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder: com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder getSharedApplicationContextHolder()>();

        $r7 = virtualinvoke $r6.<com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder: android.content.Context getApplicationContext()>();

     label02:
        $r8 = new android.security.KeyPairGeneratorSpec$Builder;

     label03:
        specialinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: void <init>(android.content.Context)>($r7);

        varReplacer1217 = "adb_auth_foundation_rsa_keypair_alias";

        $r8 = virtualinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: android.security.KeyPairGeneratorSpec$Builder setAlias(java.lang.String)>(varReplacer1217);

        $r8 = virtualinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: android.security.KeyPairGeneratorSpec$Builder setStartDate(java.util.Date)>($r3);

        $r8 = virtualinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: android.security.KeyPairGeneratorSpec$Builder setEndDate(java.util.Date)>($r4);

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r8 = virtualinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: android.security.KeyPairGeneratorSpec$Builder setSerialNumber(java.math.BigInteger)>($r9);

     label04:
        $r10 = new javax.security.auth.x500.X500Principal;

     label05:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "adb_auth_foundation_rsa_keypair_alias";

        $r12 = virtualinvoke $r7.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r11[1] = $r13;

        varReplacer1218 = "CN=%s, OU=%s";

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer1218, $r11);

        specialinvoke $r10.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r13);

        $r8 = virtualinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: android.security.KeyPairGeneratorSpec$Builder setSubject(javax.security.auth.x500.X500Principal)>($r10);

     label06:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label08;

     label07:
        varReplacer1219 = 2048;

        virtualinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: android.security.KeyPairGeneratorSpec$Builder setKeySize(int)>(varReplacer1219);

     label08:
        $r14 = virtualinvoke $r8.<android.security.KeyPairGeneratorSpec$Builder: android.security.KeyPairGeneratorSpec build()>();

        virtualinvoke $r5.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r14);

        virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

     label09:
        return;

     label10:
        $r1 := @caughtexception;

        $r15 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r13 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        $r16 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r15, $r13, $r16, $r1);

        $r17 = new java.lang.IllegalArgumentException;

        varReplacer1220 = "Failed to generate RSA Public Private Key pair";

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1220);

        throw $r17;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label07 to label09 with label10;
    }

    private javax.crypto.Cipher getRSACipher()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        java.lang.Exception $r1;
        javax.crypto.Cipher $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String varReplacer5644, varReplacer5645, varReplacer5646;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

     label1:
        varReplacer5645 = "RSA/ECB/PKCS1Padding";

        varReplacer5646 = "AndroidOpenSSL";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer5645, varReplacer5646);

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        varReplacer5644 = "Auth Foundation : Auth AESKeyMgr : Failed to create Cipher";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer5644, $r1);

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void initializePublicPrivateKeys()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        java.security.KeyStore $r1;
        java.security.KeyStore$Entry $r2;
        java.security.KeyStore$PrivateKeyEntry $r3;
        java.security.PrivateKey $r4;
        java.security.cert.Certificate $r5;
        java.security.PublicKey $r6;
        java.lang.Throwable $r7, $r11, $r12, $r13, $r14;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r8;
        java.lang.String $r9, $r10, varReplacer1212, varReplacer1214;
        java.security.KeyStoreException r15;
        java.security.cert.CertificateException r16;
        java.security.NoSuchAlgorithmException r17;
        java.security.UnrecoverableEntryException r18;
        java.io.IOException r19;
        null_type varReplacer1211, varReplacer1213;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

     label01:
        varReplacer1214 = "AndroidKeyStore";

        $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1214);

        varReplacer1211 = null;

        virtualinvoke $r1.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer1211);

        varReplacer1212 = "adb_auth_foundation_rsa_keypair_alias";

        varReplacer1213 = null;

        $r2 = virtualinvoke $r1.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer1212, varReplacer1213);

     label02:
        $r3 = (java.security.KeyStore$PrivateKeyEntry) $r2;

     label03:
        $r4 = virtualinvoke $r3.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>();

     label04:
        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: java.security.PrivateKey _app_privateRSAKey> = $r4;

     label05:
        $r5 = virtualinvoke $r3.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate getCertificate()>();

        $r6 = virtualinvoke $r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

     label06:
        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: java.security.PublicKey _app_publicRSAKey> = $r6;

        return;

     label07:
        $r7 := @caughtexception;

        $r8 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r9 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        r15 = (java.security.KeyStoreException) $r7;

        $r10 = virtualinvoke r15.<java.security.KeyStoreException: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r9, $r10, $r7);

        return;

     label08:
        $r11 := @caughtexception;

        $r8 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r9 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        r16 = (java.security.cert.CertificateException) $r11;

        $r10 = virtualinvoke r16.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r9, $r10, $r11);

        return;

     label09:
        $r12 := @caughtexception;

        $r8 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r9 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        r17 = (java.security.NoSuchAlgorithmException) $r12;

        $r10 = virtualinvoke r17.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r9, $r10, $r12);

        return;

     label10:
        $r13 := @caughtexception;

        $r8 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r9 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        r18 = (java.security.UnrecoverableEntryException) $r13;

        $r10 = virtualinvoke r18.<java.security.UnrecoverableEntryException: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r9, $r10, $r13);

        return;

     label11:
        $r14 := @caughtexception;

        $r8 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r9 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$000()>();

        r19 = (java.io.IOException) $r14;

        $r10 = virtualinvoke r19.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r9, $r10, $r14);

        return;

        catch java.security.KeyStoreException from label01 to label02 with label07;
        catch java.security.KeyStoreException from label03 to label04 with label07;
        catch java.security.KeyStoreException from label05 to label06 with label07;
        catch java.security.cert.CertificateException from label01 to label02 with label08;
        catch java.security.cert.CertificateException from label03 to label04 with label08;
        catch java.security.cert.CertificateException from label05 to label06 with label08;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
        catch java.security.UnrecoverableEntryException from label01 to label02 with label10;
        catch java.security.UnrecoverableEntryException from label03 to label04 with label10;
        catch java.security.UnrecoverableEntryException from label05 to label06 with label10;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
    }

    private void initializeRSAKeyPairs()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        java.lang.String $r1, varReplacer1210;
        java.security.PrivateKey $r2;
        java.security.PublicKey $r3;
        boolean $z0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr $r4;
        java.lang.IllegalArgumentException $r5;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: void initializePublicPrivateKeys()>();

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: java.security.PrivateKey _app_privateRSAKey>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: java.security.PublicKey _app_publicRSAKey>;

        if $r3 != null goto label3;

     label1:
        $z0 = 1;

     label2:
        if $z0 == 0 goto label5;

        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr this$0>;

        $r1 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: java.lang.String access$100(com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr)>($r4);

        if $r1 == null goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        varReplacer1210 = "Auth Foundation :AESKeyMgr Failed to initialize Private keys - but already have a valid aes key stored !!";

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1210);

        throw $r5;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: void generateAppRSAPublicPrivateKeys()>();

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: void initializePublicPrivateKeys()>();

     label5:
        return;
    }

    public byte[] deCryptData(byte[])
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        boolean $z0;
        byte[] $r1;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

        $r1 := @parameter0: byte[];

        $z0 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: boolean _isRunningAPI_18_Above>;

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: byte[] deCryptUsingPrivateKey(byte[])>($r1);

        return $r1;
    }

    public byte[] encyrptData(byte[])
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor $r0;
        boolean $z0;
        byte[] $r1;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor;

        $r1 := @parameter0: byte[];

        $z0 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: boolean _isRunningAPI_18_Above>;

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr$AESKeySecret_Encryptor: byte[] encryptUsingPublicKey(byte[])>($r1);

        return $r1;
    }
}
