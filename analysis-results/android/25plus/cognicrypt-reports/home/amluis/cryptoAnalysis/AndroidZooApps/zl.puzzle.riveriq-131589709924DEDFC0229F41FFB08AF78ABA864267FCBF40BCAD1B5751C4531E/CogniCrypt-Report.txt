Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1067)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: 13dbeb705861b0dbfa92f3e39e09ce798ceb6aab475a48c7f9195a5407b2ae5b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1069, varReplacer1070)
		Method: <com.sdkbox.plugin.NoOne: byte[] getRawKey(byte[])>
		SHA-256: 4ee14d0c88f25744c15255ab7cd8e65a7ccc6c51dd82f444fbf12a33579ca75a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.sdkbox.plugin.NoOne: byte[] getRawKey(byte[])>
		SHA-256: c64343a3d3281b07f736d4084bab6a136191e9aa1c5b26ebd6d7234bebefca61
		Secure: false
	Object:
		Variable: varReplacer1065
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1065)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: ef4adb08a4c06768c8d291b38c88df48bfc1699b409535e23ac41bdc97ee58f5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: fde6df88f7ba87919954e76cdbba3daa48cae17f38ddf0d5a7eaf93ce84f86d5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1071)
		Method: <com.sdkbox.plugin.NoOne: byte[] getRawKey(byte[])>
		SHA-256: 88f414b63fc9ea420c9ab88d367d7e9e49006a56adfec665ba7cb5dd50d8cd58
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1065)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: 116b2eb56033994a377e259fb586ccf225071f208d1852b177eb2aba7a7864c1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: 30b33fd86b0c6401f0b47d87bc31866d28cf4bf59650064c4c74b86b18f06a0a
		Secure: false

Findings in Java Class: com.sdkbox.plugin.NoOne

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1065)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1066, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #13dbeb705861b0dbfa92f3e39e09ce798ceb6aab475a48c7f9195a5407b2ae5b)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1067)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #13dbeb705861b0dbfa92f3e39e09ce798ceb6aab475a48c7f9195a5407b2ae5b)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1067)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1072, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 3
=====================================================================