Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/Orion.Soft-0D14BAC77FEAD36F2BBFB72E375442F618DCB1BD7150A81B7ABFE41DF4532E22.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.c.ck: java.lang.String a(byte[],java.lang.String)>
		SHA-256: ea9a2ec3b255d296f085c4d7803128e78125ab279c5c19c65635390fa172251b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5931)
		Method: <Orion.Soft.d: byte[] a(byte[],byte[])>
		SHA-256: e5993f78b4bab56faa70d09e0daebc61cb629edfa768815a893f4722b0c149ae
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6625)
		Method: <com.google.android.gms.c.ee: byte[] a(byte[],java.lang.String)>
		SHA-256: 271c663c01fa2935bc77723a2a359f95e13d31b7d4a5d33e6fbb617d3beb2240
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer499)
		Method: <Orion.Soft.d: byte[] b(byte[],byte[])>
		SHA-256: 16a319ab603af0a2aedca85efd9504e7ec4d1c3c2448656f77bdbe6d6764a43a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <Orion.Soft.d: byte[] b(byte[],byte[])>
		SHA-256: b475984a604a82e84f7635ccfd804e52d8c6d0e3eff97da85d7456095f14b959
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1876)
		Method: <com.google.android.gms.c.bu: java.lang.String a(java.lang.String)>
		SHA-256: 2265a808c45ce9df3fddccbf6278a6295b305aa7cb47970d48c734bb061dd9dc
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6627)
		Method: <com.google.android.gms.c.ee: byte[] a(byte[],java.lang.String)>
		SHA-256: fa06b424820aa316b8786853287ea105c7ca6b35dd7d2d63d2315ff6f6148a93
		Secure: false
	Object:
		Variable: varReplacer5932
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5932)
		Method: <Orion.Soft.d: byte[] a(byte[],byte[])>
		SHA-256: 5693ce9a6eaeff3157e7674ad1be3fba1637b81ac3f69ea4a9065fd91db1a149
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.c.ee: byte[] a(byte[],java.lang.String)>
		SHA-256: 3bd321d58fe464a99535631ee39ed490dd2c4c91b36baffa24b8709a3115b1b9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.c.bu: java.lang.String a(java.lang.String)>
		SHA-256: 6c99bc16e1aaa0ba5d9068df4b66ebd0ceaf84d605792d03a72cc646d68f4515
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <Orion.Soft.d: byte[] a(byte[],byte[])>
		SHA-256: 1e8fb5b1c451b5e9ee7444b4a7abd2d4a4603d1b55230464350d4d34d5d80a37
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <Orion.Soft.d: byte[] a(byte[],byte[])>
		SHA-256: 2f4a5eb22c8f0b47bf3431ec6e8c7d2a0c6e00d394bc4b452fdede576da6ec55
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer498)
		Method: <Orion.Soft.d: byte[] b(byte[],byte[])>
		SHA-256: c403e74f813eb9c0702ac6477a909681e2e040862327e776f87aa1ff67677b90
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer502)
		Method: <Orion.Soft.d: byte[] b(byte[])>
		SHA-256: 51158e44cd54651d8b0b2ace1c4906b892e5c79505a2fcec2921a500ea8742de
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.android.gms.c.ck: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 2ccc3fce5fb6a43ca288a3594afe8724093d3edcf2680d022db7a91e8aaac21d
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.c.bm: void <clinit>()>
		SHA-256: 94c760b734a8d44082f135efe70283df1b948fd4414aeeaed1a3e5601489ba9c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7265)
		Method: <com.google.android.gms.c.bm: void <clinit>()>
		SHA-256: b0e52e02827d6f19d441aa13786706f6a3a4676cc1cfca27d91c88dc87d731e2
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7407)
		Method: <com.google.android.gms.c.ck: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 5d4c6158cd64bc6cd7dfbda2649e249db3d8922fea36f0739739dbf420036f84
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <Orion.Soft.d: byte[] b(byte[],byte[])>
		SHA-256: 46dbc6dec536077bbc82981b141f1e34478bea1667af51d91f1670649ba629aa
		Secure: false
	Object:
		Variable: varReplacer501
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer501)
		Method: <Orion.Soft.d: byte[] b(byte[])>
		SHA-256: a735b13f68800e6d307f68be1f220f95db457198e64681ec525a3cf3821802b3
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.c.ee: byte[] a(byte[],java.lang.String)>
		SHA-256: 5157d00b8b9014db58ef8c86aed244a19c3f4d39106b071d8768163e943fe026
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.c.ck: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 9a3b6473c268730a0328060782832847859d5f2b93866b14fb7ce81e8094e106
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.c.ee: byte[] a(byte[],java.lang.String)>
		SHA-256: dc25ffe5c14a5de18d0923b0649b0ae62a054333bfb04fac62211402a9ee0380
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5932)
		Method: <Orion.Soft.d: byte[] a(byte[],byte[])>
		SHA-256: 47a46d0a0d5ddbe48372d6619e944521599a662670a07fb6c468e9c9b48d827a
		Secure: false
	Object:
		Variable: varReplacer6625
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6625)
		Method: <com.google.android.gms.c.ee: byte[] a(byte[],java.lang.String)>
		SHA-256: 547ef6775d831a9396002f0a884ffb18a338b7b2d002b9f0e89ed205234ca376
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <Orion.Soft.d: byte[] b(byte[])>
		SHA-256: 1e2e344967af05fdf9eb61052202f9483a0d8e1c863f33b4181af3204dbb927
		Secure: true
	Object:
		Variable: varReplacer499
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer499)
		Method: <Orion.Soft.d: byte[] b(byte[],byte[])>
		SHA-256: aff41459255c5a43938499ed64fb0401857e275bd03ff8d1f5ab7fab144d379b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer501)
		Method: <Orion.Soft.d: byte[] b(byte[])>
		SHA-256: 10a3626b5097a2e10e49dd0e5009cc1e2ddfa628a39f298daa16027862b644ed
		Secure: false

Findings in Java Class: Orion.Soft.d

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer497, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer499)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c403e74f813eb9c0702ac6477a909681e2e040862327e776f87aa1ff67677b90)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer498)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c403e74f813eb9c0702ac6477a909681e2e040862327e776f87aa1ff67677b90)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer498)


	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e5993f78b4bab56faa70d09e0daebc61cb629edfa768815a893f4722b0c149ae)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5931)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e5993f78b4bab56faa70d09e0daebc61cb629edfa768815a893f4722b0c149ae)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5931)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5933, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5932)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer501)


Findings in Java Class: com.google.android.gms.c.ee

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6625)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6626, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 28

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
	ConstraintError: 4
=====================================================================
