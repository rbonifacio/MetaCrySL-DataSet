Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.abouttimetech.android.activity-10FE74773006A62431D5308C7FB0157931FFED5A18043CBF525898B42C2C89EA.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.ImgJBIG2: void <init>(int,int,byte[],byte[])>
		SHA-256: 718cbd683c4ea0fe494b12d04feb110d4c78c062ed16a22c3e96a1eeb82651e3
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18865)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: 20e9f159e1cee2c5f208d87d3e8d1bc986ec8f22c534617963cef568487acffb
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.bugsense.trace.UidManager: java.lang.String generateUid()>
		SHA-256: 3c7a82ef2e09a346955029ad37ae67f8820cefec6b247bb2a99c44fac2e368e4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15946)
		Method: <com.itextpdf.text.ImgJBIG2: void <init>(int,int,byte[],byte[])>
		SHA-256: 83e5fd5ba5bb65e0b7cc3d6017c4c07618357d9f84b5472aca991f7a7dbd3b3f
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: f8f5b7ffd30eccddd55695f075f7d73f07ab36f2ca4eaf79e2cbb544006f9ba9
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19602)
		Method: <com.bugsense.trace.UidManager: java.lang.String generateUid()>
		SHA-256: 7535eea7ee5ca28feb97e4b1a645f36b8c0188d7b07acb71185e4aafdeee79c2
		Secure: true

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 6
No violation of any of the rules found.=====================================================================
