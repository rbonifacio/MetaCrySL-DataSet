Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.apspdcl.consumerapp-12F8594D8A951BEC8A05F27562975F4D7F6B78AC163A023DF05644F498654E75.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1691)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: add7dd44bd177dc0d5df0932c140be188a7fb2d2f52a7fa02fd064366cb37b4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1874)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 7232b51d969dff096d4c064c31dbd6d38fc26698676ea135d4ccf4577a02e367
		Secure: false
	Object:
		Variable: varReplacer1691
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1691)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: c5dc1b0e54eed46bd0d985c10d770c044e06e78f61eab4fb2dafa0130d7e925a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1505)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 1d1d73a6742f6845b100b90ae743e0007ef99fbe67deb1e3a3147cdff3ff1963
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer1524, varReplacer1525)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: fc15abae2063484b8eb93e48e52f8dd31fb48b83a6163363ceac55b1dae55e4a
		Secure: false
	Object:
		Variable: varReplacer1525
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer1524, varReplacer1525)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 2c45aefd36b124731c3628392b4a4866f0214f623537bbad4d7c1d98862b6c84
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 7a7c42c5e000581cdcf0400ffe5613a28b16b97ba91f77c72eee5a0015ba6e39
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: e021cc5cbe4f64a0cde5110aa93bf8fa8b477bafdbe440998525eb4fddd94604
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer1526)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: a1b7eb07dfe26d7ee6ad2972d7bf8faa43ef5c4cc623b621d81d1e44cd404f7e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1503, varReplacer1504)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 91d909f19799e27e4268ff2473fb794dfdec064d80e3702dd3bf684d69b811d7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1694, varReplacer1695)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: 2b94f26c72af9ac3bebae03cce5956a02d33495bf6cbf6e7b95f3bf280185004
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: f39f96f1dd7dfcd6a5c557878bc207e586aa9a8301d41d84a7a70385b53c05f3
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 163d721d126490691c0644fa18262a76d7366188ac3646ed1f9c1c114be521f6
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: 3c858def843d59aedd854bb43b9e0486729f6bedc5064821245629f0cb9889ce
		Secure: true
	Object:
		Variable: varReplacer1505
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1505)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 879ebe27be73d5192d6d935b0ee419777884d94da4ae4855c3891f1e757ba0dc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1516)
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: b2a273ba042ac91480787a5e615e899d3bb688288d82be5c67a4f5be0beba284
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: aafcb1a4afdc06ae6b2432cdd529750e9f44a4bce64ba479bfd321b896355bda
		Secure: true

Findings in Java Class: com.billdesk.utils.h

	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1505)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1501, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #91d909f19799e27e4268ff2473fb794dfdec064d80e3702dd3bf684d69b811d7)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1503, varReplacer1504)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #91d909f19799e27e4268ff2473fb794dfdec064d80e3702dd3bf684d69b811d7)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1503, varReplacer1504)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer1524, varReplacer1525)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fc15abae2063484b8eb93e48e52f8dd31fb48b83a6163363ceac55b1dae55e4a)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fc15abae2063484b8eb93e48e52f8dd31fb48b83a6163363ceac55b1dae55e4a)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer1524, varReplacer1525)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fc15abae2063484b8eb93e48e52f8dd31fb48b83a6163363ceac55b1dae55e4a)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer1524, varReplacer1525)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2b94f26c72af9ac3bebae03cce5956a02d33495bf6cbf6e7b95f3bf280185004)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1694, varReplacer1695)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1697, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2b94f26c72af9ac3bebae03cce5956a02d33495bf6cbf6e7b95f3bf280185004)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1694, varReplacer1695)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1691)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1872, r5, varReplacer1872)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1872, r5, varReplacer1872)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	NeverTypeOfError: 1
	ConstraintError: 5
	RequiredPredicateError: 8
=====================================================================
