Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.ashampoo.droid.optimizer-0CDD8722E8B7A87485CB486000E2A780288062D4A660459F762C9F3916CA9337.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: e14834b1f4e671e9cbd4e04cbd567ef494e2f9d54df04ce760ca2f46625ea303
		Secure: false
	Object:
		Variable: varReplacer575
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer575)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: 81414ca85e75319ecffd51aef725a740063f3709e78d31a4093d2cae848b0102
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer574)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: 3e5eb6ad5c99cbeafcf9aeed8d13fdd9a42cf5a26009f3ba3f45ba1fe611f3eb
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: 6f7c162e6b02620c220b1ebdbe970a6db4bb18bdeb768af86f3dda38c2688825
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer523)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: 731e9dd16a055c7b3bb1bae9763c3005d114289fc1729cbf685a58d362dadbf4
		Secure: false
	Object:
		Variable: varReplacer523
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer523)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: 53606d02d1dbcba150686a750c059f5d119c5ccfdb4ab19b7d268aa99cdfc146
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer521)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: e106a4a073af3b31abfe166615e8ff2c71ff195c220096e796af8e14b3d4070d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: ce740544214b0c47fab5044a31b2d476344461212d32e00984374e4c454060b8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer575)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: 5432ec8c168a787d8b8e4a8903fd02fa0a750b78652a4c6edb379219e0505de9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: c123b883cfc8983eed4dd76fef17f11fa17ffd7424a6a145e33f648a56b6a1f8
		Secure: false

Findings in Java Class: com.ashampoo.droid.optimizer.utils.Cryptic

	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer520, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer523)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer520, $r3, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e106a4a073af3b31abfe166615e8ff2c71ff195c220096e796af8e14b3d4070d)
			First parameter (with value "DES/CBC/PKCS7Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer521)


	 in Method: java.lang.String decrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3e5eb6ad5c99cbeafcf9aeed8d13fdd9a42cf5a26009f3ba3f45ba1fe611f3eb)
			First parameter (with value "DES/CBC/PKCS7Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer574)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer573, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer575)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
	ConstraintError: 2
=====================================================================
