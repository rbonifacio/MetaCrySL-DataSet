Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.broadsoft.ucone.android-07F9C669AB85FDA74EBD9068447B83141A7D4CAF3685C4DF09022B8F552FB23B.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2446)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: a5f3ea898cbd3b9ba42977e638719b990612ce82423fcf5c9db3650ffc78d8e8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2410)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: e207d0902f3152f5bf4fd85e4d8c1ee5d6a35f3ae01a049f1f291f2a2e55fa4a
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 14ae6927928ab37a5a5963ed3fe6b7b1fd57834d893578aaf9d81441f3b3f8e9
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer2427)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 8696af96488ec878dceb1d8f71db48ee83e93215dba49ba14e5941a026677020
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: 6f09f4a70112028e7919aec1ff0281157533d598dc94ebc202176cac908afc75
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: d44de015c0936c9d1fdfdd4e9dbd342f92bed011c7a26624fd806a1b4ed1df77
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r10)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)>
		SHA-256: 7d49e7f8a172ebd749888a1a4d4a6bb9ef11a577623e5d09e0dde9c05786bb36
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2394)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 52f36c071cbe2b8b2635fed108c76fd520f0a8dc6e0509acb592aca13fdd9c15
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: fedc6360aa8b1a08e982fd2e889072f2836f4ba1a74c342237603003dba27626
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: a5dfacf5fbc744197fb5bd7a789b65d2d801234cd696d7912b619c415a6758b2
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3755)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 13fd899c5b291e6aeca8530faf1f335d2e6165c1fb700d9d58a115a8ad2f3ccc
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer7274)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 8d1699fc3351ad35de490e8867f49140f53ac8a393c854ca23d95c340e29f994
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5969)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)>
		SHA-256: f753a6673eb916b00efb99b6745aac881ece543bf3e9cdaeeab8dd032cf6b44a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8be624ac93d5f3c7d6c8c24d00c5423cc183c8f6c9ac2cc4d0e89ac93142d824
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: af9233f686a066a755ade8f23647d33647dc22c82d743a73c43b1294476d21bc
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: 3e15c1bfd3601c8cdeba9ee67111e58b43122ece40c8b2416f86295231a37146
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2406)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: e3e62a729ccec5be055226dfa36b2c29e39ded602504b1dd9916156e5b0ab8f3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.xmpp.android.database.ChatDbAdapter: java.lang.String createAndSavePassword()>
		SHA-256: bcfaf5c44fd9a888857663a6c2adf53080af4cf1569a34884b32b2ebc4feaf6e
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.SecretKeyFactory
		Statement: $r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2423)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 2cadfd18367a4c951f1b02ab56e9e37c6a03447dae33318fc0538794a5f2ed3c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3754)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 2fd46bd310ff232b280fe3e91629994738abda52cf5c095f908458affa6c186d
		Secure: false
	Object:
		Variable: varReplacer3754
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3754)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e74eed1a7ee3f3adb516374d5d8542a5f0497b6c20243ab82143e45ff4b05c0b
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2393)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 9be2439e25f697ea24328706d1912effe512f8e4f792565d2bd9015962f2e4e8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 824ba22683660c59575f402494a9b5aa5f91d72d9fe95dd6abdf94f6948ceab0
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 954231d089fea2084e9bb2c9f137806e2fab130323a05a53cd60512611d9a38e
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: ab3925dc9527d47d02367b8fad778b168cbe4814fd43010bb9d6573bd5205c91
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: b0ca51b0a92b88348fe08e17a9f827eba359c5358c6a60ce465718da926f1a95
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2450)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: f4b7fcb2823892c91aa262d8055732d303def90878c0824e6de5373a5c0b9d5c
		Secure: true
	Object:
		Variable: varReplacer2425
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer2424, varReplacer2425)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 9136ee34b47fb8bed3214ba5a8d3e4232f93a38e033bd47f2bcfe9baf6b0640a
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 881f32e58721878700841a3cc56af8ca5dbdadf35259f6b65f19a5df722c29e4
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: b8d0f92b40d7acf197133bd0e9f1f9654be4a8e5f2c47e0c0fa59ebca9053c85
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: d42b59b2002448288977196c3e1488faf64960bf5f56942a8275adeba1b3346d
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer2424, varReplacer2425)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: bc5a30a0bf1a9e656a0cfd22cd6f4d7e8c29fff70f13afe4f05786cdb987dc8d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4729)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 9b311675c4c419a41afa0a7e13de7a65c6141fab06d42963d295fcb34ca373d1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 63d507aaa1e0e967461ed1b6e09e4081da1b22a07c94628e676040af9093cbe0
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: a5dfacf5fbc744197fb5bd7a789b65d2d801234cd696d7912b619c415a6758b2
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5386)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)>
		SHA-256: ed5e65cb6074c71e7e64ab5c9e207f142f05d25ef125b655ae410cd42c8338ce
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: $r11 = virtualinvoke $r10.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)>
		SHA-256: 7a054836665fd20834bd98373ace3cc88132431dc2d6a6d6eccc200797af4985
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPairGenerator
		Statement: $r10 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2458, varReplacer2459)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)>
		SHA-256: fd6af7e7871dfade5b41f1dd8b5298b6eaed114ce9e761c260318f2db4b4bffe
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2400)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 799ecc298d1c53e6a0d42509e80c7f1a09acd9c22a5a25d84613bec88ffb983d
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r9)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: be5a7fd13e20b844eb558609a583ef5f8105d50743ebe32cfc6119bb18928986
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r3.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)>
		SHA-256: 1787e3c4aad6b4501f536b9d39e4d1fc63cedfb1d4a005ba13c963528b9d4669
		Secure: false
	Object:
		Variable: varReplacer2427
		Type: java.lang.String
		Statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer2427)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 32759cb66587b98d0e9474660b10f5a92b93adae304e0c7c572b611f4d9549e9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7212)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 58fc4e2777f48119e8fdd97ea8e1be7f080f864908537d8f1df0aba2d0d489e6
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer2392)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 8945d056cd9a213064360121c63f7cad38b513bd56aaa57596e165688beb463d
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.SecretKey
		Statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: adfd25914b57e6c5186a6c5b5f999fa351da76c6f4982d0bd8d1afb7c2b2366
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: 3e15c1bfd3601c8cdeba9ee67111e58b43122ece40c8b2416f86295231a37146
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 888f004bf913285256e45e2b1573cc1058f35316800cc38f5ffed7511e5fb70
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer7521)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.PublicKey getRsaPublicKey(android.content.Context,java.lang.String)>
		SHA-256: b58aa711c0cc796c6f59c4d33eba9d1bdbc6d3aaff42ffc3f5fd421fad621f1f
		Secure: true

Findings in Java Class: com.broadsoft.android.xsilibrary.util.CryptoUtils

	 in Method: java.lang.String decrypt(java.lang.String,android.content.Context)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9be2439e25f697ea24328706d1912effe512f8e4f792565d2bd9015962f2e4e8)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2393)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #8945d056cd9a213064360121c63f7cad38b513bd56aaa57596e165688beb463d)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer2392)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer2392)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2389, $r7, $r9)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r6)


	 in Method: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2401, $r6, $r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #799ecc298d1c53e6a0d42509e80c7f1a09acd9c22a5a25d84613bec88ffb983d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r8 = staticinvoke <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>($r0, $r2, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)


	 in Method: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2411, $r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #e207d0902f3152f5bf4fd85e4d8c1ee5d6a35f3ae01a049f1f291f2a2e55fa4a)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer2409)


	 in Method: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer2427)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bc5a30a0bf1a9e656a0cfd22cd6f4d7e8c29fff70f13afe4f05786cdb987dc8d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer2424, varReplacer2425)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bc5a30a0bf1a9e656a0cfd22cd6f4d7e8c29fff70f13afe4f05786cdb987dc8d)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer2424, varReplacer2425)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer2424, varReplacer2425)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bc5a30a0bf1a9e656a0cfd22cd6f4d7e8c29fff70f13afe4f05786cdb987dc8d)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


	 in Method: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #f4b7fcb2823892c91aa262d8055732d303def90878c0824e6de5373a5c0b9d5c)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r2, varReplacer2449)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2451, $r6)


	 in Method: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)
		TypestateError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7d49e7f8a172ebd749888a1a4d4a6bb9ef11a577623e5d09e0dde9c05786bb36)
			Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read
			at statement: virtualinvoke $r2.<javax.crypto.CipherInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ed5e65cb6074c71e7e64ab5c9e207f142f05d25ef125b655ae410cd42c8338ce)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r12 = virtualinvoke $r13.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>($r10)


	 in Method: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f753a6673eb916b00efb99b6745aac881ece543bf3e9cdaeeab8dd032cf6b44a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r3.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #1787e3c4aad6b4501f536b9d39e4d1fc63cedfb1d4a005ba13c963528b9d4669)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r5.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r3)


	 in Method: java.security.PublicKey getRsaPublicKey(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #b58aa711c0cc796c6f59c4d33eba9d1bdbc6d3aaff42ffc3f5fd421fad621f1f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer7524)


	 in Method: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4728, $r7, $r11)


	 in Method: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3756, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3754)


	 in Method: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r9)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #58fc4e2777f48119e8fdd97ea8e1be7f080f864908537d8f1df0aba2d0d489e6)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7212)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 54

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 8
	RequiredPredicateError: 16
	ForbiddenMethodError: 1
	ConstraintError: 5
	NeverTypeOfError: 1
	TypestateError: 1
=====================================================================
