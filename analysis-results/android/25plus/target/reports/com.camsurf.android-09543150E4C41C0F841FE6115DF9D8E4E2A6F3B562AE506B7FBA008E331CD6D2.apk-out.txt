Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.camsurf.android-09543150E4C41C0F841FE6115DF9D8E4E2A6F3B562AE506B7FBA008E331CD6D2.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.camsurf.android.utils.RC4: java.lang.String decryptData(java.lang.String,java.lang.String)>
		SHA-256: 68e58c31a56b8c156245ff13b6976e87a6a8a5de53fcddeb7de860c46fdb84e7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2643)
		Method: <com.example.android.trivialdrivesample.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 46c42885aaff824bd12b7c7150cc7365f16021a950371bf87cba4ee0a5e9e7ee
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r6 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.camsurf.android.utils.RC4: java.lang.String decryptData(java.lang.String,java.lang.String)>
		SHA-256: f4ce9f65b03852eb7f7950b82e75eccffe4b8f026d3d17a93b490fdd66661879
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.camsurf.android.utils.RC4: java.lang.String encryptData(java.lang.String,java.lang.String)>
		SHA-256: 3cd8c0c3f88841275bb3e73037ed3714570a9c56fd7d6c683acde078a05975d6
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.neovisionaries.ws.client.Misc: void <clinit>()>
		SHA-256: cbf1c51aff3d7501a2f983434f0792421d5eaf933d45bcfb5bfb11bb30cc6712
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer441)
		Method: <com.camsurf.android.utils.RC4: java.lang.String decryptData(java.lang.String,java.lang.String)>
		SHA-256: 7decc7ec477248fdc27ca0867fdee75f046ecef704d9031a546e08eef5130076
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.camsurf.android.utils.RC4: java.lang.String encryptData(java.lang.String,java.lang.String)>
		SHA-256: 53a220e68f6d7fae8c0b60cc524d11f861701ef46e1c63e2f4f01da87537376d
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.camsurf.android.utils.RC4: java.lang.String decryptData(java.lang.String,java.lang.String)>
		SHA-256: e86863635b84e0ef21d4fcdf59574357138044b1f4f9c173ca44f49507b86f5
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r10 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.camsurf.android.utils.RC4: java.lang.String encryptData(java.lang.String,java.lang.String)>
		SHA-256: 2991c085f76e67aff22d70e66855ccd0adbcac9ce13a41382f248ef1eb1c4ffc
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1185)
		Method: <com.camsurf.android.utils.RC4: java.lang.String encryptData(java.lang.String,java.lang.String)>
		SHA-256: ae40802d3cd8a7b824720dfef90658cf66a3797332a75aa7edcbe441998f95d2
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3378)
		Method: <com.neovisionaries.ws.client.HandshakeReader: void validateAccept(com.neovisionaries.ws.client.StatusLine,java.util.Map,java.lang.String)>
		SHA-256: 9dfd508d5c7f088d4ab1129e7e1f09053c44b110f740aa8317d236aa7c8c1d7d
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.example.android.trivialdrivesample.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r12)
		Method: <com.neovisionaries.ws.client.HandshakeReader: void validateAccept(com.neovisionaries.ws.client.StatusLine,java.util.Map,java.lang.String)>
		SHA-256: a9b462cfd118d50a36a63dfe8ed0735d88da7dd600d5ebf1cd29ac1f01b1be72
		Secure: true

Findings in Java Class: com.example.android.trivialdrivesample.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
=====================================================================
