Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.dip.baitoru-07A5608320077AF38778E4905F312EE3BEB35B3DE3DBB33C78656F7F4EAF2A22.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
20:20:31.796 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <com.dip.baitoru.domain.ModelLocator: com.dip.baitoru.domain.models.JobModel getJobModel()> for class com.dip.baitoru.BaitoruApplication
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r19
		Type: java.security.SecureRandom
		Statement: specialinvoke r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.adobe.mobile.StaticMethods: java.lang.String H()>
		SHA-256: 2c28e8112beb89c3be9c051483566210fec76d1a6b4980c3c3aa023e009fee47
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String a(java.lang.String)>
		SHA-256: de6a6136d571eeb3e4b96666fc33dad1abc860f854dac80853108c7e226ce368
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: a79e94387df141fe9dcb34d2ae3fc05c5097b22bbdc3a1b0291ebb4f6436ceb4
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6626)
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: 98b138eef718a95b748d3f464d2b0ee6f0c039c22625fa30c1446563dba47a53
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.dip.baitoru.utils.BlowfishUtils: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ab20c8a54dcbac8e8387a2c1e72896698f5f3c84d8b216ece9a2298efe2dd5a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5166)
		Method: <com.dip.baitoru.utils.BlowfishUtils: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d3384bced4a6ae19d90950c7a2adf587747b5ef38b7f77761542e6d993cecef3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3146)
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String a(java.lang.String)>
		SHA-256: 1c03bd5da504ebd1ef9ee07edb2554c2591a9a10a7fd9464bfa1d3e9b6b04a2c
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.adobe.mobile.RemoteDownload: java.lang.String i(java.lang.String)>
		SHA-256: 9dd8e08a97b01221441ea89a13fb6c078fb8be03aeaf5e57b6059f26a4486d11
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.adobe.mobile.AnalyticsWorker: void <clinit>()>
		SHA-256: 2de2cf26ad51d5ef519d606a7af872a50cb4cb40c6bfbe18ad44b5d767efc275
		Secure: true
	Object:
		Variable: varReplacer5167
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer5167)
		Method: <com.dip.baitoru.utils.BlowfishUtils: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e1af1ba7054e21ccc50330c28974789195f6052b6aa42d1ccda9e7fe2beff27c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1255)
		Method: <com.adobe.mobile.RemoteDownload: java.lang.String i(java.lang.String)>
		SHA-256: e624c6e29714702ecf8027fae8ad407ba1f87e131ac832acafd869f601425eaa
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.dip.baitoru.utils.AesUtils: java.lang.String b(java.lang.String)>
		SHA-256: 37af07a40d35b91cca9a062d32a388691b6dce8f24bc6af6d29715625a9d83fd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer5167)
		Method: <com.dip.baitoru.utils.BlowfishUtils: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1eee404b2889354e61821ec47110de24e586f9433e02701868e414b26fda010a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8038)
		Method: <com.dip.baitoru.utils.AesUtils: java.lang.String b(java.lang.String)>
		SHA-256: 2754307123887d708da1ce818d4179cd06e058a3b346231008636d2691b54289
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8039)
		Method: <com.dip.baitoru.utils.AesUtils: java.lang.String b(java.lang.String)>
		SHA-256: b4f30e0ce051aaa2beafbe82cf6f587623cc83fa5020a916e349a5d5964b3550
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6545)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 29e6a5f7e9365ac0d73d499e6fd6f82ca30f288eb10fdc3834a0b782f89d00e1
		Secure: false
	Object:
		Variable: varReplacer8039
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8039)
		Method: <com.dip.baitoru.utils.AesUtils: java.lang.String b(java.lang.String)>
		SHA-256: 98fec79b59c45e864a389b1f344646ea047c4d1f01382dcf8ae949e16d5ec5d8
		Secure: false

Findings in Java Class: com.dip.baitoru.utils.BlowfishUtils

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d3384bced4a6ae19d90950c7a2adf587747b5ef38b7f77761542e6d993cecef3)
			First parameter (with value "Blowfish") should be any of Blowfish/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5166)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer5167)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5165, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d3384bced4a6ae19d90950c7a2adf587747b5ef38b7f77761542e6d993cecef3)
			First parameter (with value "Blowfish") should be any of Blowfish/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5166)


Findings in Java Class: com.dip.baitoru.utils.AesUtils

	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8040, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2754307123887d708da1ce818d4179cd06e058a3b346231008636d2691b54289)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8038)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8039)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2754307123887d708da1ce818d4179cd06e058a3b346231008636d2691b54289)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8038)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6543, r6, varReplacer6543)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6543, r6, varReplacer6543)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 17

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	ConstraintError: 4
=====================================================================
