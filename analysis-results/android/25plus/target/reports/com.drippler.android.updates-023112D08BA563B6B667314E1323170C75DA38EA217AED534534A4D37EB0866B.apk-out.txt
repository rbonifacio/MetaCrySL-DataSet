Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.drippler.android.updates-023112D08BA563B6B667314E1323170C75DA38EA217AED534534A4D37EB0866B.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11897)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: ea351c79abb643deb49bf9d08b42ec3f7d31449e26db35757d0c0bd136115627
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12291)
		Method: <okhttp3.internal.Util: ip sha1(ip)>
		SHA-256: 14e4b992199fd893f73d7699e5a5effa64e36081cd81678ad0bb9c04fe0c54a7
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzkk(java.lang.String)>
		SHA-256: f768922fa43b6517f5cbb7b5c0e8dff878a97528e590f1df3666b51af353f078
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.facebook.ads.internal.util.g: org.apache.http.client.HttpClient b()>
		SHA-256: c82c99734e4b51f21f191d0f90d43ec5f59be9a68965230c5a27c05f6e9a0e60
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer13265)
		Method: <com.facebook.ads.internal.util.q: void <init>(java.security.KeyStore)>
		SHA-256: e1dee9f811ff154475147b175a16d7f32e9128349280368635013392f10117a5
		Secure: false
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1172)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 93e1762e47c2d65ac36f4f0761c327ee9d428adb41c1ccba854ac9cad13c7f0b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.drippler.android.updates.utils.be: java.lang.String b()>
		SHA-256: 5bbf5a458a917aa5b3c3be374d990e89b1c16878a8b04ff0dad8de2510b8e5ca
		Secure: true
	Object:
		Variable: varReplacer4777
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer4777)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 3252b2aa3c473f10420ec756d6dc4f40083633719269a1e850aea277c16faeb9
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 908daeb172f525a1e62466efcc133d9a5b12f7704dc8bf2d59d6c63a2c08d530
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4770, varReplacer4771)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 3b915ca7ea3e848fc3ccb473661a181157eadbbd2c8a0a4fa3033a74feb4a1cf
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer8195)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzblv()>
		SHA-256: 1aa0bca67abee8eca0d5895c765711415563a020894f272134c737fbe17c87a7
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4775)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 369aba831d18d8ac6350ae70bc56e804322dab8147f9519b6fe0973ac09a0d57
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 908daeb172f525a1e62466efcc133d9a5b12f7704dc8bf2d59d6c63a2c08d530
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10604)
		Method: <okhttp3.internal.Util: ip sha256(ip)>
		SHA-256: f8bfb7811a97af31d37d76d1831388c26925728e8cfacc03fbfb064d1375dafe
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: ad52ba8fd36ff0e637947abbd0d81d2d14dfbc6fcdc6abeee3dc89885e46195f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: ip sha1(ip)>
		SHA-256: edbf0fb2bfe0c263fc769f68ee377a5ac04ba061b9ab95fdebb5ffc8a7b78c46
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4773, varReplacer4774)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 7a8215ec5eadd0532e330fccc34a5dd707573a7fd9c16b2f0ceefa75562217f2
		Secure: false
	Object:
		Variable: varReplacer4774
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4773, varReplacer4774)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 2e40078d9c75dafe4c181c2880f784aca8a7bf02135e79574dce2060d4ae7881
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.drippler.android.updates.utils.ap: java.lang.String a()>
		SHA-256: 579902bb2e2627cf1a90c2a23d0094709f0c6e3f30b42446bff021f5a7406516
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer4777)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: e51ae1672bc8593c35e1cd45d358df3977435a0786db80b792e997807d417060
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzblv()>
		SHA-256: 112022bca94cdaa98ec8bb4e28d641de4a8f23ab1fc0b368e2d06d6a02e13c6a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: ip sha256(ip)>
		SHA-256: c95ad3356cf22a282bc26b2cccf59f036790f05e2d6fabb584d459fd1ade5901
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4776)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: f2f3f40f38c9d21722916034cd4d32bd4eecca075b864ce4952576c3d90773a
		Secure: false
	Object:
		Variable: varReplacer4771
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4770, varReplacer4771)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: afb208a05f33c4749a83e6d9d804d76fcd8c7dc1e041dede512368d9964f5903
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: cb5c85ecc670eb31cda7aafed21d7f4cf4c9816928a7898d9b23a7a6312611af
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4767)
		Method: <com.drippler.android.updates.utils.ap: void <init>(java.lang.String)>
		SHA-256: 877e19b513fef62816b0c98a75f65a8bf2f7d4fce2c809403a42c5afea1223e2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8152)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 406a44f348035e681ae537422705832df8b86714548e9bed0f648ede969d7bf6
		Secure: false

Findings in Java Class: com.drippler.android.updates.utils.be

	 in Method: java.lang.String c(android.content.Context)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #369aba831d18d8ac6350ae70bc56e804322dab8147f9519b6fe0973ac09a0d57)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r3 = virtualinvoke $r1.<com.drippler.android.updates.utils.ap: java.lang.String a()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f2f3f40f38c9d21722916034cd4d32bd4eecca075b864ce4952576c3d90773a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r3 = virtualinvoke $r1.<com.drippler.android.updates.utils.ap: java.lang.String a()>()


Findings in Java Class: com.drippler.android.updates.utils.ap

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #3b915ca7ea3e848fc3ccb473661a181157eadbbd2c8a0a4fa3033a74feb4a1cf)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4770, varReplacer4771)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7a8215ec5eadd0532e330fccc34a5dd707573a7fd9c16b2f0ceefa75562217f2)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r6 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7a8215ec5eadd0532e330fccc34a5dd707573a7fd9c16b2f0ceefa75562217f2)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4773, varReplacer4774)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4768, $r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4770, varReplacer4771)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7a8215ec5eadd0532e330fccc34a5dd707573a7fd9c16b2f0ceefa75562217f2)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4773, varReplacer4774)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #3b915ca7ea3e848fc3ccb473661a181157eadbbd2c8a0a4fa3033a74feb4a1cf)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4770, varReplacer4771)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4773, varReplacer4774)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer4777)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4768, $r7, $r9)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #406a44f348035e681ae537422705832df8b86714548e9bed0f648ede969d7bf6)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8152)


Findings in Java Class: com.facebook.ads.internal.util.q

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer13266, r5, varReplacer13266)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer13266, r5, varReplacer13266)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1169, varReplacer1169, varReplacer1169)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1169, varReplacer1169, varReplacer1169)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 32

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 13
	IncompleteOperationError: 3
	NeverTypeOfError: 2
	ConstraintError: 4
=====================================================================
