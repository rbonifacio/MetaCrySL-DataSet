Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.emojifamily.emoji.keyboard.art.sport-0148410884403A7F7BA5CE5CAD639034DE7FD3AC3E234FF7083256E0A314DA7E.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5695)
		Method: <a.a.aa: void <init>(java.security.KeyStore)>
		SHA-256: b974af77be2785ecab617780dd5ca5ccf658ae9a8284d83501228023912f268b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 87691fb5b53b2114df82b3e56958c750c9cc905fc478f0880f4d06baf2fc0279
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <a.a.as: java.lang.String q(android.content.Context)>
		SHA-256: 278089e7ed8e672a12600343bdab964e1eb1672563b8ae173894324378bc306e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer876)
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: a8a15825d0384e40f93fa2b1519dbe5d34b6e6abc884c2454494a67bcd2aa483
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.at: java.lang.String a(java.lang.String)>
		SHA-256: 47178459afb1109f1ed6b76ab69e8405e53f917906447e54d6ccd8ceab09aa2b
		Secure: true
	Object:
		Variable: varReplacer3609
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3609)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 6177925f4827508ab46e77ee76c8ad77e913dd3ba6738b9742a714830fbf785a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: 525bebaa4b250680db00d0bf08b6bd1f38c1a5dd661c3216ff32758250cb92ed
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.aq: java.lang.String c(java.lang.String)>
		SHA-256: 40770e6c1cd39f8d900d47a26344c77cc362948008cb3c1a44557cfae2545b9c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4037)
		Method: <a.a.aq: java.lang.String c(java.lang.String)>
		SHA-256: e022bc78bf060acc9af8dfa2baf57779297bd7d0d2d5a50d1a7965fe19c83946
		Secure: true
	Object:
		Variable: varReplacer3606
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3606)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: efbc59f399280a99e9d445b5387717b84bc625c8dac44a84ca0935dcf6c4ab9e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: 402b184e9e59555d389ca3f32bd9dba6a1f6d2cda790902ccde2b496ab4dfeb7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4308)
		Method: <a.a.at: java.lang.String b(java.lang.String)>
		SHA-256: 3c3fdaa3a6bb8da3aa2bb949df08ada53ed08622ba54d29b10b9896505d09355
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 813ba64931cd1741e31c1b6868d81ca5ca066346a951c1abcf84b799c441bdf
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4306)
		Method: <a.a.aq: byte[] b(byte[])>
		SHA-256: 2a49cb3a8d37def9964352f95f69c0ee9835bc570cbf692b667154d518cf23fd
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: 7e34009075c8bf54d3bc1805145a5b508ed5d19c9b006bd0c54fb4b28cdfabf
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4633)
		Method: <a.a.as: java.lang.String q(android.content.Context)>
		SHA-256: a33aa21f49dee776ca522febbae1c2c1cedc02735eb5a88bc2c7975ed44a78f5
		Secure: true
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3609)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 35ffa7a23f0e26faa8260fe0eb64fbecc8d320e06c159fc784c78c898a06a078
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3607)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: 8c810a3f9c9aa151308f99ce0c5ea9be809fbdd3e30e351db8c9b89f6e86c58f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3597)
		Method: <a.a.at: java.lang.String a(java.lang.String)>
		SHA-256: 73020781827ae68b722cf86ce8c02aafe1576e903770a1203a8c206a9a33799e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: 9c415df7a8795f09a7c84712adb6a9d47bdeab0ff98242a60bcc8fa99c39be8
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2229)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a0c79a07ff7d3685b164a9c1c2a571fb7b263752999f045e48073f35a0391a3
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.aq: byte[] b(byte[])>
		SHA-256: 1f8589f92ddd9c9fc9264f34a3c71dc073c5e5b21900388f0f0b484642e60f77
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.at: java.lang.String b(java.lang.String)>
		SHA-256: 4ba1a1aa25a09e0dbf1db3d3c2aae7633b122bab5951673f546a6b83d4058959
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2511)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 5d9ee0871026bb8f3acc744a8af9bbbf4a2b9a96f85dbf86f4363a865767ef22
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <a.a.w: void a()>
		SHA-256: 151f8099740741e36599ed2c97f90f4e265b9344d358d05ac8628308b5868b7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3606)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: bb08052dd64dd407c0d2ada58c5789415b25ea3abdff6a02f3fe81d0b1d7e0db
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3608)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 4b46b80a413a444c2ebdb91467a2c7b3938bf413395c3e3050c84bf515405328
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5547)
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: 1fcd2390ca3918a36759162648d0fa9361bdd7092c95ecdb599fb553760a5bc1
		Secure: true

Findings in Java Class: a.a.aa

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5693, r7, varReplacer5693)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5693, r7, varReplacer5693)


Findings in Java Class: a.a.aq

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3609)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3610, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3605, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3606)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3605, $r2, $r4)


Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2510, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2510, r12, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 11
=====================================================================
