Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.felink.clean2-0BE624B6CF821633A4AA760793B4F85992052FC97755930AB354921970061795.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer8162)
		Method: <com.a.a.b.d: java.lang.String a(java.lang.String)>
		SHA-256: d0132c89245962484fa70c81f0a7004d4317f5ae97370cd49dbba5ef3af0fd4a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 9b8a78d9edc971be91147cb909e582cf4e5d47ad532216cffc3f02042f047f00
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4230)
		Method: <com.felink.ad.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: 79c545df30ae00fc32a79cf369c7cf9667e63293a398f18ebf80a647fcd9240a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8298)
		Method: <com.a.a.a.k: java.lang.String a(java.lang.String)>
		SHA-256: 90a2f822b3624c4f18abbf2077f6b97a0f53799c2b61853b255949e09556f5b8
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.felink.analytics.a.j: javax.crypto.spec.IvParameterSpec c(byte[])>
		SHA-256: 6c7096347c56cc725a34df7857b1de534c6d94dca7ee11af81876ba6d2afff50
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1714)
		Method: <com.felink.common.a.a: java.lang.String a(byte[],boolean)>
		SHA-256: aa9a52ce96d1a015d2ba034ec10f994ba491c92b185673d64117e4b2a20aa138
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9125)
		Method: <com.felink.analytics.a.k: java.lang.String a()>
		SHA-256: 552dc66342fcda196cc039f5e4951f65a4e50698243ecbe99f0308c3f129c21a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer8913, $i1)
		Method: <com.felink.analytics.a.j: byte[] a(byte[],byte[],int,int)>
		SHA-256: 8feccdb4632348f2d49b7d2c6540e96c840fe47bd3e7358c1c41fa3b3ed535
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1784)
		Method: <com.felink.common.a.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 64ce782a75d29faf72981c08771d12aa7bba7ba1176cec1d2981b84949e13455
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <com.felink.analytics.a.j: byte[] a(byte[],byte[])>
		SHA-256: b33d3f5771e1f0e66b593c6c82964e1a7ff5a8d1da9f05ca95c5385cb74a6ec9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)
		Method: <com.a.a.b.d: java.lang.String a(java.lang.String)>
		SHA-256: b3d7b7486097af391aee960fdeb2b737043664fb5fc3cf0c1b1a69650df39903
		Secure: false
	Object:
		Variable: varReplacer1784
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1784)
		Method: <com.felink.common.a.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: a804c773b0cff6aba31fb59ab896e10e63747a18d7bc7fff14080bdd8a82a6fb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <a.a.i: b.f a(b.f)>
		SHA-256: 8351278328945293db6363abb9c5413804df4d4518c395e29e68a394a05eaa10
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.ad.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: cf8ef25d33ed5c061510309f582ea33d9d6609c1a9bff42513f560ba929c1012
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.analytics.a.j: byte[] a(byte[],byte[])>
		SHA-256: b36398b370eb87abbabe1804d94504a6f350778dc3f063c3186b171ae973d011
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.analytics.a.k: java.lang.String a()>
		SHA-256: 26b60c203e0c31b594531c741f91c940f8bf5eeee04ee78b35df0f34f6e3992
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7380)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 5ab1b3327d8af39e54b2fc7c461c5dfe3389cb5969530191bb3541e707b620a6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.common.clean.g.f: java.lang.String a(java.lang.String)>
		SHA-256: 9c415df7a8795f09a7c84712adb6a9d47bdeab0ff98242a60bcc8fa99c39be8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzxM()>
		SHA-256: be6f59935a526a49360ac54c2d2c6de8159890710d02d7faf54ad5e3f5ee648c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3290)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: f1894b5c1a93e439073379750a0cb5257f8af80c30520a4144885ac223bb501b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: de23b6b43bf61a151236ba121fe635998ae5701838c416d3d6732f9c02675d0b
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdQ(java.lang.String)>
		SHA-256: ca9f975c8e1ffdb250ef06ced06658b1b1fc2f5446abfce4b67e51b0b296c6b5
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <com.felink.analytics.a.j: byte[] a(byte[],byte[],int,int)>
		SHA-256: b33d3f5771e1f0e66b593c6c82964e1a7ff5a8d1da9f05ca95c5385cb74a6ec9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer8913, $i1)
		Method: <com.felink.analytics.a.j: byte[] a(byte[],byte[],int,int)>
		SHA-256: ec4fcb059ab87d7ca2d2e3dd18d1c71d5eb42412b4c0e2798ba2817b549d7f4a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7041)
		Method: <com.felink.common.clean.g.f: java.lang.String a(java.lang.String)>
		SHA-256: 16121975fcbe7dcccf1c1a6d9e766af57181b482ce198fb49883d618e24ba31c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8919)
		Method: <com.felink.analytics.a.j: void a(byte[])>
		SHA-256: 90a2f1cb77fc2c9528fc0c8d7cd87d0497fffb6039991e70024056ab5e3559fd
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1782)
		Method: <com.felink.common.a.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 441dfd4c18c788d539b910eedc3d563f4b7ce365b690529a69399880bbf971a4
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1484)
		Method: <a.t: void <init>(a.t$a)>
		SHA-256: 41d073d799da749ad19873d46c012055d6e2fe6a90dbcebaa8a8fb9caf5ebc79
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.felink.common.a.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 9c6107e5dbcb48ed0411a9076553f29baafa6ae55aec29163bcc9048725deddf
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)
		Method: <com.a.a.b.d: java.lang.String a(java.lang.String)>
		SHA-256: 42e0f00506b5f2ad22a877a2332e12320217db82868004f0a569f3a9cee2fb82
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.felink.analytics.a.j: void a(byte[])>
		SHA-256: 87e4b0d1aaebcb7a08d78e39c981ed304b50dea7c62c728fa57793b3bf3066ce
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.common.a.a: java.lang.String a(byte[],boolean)>
		SHA-256: dc619895edf5b0041ac5e173acd519cb0c819c18f1cc9137acb059e7247bdaa0
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5773)
		Method: <com.felink.common.clean.c.a: a.t a(java.lang.String)>
		SHA-256: 226718f60fdf02f49e114c6c611f6ad15d88f8d82583ba15dfc286a565c168aa
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1587)
		Method: <com.felink.gcm.internal.d.f: java.lang.String a(java.lang.String)>
		SHA-256: ff83a3f111bd0edfe7ae8b183c17f93a82dceb24950cf7bfb99e20b78a3832ac
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10476)
		Method: <a.a.i: b.f a(b.f)>
		SHA-256: 51349595e53fd38f2b09e69fd9629e447beb00a16634b520d35fc2a0e308743e
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 2abb37024bd464fc0c2ccf69b2ceddf0aedb43bffcb4711b7b94cf28f4b552ea
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.common.a.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: ecfb9604701122e2226beb270c7e8c8b6acbc14d5fb30ec1d7e4f9869dd65af
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8166)
		Method: <com.a.a.b.d: java.lang.String a(java.lang.String)>
		SHA-256: 50ef0290eb9905735cf7ee8b462b82eb23b904b18fa320be38dd93f6acde0cba
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: ad19a603e89360657fd031ecd3a9b509e8b25fed8dc69952eef89a447965eed4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer8162)
		Method: <com.a.a.b.d: java.lang.String a(java.lang.String)>
		SHA-256: 200720d23134bc0b2b078e3642df8cecd4aec89fd54d171c4bc9083ab62383d2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.analytics.a.j: byte[] a(byte[],byte[])>
		SHA-256: 8ca2a371b9e4287306cfaf2193d0f624a9c4ccde4f4c8dd377fc6957c10e28d7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer7445)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzxM()>
		SHA-256: fdb5b11283ef425daa17022aa58cb98c81afcc2e39b33cc886d8850f618efcff
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.gcm.internal.d.f: java.lang.String a(java.lang.String)>
		SHA-256: 9c415df7a8795f09a7c84712adb6a9d47bdeab0ff98242a60bcc8fa99c39be8
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.k: java.lang.String a(java.lang.String)>
		SHA-256: e117ce4631f5d569af2e72899eed383aa37ed505438099eda6baf49a7feb23c3
		Secure: true

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5ab1b3327d8af39e54b2fc7c461c5dfe3389cb5969530191bb3541e707b620a6)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7380)


Findings in Java Class: com.a.a.b.d

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #50ef0290eb9905735cf7ee8b462b82eb23b904b18fa320be38dd93f6acde0cba)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #50ef0290eb9905735cf7ee8b462b82eb23b904b18fa320be38dd93f6acde0cba)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #50ef0290eb9905735cf7ee8b462b82eb23b904b18fa320be38dd93f6acde0cba)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8167, $r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #50ef0290eb9905735cf7ee8b462b82eb23b904b18fa320be38dd93f6acde0cba)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer8162)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8167, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #50ef0290eb9905735cf7ee8b462b82eb23b904b18fa320be38dd93f6acde0cba)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer8162)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer8162)


Findings in Java Class: com.felink.analytics.a.j

	 in Method: byte[] a(byte[],byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8912, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8912, $r3, $r4)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer8913, $i1)


	 in Method: javax.crypto.spec.IvParameterSpec c(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: void a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r4 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9124, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9124, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9124, $r3, $r4)


Findings in Java Class: com.felink.common.a.d

	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1784)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1783, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1783, $r3, $r6)


Findings in Java Class: a.t

	 in Method: void <init>(a.t$a)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1481, varReplacer1481, varReplacer1481)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1481, varReplacer1481, varReplacer1481)


Findings in Java Class: com.felink.common.clean.c.a

	 in Method: a.t a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5770, r9, varReplacer5770)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5770, r9, varReplacer5770)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 47

	CogniCrypt found the following violations. For details see description above.
	ImpreciseValueExtractionError: 2
	IncompleteOperationError: 3
	ConstraintError: 2
	TypestateError: 2
	RequiredPredicateError: 17
=====================================================================
