Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.gau.go.launcherex.theme.goldbutterfly-01490934B90A77ED12C9C7E16D993621937F41793B88603BFC2D9C5F6BB74291.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: a0fb3191ce4c347e6dc4d2c93a2b28d5d01589a91341d353d9d79172a555d6fa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 13b7df8e4159afd3c95e773a0a2fb89a181151c51e2fcbe7400da8a0d51bf426
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 6e6f3a156274bccb5009c67a602212222822b175df2e03889ca0ead18734c307
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12427)
		Method: <com.google.android.gms.internal.zzbm: java.security.MessageDigest zzcG()>
		SHA-256: 71dfda4c523ba6d47db221e19e1dc071f9f7384b7cca984bdf3755b31a39133c
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 5a4ce487d3da3934d330909e15f4b82460918db06fc9ea79826feeef29fe6fe3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer7148)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: d03e16e67f4440ae9eb6b186df9f5f814fc7822a24c78a6e30a82f13f7b6dc44
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.t: java.lang.String a(java.lang.String)>
		SHA-256: 4e89201f4bdcd77c27e858ba625da59031a7db9be7b66975f2c164af9219b50c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 57b34ea97dd082ce3816307185da5f3c24486a235eadb14d113287b38117a418
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8734)
		Method: <com.mobvista.sdk.m.a.f.c: java.lang.String b(java.lang.String)>
		SHA-256: ba902f8cd2783e4c1d6359594cdf2c83638ca4c36f29244fb8b382de1c40e802
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11074)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: ec7a53c7476ae5722f6ef0eff46280197260cd58bf67d54410d02ca0fa82427f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 4d0d73ed509b99931dd07e65ab72bb4c38bc5cabf8058c750064f3607fcd6b2
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3950)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 5147bc8751c7935ef8090b957fc39bddbbc325a799c19c311499abdaf7635a16
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer7146, varReplacer7147)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: bf69e2b26f4c004e32ca45d7a7a251fe72ed43b846a681eeda4b5cee46f7b09b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6618)
		Method: <com.jiubang.business.advert.util.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>
		SHA-256: d093fac9ce73c0ec7b421a43c39e137516148aeec231c543bf96fd939c5f5f1c
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10398)
		Method: <com.google.android.gms.internal.zzip: java.lang.String zzha()>
		SHA-256: 2c4dd57a4ae6c3f59c15d2cee960f1db93a3f69e7ffcc0f035d708594574ad7d
		Secure: true
	Object:
		Variable: varReplacer11075
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11075)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: ff4617530a44c4447264388955b5ec5328421b71353ecdb16a1693e5612c5d27
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbp: byte[] zzz(java.lang.String)>
		SHA-256: b0c1270d8a7c1ba60118aeb2618aeac235345c871438a18cbf79b117c582490a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10677)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 3a4a937dca531357808b13e260d3f4317b0ade6fe34a1b780a01f953fa519d26
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: c912c10fbdf9c59ad4f89e99034f2098742bd04a6912e7829063391bc286c150
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: bdc7512ec38c2cc09adba71da2f9eeaa86d77e6218983960216f0ede83a261e7
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.sdk.m.a.f.c: java.lang.String b(java.lang.String)>
		SHA-256: 34ba3c9bb7fa93036505409e6f624148d580a4ef39cd6b74abdee3d1e3232629
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7158)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: b561234aef836bed58c90166a7a3ec70b382c9d3681758978b08b4889aea296
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer7149)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 666ea8749264001c9e6d4246194511f92acd23a73caafaea8203fc20dfcfdbba
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzip: java.lang.String zzha()>
		SHA-256: 20add7c3d4e7c11c391545d8ff692a916f933084b53b79ebc8c4ae85a58aa523
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11075)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: c158df09bdbb89165e700949678b4505e9f87a1aecc23ab8927a74e9113c18ff
		Secure: false
	Object:
		Variable: varReplacer7159
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7159)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 5b5a1de1af0f89aad48640d4dd45b636d791c519b0821d79ad724e73888ee656
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2028)
		Method: <com.facebook.ads.internal.util.t: java.lang.String a(java.lang.String)>
		SHA-256: c32c299935e7ad3f0a68ee78d435e945920344279bf554a66ca4e30dbbe62848
		Secure: true
	Object:
		Variable: varReplacer7141
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7141)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 684fb0a03c7e779dbc75f883cf7128f6d8c0765b8d1349768ebd31bad8114d91
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7141)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 60933d37e18df253174cd3649f52639a0dcb55af63e0ed1a83cf2f2cfb6f2552
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 4c3ef24d9dcbe9c3c805a70b30efd3900d8efcc8b976bdf307a218612149c602
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7143)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 9899fb006983bb98cf0e8af4bf9c2dab3779fdf3992da42b5d7b64146ec67a0c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7159)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: e6779a2fea34118a0bcb65abab0a5cdf67074da3683b694d179c744f13ce5ae9
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.jiubang.business.advert.util.ConnectionManager: org.apache.http.client.HttpClient getNewHttpClient(org.apache.http.params.HttpParams)>
		SHA-256: 39430a73f0e1dd22ceef384447c8b7f78a6bc07c7f36c9d753b88de424704c9
		Secure: true

Findings in Java Class: com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7141)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9899fb006983bb98cf0e8af4bf9c2dab3779fdf3992da42b5d7b64146ec67a0c)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7143)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9899fb006983bb98cf0e8af4bf9c2dab3779fdf3992da42b5d7b64146ec67a0c)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7143)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7142, $r2)


	 in Method: byte[] encrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b561234aef836bed58c90166a7a3ec70b382c9d3681758978b08b4889aea296)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7158)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b561234aef836bed58c90166a7a3ec70b382c9d3681758978b08b4889aea296)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7158)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7159)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7160, $r2)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer7145, $r2)


Findings in Java Class: com.google.android.gms.internal.zzbn

	 in Method: java.lang.String zzB(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #71dfda4c523ba6d47db221e19e1dc071f9f7384b7cca984bdf3755b31a39133c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbm: byte[] zzz(java.lang.String)>($r1)


	 in Method: java.lang.String zzA(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #71dfda4c523ba6d47db221e19e1dc071f9f7384b7cca984bdf3755b31a39133c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbm: byte[] zzz(java.lang.String)>($r1)


Findings in Java Class: com.google.android.gms.internal.zzar

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11076, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11075)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


Findings in Java Class: com.jiubang.business.advert.util.SSLSocketFactoryEx

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6619, r5, varReplacer6619)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6619, r5, varReplacer6619)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	IncompleteOperationError: 2
	RequiredPredicateError: 10
=====================================================================
