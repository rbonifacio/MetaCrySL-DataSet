Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.gisicisky.fragrant-0922E70B1CFAD63AE4D4036F53EE9BDF4F7ED9EEA4B789C94597EF01CC80BDBB.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1088)
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(int)>
		SHA-256: d80dabe5a618070d6472677c817ef0a40c799cbcace6460b6f4e507f998e6ce8
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8676)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 86ecb225a2c401c96123aec00351a0543c85d6c3f4e771478b84e2d0a22c6137
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8674)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 1e37e294dc9e79e4874eef2f1aa387fc3756428e13f343e79bb1e6745d787030
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1046)
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(java.lang.String)>
		SHA-256: aca00950748455a75f2356d1690c7912afbd979f3cb3002e9bbe510a8ce0a209
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7337)
		Method: <u.aly.cd: java.lang.String a(java.lang.String)>
		SHA-256: aef1bd54ef4658e1783069b47a5539561eda4625d3ea609794365c94b132b1e5
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6038)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: a2ab2abc193ac3b8fb3a6932102654024b594d10f6389c3c6dc3d9195b00f504
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 54800dff0bb6e766eb4162281a69aabd6f6b14628251ecc63b0124d57439446
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.baidu.location.b.m: org.apache.http.client.HttpClient 'if'(org.apache.http.params.HttpParams)>
		SHA-256: b90ea4e6ccdfcb9cf556068e1ab227f531b0a17a6e6470df46089b9a5b8eeeba
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1239)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 5fab5b2c62de629a5c3aa10b4930cc435a47d93d7a8e0c1e5a292d83da42b6ab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cd: java.lang.String a(java.lang.String)>
		SHA-256: 56714a6ff4bb58aab50b08d1be4474766b56926d390344c8d1e93737d001ddf3
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3456)
		Method: <u.upd.n: java.lang.String b(java.lang.String)>
		SHA-256: 7c9fec35d45ae8d5c0802eda0a4199507a62f29c7cec701aa8e52dfb0c389956
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6039)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: d2eb35de4f2929748c133e9ec9f87d626124ff202ea8c5bbb337581178bc2056
		Secure: false
	Object:
		Variable: varReplacer8676
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8676)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: b85dc1e7125ab620fb2941f7f502b6ce4820b04e946c9d5ed85a27092a808490
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: d0f6f4706546c156ee289b202709825e5df53f7e4f36e0982c154eb3536bcb6c
		Secure: false
	Object:
		Variable: varReplacer1788
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1788)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: c9196bbfbeda6de01f5f34209181bb14971a06833383c5eba029b747375feda2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7129)
		Method: <u.upd.n: java.lang.String a(java.lang.String)>
		SHA-256: aaf4cbc39c9d30266398735ffe7cd450d588e629bd8936f30c1c4f70d1a0e51b
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: 8269fa4a58e666ba40031be7993cd6bb89dc5390406f46345dbfe0d670eec1a5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.upd.n: java.lang.String a(java.lang.String)>
		SHA-256: 6c0dbb484cf43cce9d7cb4f0de4c2814b3b3b4ab371d368972e0c550691e352e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8679)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 83c27e679ec8b904888642f3422df3455422a2a1e31fa3941b6a93d065a0140a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1782)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 38ad408d5ad552d5e759baf8586ea3cff630a1952b8d7c07a70ff00d4a3ab9b0
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer6029)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: e858643c22629801828fa95df5da111411e301f7e9e0657327ccec3b82d21c21
		Secure: false
	Object:
		Variable: varReplacer1782
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1782)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: c778be68cf51e40d508837666ca999617d623caa0b34227da69d3552a22ca63f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1783)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: a1dc9891f4eaa47a086eea746477d1fa574bd3acce267114522bf41bd5560e26
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 150bd5b7f4fa98bd7d19b4334335a3f364b812a82990b17162c6a447c071634b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9046)
		Method: <com.baidu.location.b.j: byte[] a(byte[])>
		SHA-256: ab39204cc071e3b6487828f106931cfd170291849359f73877c431238e39e9b9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cd: java.lang.String b(java.lang.String)>
		SHA-256: 5575822e2d8a4009ec4ebe26dad61ce7dd0e90feb0e83168463dd1146f998fa7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1764)
		Method: <com.baidu.location.f.a.c: java.lang.String a(byte[],boolean)>
		SHA-256: 4a66b99c723ab09e9ebdff4b13ec6ea3753e3b5487cf6d659b954be18b818a4f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1651)
		Method: <com.baidu.location.b.k: java.lang.String 'if'(java.io.File)>
		SHA-256: 4f4e0ab75ae6574e443a000508bb778451427833e67891b0bbf0c6d31149ac11
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2549)
		Method: <com.baidu.location.b.m$a: void <init>(java.security.KeyStore)>
		SHA-256: e5deb53f5b865dfbee8c5bebaa4417017062a4f48d2a223c5050017c4ab11081
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3303)
		Method: <u.aly.cd: java.lang.String b(java.lang.String)>
		SHA-256: fcfb2507c97b4c0684b04cb9857568b76357ebb70a0ff2b4b353d57407161971
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.location.f.a.c: java.lang.String a(byte[],boolean)>
		SHA-256: 4bb5f419639e58782ccdd9119c54776e66212f98bcbc57fc8c320afc68b85313
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.upd.n: java.lang.String b(java.lang.String)>
		SHA-256: 109e805eab3d4cace631799164d3e481165d892f6bcc1491005e78dca97b2190
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1786)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: cff63385727521ad019da4796839665f16264095997d1dc6e94548966858b834
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(java.lang.String)>
		SHA-256: 1411125a9df5bb91eba9f22ce93e4b6b9e0da26b14ac792a3a36ec0f4887efbc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(int)>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 47d6482b646d129f902efacb8cf4d55effb2a29b8f1cde136e88a11dffef1390
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3468)
		Method: <u.upd.n: java.lang.String a(java.io.File)>
		SHA-256: c72d27bfd05785773dc6841aeccaedbe729cb505452fd80215f742c0a9265f16
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6051)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: c112afc9f5ddf6bde3be4b84838ed65030ec7eb57556428a574ffdb8138d0f17
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.baidu.location.b.j: byte[] a(byte[])>
		SHA-256: 15b8623f6a9850846e1bb5b240a633d392f8a7c412b22aa26cde142cfc254534
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.upd.n: java.lang.String a(java.io.File)>
		SHA-256: 6c0dbb484cf43cce9d7cb4f0de4c2814b3b3b4ab371d368972e0c550691e352e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.location.b.k: java.lang.String 'if'(java.io.File)>
		SHA-256: 25250c381b14ddfb8a35cf3c609f6b9b108c17b133ece5cceb609f2a7793c7b6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1788)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 97b544f5136a08a5d8076415b9ae6c1d270b4df9df1936d8fd530da111d36ec2
		Secure: false

Findings in Java Class: com.baidu.location.b.k

	 in Method: java.lang.String 'if'(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #4f4e0ab75ae6574e443a000508bb778451427833e67891b0bbf0c6d31149ac11)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: u.upd.n

	 in Method: java.lang.String a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c72d27bfd05785773dc6841aeccaedbe729cb505452fd80215f742c0a9265f16)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: io.xlink.wifi.sdk.XlinkTcpService$4

	 in Method: void run()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d2eb35de4f2929748c133e9ec9f87d626124ff202ea8c5bbb337581178bc2056)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r10)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e858643c22629801828fa95df5da111411e301f7e9e0657327ccec3b82d21c21)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r11 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer6029)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer6028)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #a2ab2abc193ac3b8fb3a6932102654024b594d10f6389c3c6dc3d9195b00f504)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer6028)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e858643c22629801828fa95df5da111411e301f7e9e0657327ccec3b82d21c21)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r10)


Findings in Java Class: com.baidu.location.b.j

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ab39204cc071e3b6487828f106931cfd170291849359f73877c431238e39e9b9)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9046)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8675, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8676)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8675, $r2, $r4)


Findings in Java Class: com.baidu.location.f.b.a

	 in Method: byte[] 'if'(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1782)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1781, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1781, $r3, $r6)


	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1788)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1787, $r3, $r6)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1237, r5, varReplacer1237)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1237, r5, varReplacer1237)


Findings in Java Class: com.baidu.location.b.m$a

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2550, r5, varReplacer2550)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2550, r5, varReplacer2550)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 46

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	NeverTypeOfError: 2
	TypestateError: 2
	IncompleteOperationError: 1
	RequiredPredicateError: 18
=====================================================================
