Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.globalwarningsystem.safeture.travelguardian-0D09DFA5EF99A1F3FDBAC904BC873BC49CE4E4BA914526E52E23D0CE49129CA2.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] randomDataOfLength(int)>
		SHA-256: eb98d4f2529c703fa5c88aa78fac1de113b21da5605d3337f7da48f7e0ad5bea
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer1738, varReplacer1739)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: def23eb5a1160e7be2645a4bf860e636c51c7f9835a242a3e471114cc09c6f64
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1858)
		Method: <com.globalwarningsystem.safeture.util.Util: java.lang.String createPassword(android.content.Context)>
		SHA-256: 3bee9279eeb0d65e8dc0bc390e6399f938c25245de81e46af2493f277f47eb70
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 629d360bc47e92e367fa67560708d396d3a376357ad4cfaee9c8543904054791
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.globalwarningsystem.safeture.util.Util: java.lang.String createPassword(android.content.Context)>
		SHA-256: 6b5b9632e1f009f4c95f0b707abc2d42eff3bae431f27ba6171782526ab6ab1f
		Secure: true
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1736)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 8406fe9564ac20bff264b37745ddc0ce52d1eb1292c75b5439505666b6174775
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1727)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>
		SHA-256: 6b52e086301cea1e90b329a0827b3f5fedbd436a58633964048e8b8c504e7cf7
		Secure: false
	Object:
		Variable: varReplacer1736
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1736)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 19f1ffbbca77200f70016e275589edd436e5d986872dcec26132779b7de8c40f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.globalwarningsystem.safeture.sms.SmsMessage: java.lang.String calculateChecksum(java.lang.StringBuffer)>
		SHA-256: 4a3e57fddd15aa38f0df4f69b80ed38de17b06062f4ac73b64837d8745a5978d
		Secure: true
	Object:
		Variable: varReplacer1739
		Type: int
		Statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer1738, varReplacer1739)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: f39590c71e9f5f55b0412993154687d74b99be426de3de6f44e22659e4c2a55b
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>
		SHA-256: e08cae223edaf104ea3a79b07baaa8b89ece37f30f0ecbdd27bfe1a45aed3c35
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>
		SHA-256: 8d373a69e33211c6a984a7dbf943d70345869556d09949f43a15386b19751b2e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1737)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 90456026e1d0a0c93c82773f4eeca70f5b48c992642959076e86d311270bf2d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] randomDataOfLength(int)>
		SHA-256: 79b7141b0a0cb8ce8b4e619200d82be6715133eacd8da8a74b861b7a975e1ed0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1750)
		Method: <com.globalwarningsystem.safeture.sms.SmsMessage: java.lang.String calculateChecksum(java.lang.StringBuffer)>
		SHA-256: 90b010d719fa730e74eca47ef85a8495cfedd919bf65da273bbe36129d939726
		Secure: true

Findings in Java Class: com.globalwarningsystem.safeture.util.Util

	 in Method: javax.crypto.SecretKey aesKey(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1736)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #def23eb5a1160e7be2645a4bf860e636c51c7f9835a242a3e471114cc09c6f64)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer1738, varReplacer1739)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #def23eb5a1160e7be2645a4bf860e636c51c7f9835a242a3e471114cc09c6f64)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer1738, varReplacer1739)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: byte[] encryptData(java.lang.String,byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1724, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1724, $r5, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 4
	NeverTypeOfError: 1
=====================================================================
