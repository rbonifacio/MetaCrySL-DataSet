Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.hawk.security-05CAD9AB63A62771C1E2D7CEF90E557C3983AD7C05345EB255309044E40E1CEC.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tcl.security.d.l: java.lang.String a(byte[],java.lang.String)>
		SHA-256: b86885cdc0e40855831cc39a16e44112f30af935ac283d7948ca012dada0e705
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.utils.d: java.lang.String a(java.lang.String)>
		SHA-256: 1f141351ead3174951128ebad7cdfafdaddaa3673cf12872ec662858de8eacc1
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2165)
		Method: <com.tcl.security.d.c: com.tcl.security.d.c$a a(android.content.Context,java.lang.String)>
		SHA-256: e0428b6e0c72ce66a330b567234d6fc868511dbd2598448bbdb3c5242b6cdc26
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.virusengine.e.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 1f31181288dcc94b76a37db6a803183f23f027fe92e81955c765afc4e55efbb4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8055)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: 11949318974f11b8d2293420f25d443f338da261645a260a60448bc1226e0be4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: e9c003c00db1956aa85ba2e154cfc5bb86a1557866316db5deda2ee211f5f9c6
		Secure: true
	Object:
		Variable: varReplacer8055
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8055)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: 2c00c98620d5e7116b6d4c88b293cc6f96eef84551e1e86db323f72f506b5080
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11970)
		Method: <com.tcl.security.utils.d: java.lang.String a(java.lang.String)>
		SHA-256: 7507917ff906f3d9f6130721aa85ecb8cfe2b296fa7d919a450c3fb546847287
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2234)
		Method: <com.tcl.security.d.l: java.security.MessageDigest b(java.io.InputStream,java.lang.String,boolean)>
		SHA-256: bfe6df9208a9284e7929676d09ce048cfd9dd7a147fe2956c7577e85c421f78b
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3337)
		Method: <com.tcl.security.d.h: void <init>(java.security.KeyStore)>
		SHA-256: c967f8d148edf405c1be7df7f77acd068f87be673dbd29267f69c5a0a809bf3d
		Secure: false
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 76c60bc2370e144a83dbded7e68cd043b31c086120f0e50891fa41e274e7349c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.tcl.applock.utils.o: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 9b998f2c475f2649e82c0f266a64fa3b35b283ec2806674da72cf484dc93f510
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2968)
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 18a82d0032aef0a144384747a78d1f3bb3820e6d479881c132f471e058228df8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4364, varReplacer4365)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: 6673234f3555ab1b34b4197dc6e52df2bc5156e922ee48c816581ff582da21b8
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9211)
		Method: <com.tcl.applock.module.setting.activity.a.a: void a()>
		SHA-256: a36e5b07f3df13c019ce13f2bd2cda0a14a5458bd7f69465aeb20a6610926370
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2974)
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: e5d3b94436ce2487d3ff47f21fba865db965ec9bf23e8717ff05fb2f2e099e8
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.tcl.security.d.b: java.security.KeyStore j()>
		SHA-256: 5d509c4a113f28f7c5b9e82f7e4733bf58d6d851a57c3a6b0da31d3776bc5a52
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.a.c: java.lang.String b(java.lang.String)>
		SHA-256: 34ba3c9bb7fa93036505409e6f624148d580a4ef39cd6b74abdee3d1e3232629
		Secure: true
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 76c60bc2370e144a83dbded7e68cd043b31c086120f0e50891fa41e274e7349c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11995)
		Method: <com.tcl.security.virusengine.e.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 384b0a6d68d99742a7c7cdc8c4e47f0903a9657fd81a4de812ab9c5a60f1e169
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.intel.security.vsm.sdk.internal.ac: int[] a()>
		SHA-256: e0d4d980dc58ff92b1449131eb9d61e68fd05581868071d85a2ddf75668387c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4366)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: 2276259328440c14cf34f2e1d56b6668b710129721851f7b1cc75c7cfec18485
		Secure: true
	Object:
		Variable: r6
		Type: java.security.SecureRandom
		Statement: specialinvoke r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.applock.module.setting.activity.a.a: void a()>
		SHA-256: d37d3acea74cc3037699fbe8d63677ee3c12a81ea2fcf8482a70f00e58fe121a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.d.l: java.lang.String a(java.io.InputStream,java.lang.String,boolean)>
		SHA-256: ce625f85b73310b128d3cacb0190c94fd664f806216dc7889d93011394798ec7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.tcl.security.d.l: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 909836b55b17ca5e3de1dec96e69167ea46c29e160f8f76f281c718083694ac1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10942)
		Method: <com.facebook.a.c: java.lang.String b(java.lang.String)>
		SHA-256: 30feda8b269ea47c6d7a36b648128cbf888afa1b57ceac72dcce7794371311e
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.d.c: com.tcl.security.d.c$a a(android.content.Context,java.lang.String)>
		SHA-256: feba822e34ffde93c220acdcc7c9c9c499dd6b8f86c2e4db851379defff145b6
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.intel.security.vsm.sdk.internal.ac: int[] a()>
		SHA-256: 7419207d01a9aceba94f7f712a85550e4222470fd321a50aac3913bcefaaadb2
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tcl.applock.utils.o: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 3a8d0430ef12b42d7541a2e96ee97a209c9ac2cdcfacc835013fceae78da6fa6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3307)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 3887a70db5a937a842a3492e5c414c80174d7eff5aefe48f90b569d7179816df
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11999)
		Method: <com.tcl.security.virusengine.e.c: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: aad466addb91e7196511fa6061a00da29c604b49ac26c7d0e0f24f26cd1ca283
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: b1346c7cabbe065566ea3a40a9e0c034ff2bc49e4be3b3b07efccc9bbdd9ac5a
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4363)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: 1e3b6c665ebbe91481c68bf09882945eaad559d7c13d63be5a628110b7e4dfdd
		Secure: true

Findings in Java Class: com.tcl.security.d.l

	 in Method: java.lang.String a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #909836b55b17ca5e3de1dec96e69167ea46c29e160f8f76f281c718083694ac1)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


	 in Method: java.lang.String a(java.io.InputStream,java.lang.String,boolean)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bfe6df9208a9284e7929676d09ce048cfd9dd7a147fe2956c7577e85c421f78b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bfe6df9208a9284e7929676d09ce048cfd9dd7a147fe2956c7577e85c421f78b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <com.tcl.security.d.l: java.security.MessageDigest b(java.io.InputStream,java.lang.String,boolean)>($r0, varReplacer2218, varReplacer2219)


Findings in Java Class: com.tcl.security.d.h

	 in Method: void <init>(java.security.KeyStore)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c967f8d148edf405c1be7df7f77acd068f87be673dbd29267f69c5a0a809bf3d)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3337)


Findings in Java Class: com.tcl.security.d.b

	 in Method: void m()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c967f8d148edf405c1be7df7f77acd068f87be673dbd29267f69c5a0a809bf3d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r17.<com.tcl.security.d.h: void <init>(java.security.KeyStore)>(varReplacer2970)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c967f8d148edf405c1be7df7f77acd068f87be673dbd29267f69c5a0a809bf3d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r17.<com.tcl.security.d.h: void <init>(java.security.KeyStore)>($r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2973, r22, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2973, r22, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2969, r22, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2969, r22, $r10)


	 in Method: java.security.KeyStore j()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5d509c4a113f28f7c5b9e82f7e4733bf58d6d851a57c3a6b0da31d3776bc5a52)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r9)


Findings in Java Class: com.tcl.security.utils.d

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #7507917ff906f3d9f6130721aa85ecb8cfe2b296fa7d919a450c3fb546847287)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tcl.security.virusengine.e.c

	 in Method: java.lang.String a(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aad466addb91e7196511fa6061a00da29c604b49ac26c7d0e0f24f26cd1ca283)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r8)


Findings in Java Class: com.tcl.applockpubliclibrary.library.module.fingerprint.b

	 in Method: javax.crypto.SecretKey g()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8055)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3308, r7, varReplacer3308)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3308, r7, varReplacer3308)


Findings in Java Class: com.tcl.applock.utils.o

	 in Method: byte[] a(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9229, $r1)


Findings in Java Class: com.tcl.applock.module.setting.activity.a.a

	 in Method: void a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9212, r7, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9212, r7, $r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 33

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	TypestateError: 2
	RequiredPredicateError: 10
	IncompleteOperationError: 4
	ConstraintError: 2
=====================================================================
