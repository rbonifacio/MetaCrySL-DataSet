Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.miccron.coindetect-0A18EFBD40E9754D8F49F5BF4A3C464BA808DB5B590486A2DA64DBE95FA4E931.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.google.android.gms.measurement.internal.al: java.security.MessageDigest i(java.lang.String)>
		SHA-256: d010ce8745fd97b7c7014110f8360fd3cb1121832b9dcff8bc9f72a7c861f077
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.firebase.iid.k: java.security.KeyPair f(java.lang.String)>
		SHA-256: 980826590d0521b54435d00bc4a79fe4ffde5b163a27d515cf454b448430bea4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3303)
		Method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String a(java.security.KeyPair)>
		SHA-256: b90e2f60cc5ae36a8b1d679b59eb464ea5ca5eb295d14ba1fe2295c2b2d26694
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: 5e54d7c75072b6ee2b597c5b9413576e6ddb692cffad2f913372e9e2b04fca41
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String a(java.security.KeyPair)>
		SHA-256: faff2dfe896537840977dde25a7d06ff9f1b651542bf1908d6cec3aeb3670e21
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.firebase.iid.b: java.security.KeyPair a()>
		SHA-256: 7783709ffb59212b53ecfaa3646ac9e01977d69d48097298577a30772a4d8880
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.firebase.iid.k: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 47cb16d0125a3ffba50c8f805db479cff2a31ab7441e0911d4c6924b58b1a4a2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String a(java.security.KeyPair)>
		SHA-256: 9d8b00dbbb584308b284056ba51bfedc0e59f6d36e17482f53f9ea6977409575
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.miccron.coindetect.util.n: javax.net.ssl.SSLContext a(java.io.InputStream)>
		SHA-256: 647e7115459ebf9d25b269bb3bfdc1859c942eeeb01d76e19e2d84ff06e2343
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2462)
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: 291d311de254e6bada96b2f6d1c9a868444a68fdd086f7358ff46cfceec2e855
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3035)
		Method: <com.miccron.coindetect.util.n: javax.net.ssl.SSLContext a(java.io.InputStream)>
		SHA-256: 15a058f36f2f2f25c4afd91f5cf951ed78ac1761a5e528c9685d2c8a706f0199
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.firebase.iid.k: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 377d90c36393eda84adb5127e04aa1367521c6b95eb0e3d26d245ca5b6d08e04
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3310)
		Method: <com.google.firebase.iid.b: java.security.KeyPair a()>
		SHA-256: 7d2b3e5ba36264f28b269623326747ca43a96b3c8fc7f1784100f3b62f48972a
		Secure: true
	Object:
		Variable: $r21
		Type: byte[]
		Statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)
		Method: <com.google.android.gms.measurement.internal.bf: void e()>
		SHA-256: 5e88929c3d15edcb205b9662bd52e526ab3e568949ea4fa8f1df7e896852ca4
		Secure: true

Findings in Java Class: com.miccron.coindetect.util.n

	 in Method: javax.net.ssl.SSLContext a(java.io.InputStream)
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3033, $r7, varReplacer3033)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3033, $r7, varReplacer3033)


Findings in Java Class: com.google.android.gms.measurement.internal.bf

	 in Method: void e()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d010ce8745fd97b7c7014110f8360fd3cb1121832b9dcff8bc9f72a7c861f077)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d010ce8745fd97b7c7014110f8360fd3cb1121832b9dcff8bc9f72a7c861f077)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <com.google.android.gms.measurement.internal.al: java.security.MessageDigest i(java.lang.String)>(varReplacer224)


Findings in Java Class: com.google.android.gms.measurement.internal.al

	 in Method: java.security.MessageDigest i(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d010ce8745fd97b7c7014110f8360fd3cb1121832b9dcff8bc9f72a7c861f077)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	IncompleteOperationError: 3
	ForbiddenMethodError: 1
=====================================================================
