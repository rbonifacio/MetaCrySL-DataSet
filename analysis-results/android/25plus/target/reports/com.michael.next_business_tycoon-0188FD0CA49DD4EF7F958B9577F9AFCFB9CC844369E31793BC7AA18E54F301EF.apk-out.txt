Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.michael.next_business_tycoon-0188FD0CA49DD4EF7F958B9577F9AFCFB9CC844369E31793BC7AA18E54F301EF.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1792)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaB(java.lang.String)>
		SHA-256: f0356aaab1589d13bb6d436dceb39c0c75239f75eaf0a36b86799fc1a2c99507
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6103)
		Method: <com.onesignal.OneSignal$6: void run()>
		SHA-256: 4650ae4015d1ce1c6f7609467ec5c986f30e96dad7811648d39af6b5989bbfdf
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.onesignal.OneSignal$6: void run()>
		SHA-256: 7056f3c194fd1698056695c1282c7341414d7a575a031cf67bda141887d412c8
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: 9fe38d7b505d3f5fa87bcd08c99b13a95006ff4b41c28f78f628e529001da867
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer667)
		Method: <com.google.android.gms.internal.zzhu: java.lang.String zzgs()>
		SHA-256: 220ce902bc3365ef73b278bf659f0ae974cdc7bda4a04720ae83744f17cf6563
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: 20022840e786f1d0a6459156e7f4b644e805c191ef58fc13344d4c0eada84e56
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1878)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: 3f2672bcc9a6f7854929898eb01bd3852b24773070146f58e51e54325455c606
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r13, varReplacer1831)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: 347585d6456f51b8f2255f8f51cf36e7b66c558834eaded760f5df1b4bdfcb1d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7371)
		Method: <com.google.android.gms.internal.zzbl: java.security.MessageDigest zzcy()>
		SHA-256: 96b550355ae35522cb9bd54665af7d4c4a1a97b4577e0741b7a5ef3bb734586e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: c912c10fbdf9c59ad4f89e99034f2098742bd04a6912e7829063391bc286c150
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1884)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: 84b3fefd955576f9721abb19c7b65aa3f7e4d25ea8e39bfaa682fd2df0ab32cb
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1830)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: 77e5a6b3b5cb1db41f33a5d6edc8df96d56b79870de449cf49080aad06cc6940
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: 42a384e64bb408938f8c9fe576a79b1323be41a58ad7f0e7b735e2e73a9fb57f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6319)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 252a25fe3fd6b5e4569a75d66f375683bb475aaa8eaf1bc726001547c042824d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: varReplacer5862
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5862)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 6e715e4c11d24b32237768d67400403fe4be5f91588002e5c30f11ed8dbbd763
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: 5e80b4a04713eb9e8c1cbb18dad1e17731a9f8721749a3b3ab931c958ee2f455
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 824ba22683660c59575f402494a9b5aa5f91d72d9fe95dd6abdf94f6948ceab0
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzhu: java.lang.String zzgs()>
		SHA-256: c06730696b9a1215b14a566be4308d6e767d3095eabf8f9c146a4df4b5ecbde9
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbo: byte[] zzz(java.lang.String)>
		SHA-256: c71f37e1cbfa901a3dd9a616b1c6e43b2b97a4fa3aedad9c6a9716d0f39359d4
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaB(java.lang.String)>
		SHA-256: a50125d57950a940d5adb8877de83d25d410a06890e033182aa173de3f3544d2
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1834)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: fc7bd72412939f4ac680c078a4c82ed6430588cba878a862cbe3a83f475d85af
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 5a4ce487d3da3934d330909e15f4b82460918db06fc9ea79826feeef29fe6fe3
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5860)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: d10318e5f0aae2ba6a37bb7c3feccc310f991433af452fe2e7899b9a34d4fb4b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 57b34ea97dd082ce3816307185da5f3c24486a235eadb14d113287b38117a418
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r12, varReplacer1885)
		Method: <com.michael.next_business_tycoon.classes.ObscuredSharedPreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: b0f59f7849ddfc586eb201d194c48900eefce3e2923e6458dd6f3c6451f2739f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1768)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 5138964b3201dde757e12ee132a177f41af5b04dec4571b2cd561673c08269ef
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6354)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 92cb87f0e9e534160aad41fe2b19e518b5ed347fb2c4c9725ae500db9922636
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5862)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 70735882ac84cd9bd34a23bf62d3a3f92e8275edb09a5535066b57ee185c36d
		Secure: false

Findings in Java Class: com.michael.next_business_tycoon.classes.ObscuredSharedPreferences

	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r6)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #347585d6456f51b8f2255f8f51cf36e7b66c558834eaded760f5df1b4bdfcb1d)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r13, varReplacer1831)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r13, varReplacer1831)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #77e5a6b3b5cb1db41f33a5d6edc8df96d56b79870de449cf49080aad06cc6940)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1830)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1835, $r7, $r9)


	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r12, varReplacer1885)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #b0f59f7849ddfc586eb201d194c48900eefce3e2923e6458dd6f3c6451f2739f)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r12, varReplacer1885)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1879, $r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #84b3fefd955576f9721abb19c7b65aa3f7e4d25ea8e39bfaa682fd2df0ab32cb)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1884)


Findings in Java Class: com.onesignal.OneSignal$6

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4650ae4015d1ce1c6f7609467ec5c986f30e96dad7811648d39af6b5989bbfdf)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6103)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4650ae4015d1ce1c6f7609467ec5c986f30e96dad7811648d39af6b5989bbfdf)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r15 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #252a25fe3fd6b5e4569a75d66f375683bb475aaa8eaf1bc726001547c042824d)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6319)


Findings in Java Class: com.google.android.gms.internal.zzbm

	 in Method: java.lang.String zzA(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #96b550355ae35522cb9bd54665af7d4c4a1a97b4577e0741b7a5ef3bb734586e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbl: byte[] zzz(java.lang.String)>($r1)


	 in Method: java.lang.String zzB(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #96b550355ae35522cb9bd54665af7d4c4a1a97b4577e0741b7a5ef3bb734586e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbl: byte[] zzz(java.lang.String)>($r1)


Findings in Java Class: com.google.android.gms.internal.zzar

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5861, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5862)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1769, r5, varReplacer1769)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1769, r5, varReplacer1769)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 4
	RequiredPredicateError: 12
	ForbiddenMethodError: 2
	ConstraintError: 6
=====================================================================
