Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.militarydailyprayer-05E7C27F837F5E16C10F49D71750987BF302577F995E31F7338409FA6DA227BD.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r8, $r11)
		Method: <com.flurry.sdk.dc: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)>
		SHA-256: 6c075c2f63b5447230f82ce64ca5a2041539209c020c4511bfd375099aac0628
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <c.ᵘ: byte[] ˊ()>
		SHA-256: ea53d12dfd8fd7874036718789ca6bcce5756002470ce14b82a1597d6d041dc
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.SecretKeyFactory
		Statement: $r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer9408)
		Method: <c.ᘁ: javax.crypto.SecretKeyFactory ˋ()>
		SHA-256: 616d462a03a23a014a6d158067afa593f8e29dfb97f1d860f9be74aa5a8154e7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <c.ᘁ: javax.crypto.spec.SecretKeySpec ˊ(java.lang.String,byte[])>
		SHA-256: 4bfbbc45eccaeb86f125e9e60eb72fc37701e0d146577b757cbeed4547b5aaf4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 36ba1c4d4a21b43e8434065008241024dfe4622b0bb42c4c93bbc9c8a26a18ab
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3811)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 3d1bd6490d25feb229a812cb41cecd0dd966ea97e65a9e0f07cd4f90a41adddb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: b1475ecb277cf44c18e504f1be84657ccb3a6b602605d56eb56e04862a5c2552
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: 1a1cc63830a47172efe6cbfe44438f7887878e3b6548376813c2dd25011ed742
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)
		Method: <c.ᘁ: javax.crypto.spec.SecretKeySpec ˊ(java.lang.String,byte[])>
		SHA-256: 8c79510547349d7d3925cab6c42e555c6d004b9ea56a391689a78e3dd3ef96e9
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <c.ᵘ: byte[] ˊ()>
		SHA-256: 7f8e40a63a1948829b6b911b48f7d1e9553641a59617d4ffa40891e21ab49fb6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: cb5c85ecc670eb31cda7aafed21d7f4cf4c9816928a7898d9b23a7a6312611af
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <c.ᘁ: boolean ˋ(java.lang.String,byte[],byte[],int,java.lang.String)>
		SHA-256: 9823c8285be863dcae1be66c4ab5b1ff45f5f3be1c7cd6df497b9839448d778
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9405)
		Method: <c.ᘁ: javax.crypto.spec.SecretKeySpec ˊ(java.lang.String,byte[])>
		SHA-256: 74d2f865d52437bcb947615cea54fdf7262243a0c7ddadadce45ac331807d02d
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <c.ⁱ: void <init>(android.content.Context)>
		SHA-256: eb645922aeb5f147cd38fb71fdae923c9bc3f79331a9dd5852ab10292e4a3749
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14131)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: 9a194bc6045cf44c16cb01bd57a6cd97fb933564557eba00ca6886b5036a4c7d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15878)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: a4ec623fc11a9df9f2b049d1e08c497711868aa437f1cd413726727fe3779269
		Secure: true
	Object:
		Variable: varReplacer9405
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9405)
		Method: <c.ᘁ: javax.crypto.spec.SecretKeySpec ˊ(java.lang.String,byte[])>
		SHA-256: 6c01bb3945406cbf58aa20756beb7a1628366bd2723c375367e3528746abd86a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <c.ᘁ: boolean ˋ(java.lang.String,byte[],byte[],int,java.lang.String)>
		SHA-256: ba62e49a234449ae288cd31e7c598654bd6bd98f6bd9baa7c3de4091ec767928
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer925)
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: 1e52c27075966cbca595b0f20def5c35fb523d252a70ee93a251587c5f5957e9
		Secure: true
	Object:
		Variable: $i0
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)
		Method: <c.ᘁ: javax.crypto.spec.SecretKeySpec ˊ(java.lang.String,byte[])>
		SHA-256: 18641071b1e4a5b03a192e3133d3eb4814589b1ae244d97024b076a671a2bcc7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <c.ᘁ: byte[] ˊ(byte[])>
		SHA-256: 9a1f7c72cb17096bc5ba493481d3f9c4dab080e2175b90ceffc63c7cbf9ce822
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <c.ᘁ: void ˊ(c.ᘁ,byte[],int)>
		SHA-256: 1a2d6852fcd1cf462af9231438efb8db2e34d25fca534dc22021023566a79809
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: virtualinvoke $r8.<java.security.SecureRandom: void nextBytes(byte[])>($r9)
		Method: <c.ⁱ: void <init>(android.content.Context)>
		SHA-256: 91b71a37e913513a0abd0cd2e1332569186e78c3a079acb779102397ecc1bda4
		Secure: true

Findings in Java Class: com.flurry.sdk.dc

	 in Method: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #6c075c2f63b5447230f82ce64ca5a2041539209c020c4511bfd375099aac0628)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: virtualinvoke $r9.<java.security.DigestOutputStream: void on(boolean)>(varReplacer15975)

		ForbiddenMethodError violating CrySL rule for java.security.DigestOutputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestOutputStream
			at statement: virtualinvoke $r9.<java.security.DigestOutputStream: void on(boolean)>(varReplacer15975)


Findings in Java Class: c.ⁱ

	 in Method: void <init>(android.content.Context)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ba62e49a234449ae288cd31e7c598654bd6bd98f6bd9baa7c3de4091ec767928)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r10 = virtualinvoke $r13.<c.ᘁ: byte[] ˊ(byte[])>($r10)


Findings in Java Class: c.ᘁ

	 in Method: javax.crypto.spec.SecretKeySpec ˊ(java.lang.String,byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8c79510547349d7d3925cab6c42e555c6d004b9ea56a391689a78e3dd3ef96e9)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9405)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8c79510547349d7d3925cab6c42e555c6d004b9ea56a391689a78e3dd3ef96e9)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: boolean ˋ(java.lang.String,byte[],byte[],int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r8, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 23

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
	IncompleteOperationError: 3
	NeverTypeOfError: 1
	RequiredPredicateError: 5
=====================================================================
