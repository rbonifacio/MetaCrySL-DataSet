Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.mobidia.android.mdm-0F802C11D3D540575F931B441AB6AC458946DBB261E035E3FABEF5CB02CA4BC0.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9899)
		Method: <com.b.a.a.j: void <init>(java.security.KeyStore)>
		SHA-256: 53ce59ada157e3d5590dd7499ef82c7cc839f409fff387407fc1fea49dc86241
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2165)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: fdeb850c768fa269819936836ab05e8b345fc5a1490fcc2dcea62125b49fe317
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: db8072afebe4b7e5cf036ef9f5e83e17ea8cf5ec2bda667e613b5015e947f54f
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.leanplum.Util: com.leanplum.Util$DeviceIdInfo a(com.leanplum.Leanplum$DeviceIdMode)>
		SHA-256: 73c00de4aabbd1e30b803e43a1424eb449559342e2c534257b933ddf6f8d3d54
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 9ecaa33e86e33ff9831c13444b6f49d916db391d3317455582d3c37ae0d36a9c
		Secure: false
	Object:
		Variable: varReplacer2495
		Type: int
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2494, varReplacer2495)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 460d0cbb4e684cc102143e759993d49f88d1b651bc57d417eaca618e6da7e80f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2174)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: b096ae6bbbe264ae4d5a853bf0a014ae3384d336acd41f3e86448510829060bc
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2344)
		Method: <com.leanplum.Util: com.leanplum.Util$DeviceIdInfo a(com.leanplum.Leanplum$DeviceIdMode)>
		SHA-256: a7f6e7211d829af9a8982d8b14b6df7d08b40af80f23f3073cd309e116ab32e5
		Secure: true
	Object:
		Variable: varReplacer2489
		Type: java.lang.String
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2489)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: f3d97e3155e94c99645de2e1ace8b56a4d88d9268b5b3b5180930c481182b9fb
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PublicKey
		Statement: $r16 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.d: android.content.Intent a(android.os.Bundle,java.security.KeyPair)>
		SHA-256: c32cf731cc86df07e8311a82df7c055c94014a59b236207d9560fbb6c00d13c7
		Secure: true
	Object:
		Variable: r22
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 9de94fb3b8b644281a93e70f5ced5a864e7605e93cd7ead74732dcaed3d32d5f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8841)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String c(java.lang.String)>
		SHA-256: f14189e985bda0ba0cd7170a3a7f47b627b4e12cd7e1e2acc90843cef0a5c9cd
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: a4e4ecffbfa24945c7b9252e6e971a5919b9c0bad5744e4045419497644909c7
		Secure: true
	Object:
		Variable: r9
		Type: java.security.DigestInputStream
		Statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)
		Method: <com.leanplum.FileManager: com.leanplum.j a(java.io.InputStream)>
		SHA-256: 133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2147)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String d(java.lang.String)>
		SHA-256: fba95681ebcf71000d746a4f4723acbfd5f2130dfaa279919c7405a1cc818f5c
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: cf2b6911999dfc1b13649759f15d29c7c9209f057091e536b4e744c484308ea5
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String c(java.lang.String)>
		SHA-256: c35d0f8e06dc7b03e9338a2ac24d309418ee41bd8b012583eb87a8f286e6cbe8
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12241)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String b(java.lang.String)>
		SHA-256: 7abd663ff35367d269b708de5e8effce11ba5ffe9da424f39d59be953bf8546f
		Secure: true
	Object:
		Variable: varReplacer2181
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2180, varReplacer2181)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 59f859b87d0d618687b9b05bfa071a0c9b80e28e8528dff662bca69065dd62f5
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 71f25f831938e9eb967e3a3705806f64ed3334ce52b0e926a6edc04a1a175ed
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String d(java.lang.String)>
		SHA-256: a47d7bbddfc030a5506065a1b4bf461bc4eb178d9f8603cb0c33f5de55c0cc2
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <b.a.a.a.e.d.g: void <init>(java.security.KeyStore)>
		SHA-256: eb053316d2b8d7ceb242e95aa16f22b095c017b4428bad20c0adae5d1cac41cf
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14918)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: adf4e3101e7351b51b039e867873cdb12484a49d8d97006a38f3d0cb57a197d5
		Secure: false
	Object:
		Variable: varReplacer2174
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2174)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 48b02e219ceaf2e1df3a7978d4e16508c6d40075e4910578e3962b46e01a568c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2180, varReplacer2181)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 7a0dbf627bd1f84bcc038d08c6b7f3f52e49e595dde227537cd7c0d6811300b2
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2501)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 366ada735cd862c60d6f584c1020cd912296feb5d0cb78a09d8a6d5cc2d38187
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11295)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: f4634a538f2df2a081d53e7b99065aa7a28090d45ffc1092b2ab32a60876c150
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.b.a.a.j: java.security.KeyStore d()>
		SHA-256: a4780aba4306a23ed55bbfc3bf21f50f6e1e2a18c2604c23b61a0cedbbf2f6ca
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 7783709ffb59212b53ecfaa3646ac9e01977d69d48097298577a30772a4d8880
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2574)
		Method: <com.leanplum.FileManager: com.leanplum.j a(java.io.InputStream)>
		SHA-256: c79cb75f45dddd83667cdaa1fc109f96b2fc4136f7a05d99cc3e4bb1344c2ee9
		Secure: false
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3958)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: b3cdf09b1f8378f670a332a138b698843d3a72ca559d00b433ba1842b822cdfa
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2503)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: d3d4a31b494c0c320f646819a7e4f9556cc3b29499d6dba9c9ab1b8d22a71518
		Secure: false
	Object:
		Variable: r21
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2489)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: dca9b25fd6d929e7ba76f4de6095c48442be202acd1e1868089e89663cab009c
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9888)
		Method: <b.a.a.a.e.d.e: javax.net.ssl.SSLContext a()>
		SHA-256: 3b3e82c5310017ff0c42e6b879b92f464ffab8145fe0fd7cbd69b73cf2b235be
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String b(java.lang.String)>
		SHA-256: bb04aa38e54b764a200792b2e223d4054826ef6bf167dcd0c2fab6e0e00bf6a6
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: f69c5cf6979a6cf50e38f27dd1d1cc1741192cf076a6eaaf9073009bc2a9107e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2169)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: e53ee18360b1f59cb0e89097b6b93b3d87735200dd7609976a56df940121b9ba
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.e: java.security.KeyPair d(java.lang.String)>
		SHA-256: ba8c3bff7867b8051e37c6245c69ff5ac3d84c87fad6658b6d446b5948932f99
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 370c144343593a2f250efa941f352a4014e247d247772ee8513fb5ea08368c0d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 241276ba7fbe554c9c7e1038bdc11fbabee2cb00feeec2afeb6ea18d38d3178
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: a3d08211d3ba404e6ba4646686ff2b51d3fd8d0e847ca8bb2960c48a82e64856
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.e: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 1ce24e3d8f0119e534d3b54ae438fc33290bdd425784e6d29169a069644e0c7b
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer14934)
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 9ac017891511f14907480497acb2497f2dea5f27dce329cb0df74b0aef6b6f7a
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.e: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: e3937725b54efa2cdca665505748f1fac90b93798750264f705130372206db70
		Secure: true
	Object:
		Variable: r20
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2494, varReplacer2495)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 761e284c5cf6eb317eb5df4fc990d89939d6d73f057392865fba7c42e88f9476
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14873)
		Method: <com.leanplum.aU: javax.net.ssl.SSLSocketFactory b(com.leanplum.aU)>
		SHA-256: 69ddc59c21f143c54ebb0723330f8efd6bda909095a889775cf66cc782ac86c
		Secure: false

Findings in Java Class: com.mobidia.android.mdm.client.common.utils.j

	 in Method: byte[] a(java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7a0dbf627bd1f84bcc038d08c6b7f3f52e49e595dde227537cd7c0d6811300b2)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2189, $r6, $r9)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7a0dbf627bd1f84bcc038d08c6b7f3f52e49e595dde227537cd7c0d6811300b2)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2180, varReplacer2181)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7a0dbf627bd1f84bcc038d08c6b7f3f52e49e595dde227537cd7c0d6811300b2)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2180, varReplacer2181)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2174)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2180, varReplacer2181)


Findings in Java Class: com.leanplum.a

	 in Method: byte[] a(int,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r9, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #761e284c5cf6eb317eb5df4fc990d89939d6d73f057392865fba7c42e88f9476)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2494, varReplacer2495)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2494, varReplacer2495)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #761e284c5cf6eb317eb5df4fc990d89939d6d73f057392865fba7c42e88f9476)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2494, varReplacer2495)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #761e284c5cf6eb317eb5df4fc990d89939d6d73f057392865fba7c42e88f9476)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2494, varReplacer2495)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2489)


Findings in Java Class: com.leanplum.FileManager

	 in Method: com.leanplum.j a(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c79cb75f45dddd83667cdaa1fc109f96b2fc4136f7a05d99cc3e4bb1344c2ee9)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #adf4e3101e7351b51b039e867873cdb12484a49d8d97006a38f3d0cb57a197d5)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14918)


Findings in Java Class: com.google.android.gms.iid.d

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #f69c5cf6979a6cf50e38f27dd1d1cc1741192cf076a6eaaf9073009bc2a9107e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.b.a.a.j

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9900, r5, varReplacer9900)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9900, r5, varReplacer9900)


Findings in Java Class: b.a.a.a.e.d.g

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r9, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r9, $r10)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3959, varReplacer3959, varReplacer3959)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3959, varReplacer3959, varReplacer3959)


Findings in Java Class: b.a.a.a.e.d.e

	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9889, varReplacer9889, varReplacer9889)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9889, varReplacer9889, varReplacer9889)


Findings in Java Class: com.leanplum.aU

	 in Method: javax.net.ssl.SSLSocketFactory b(com.leanplum.aU)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14874, varReplacer14874, varReplacer14874)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14874, varReplacer14874, varReplacer14874)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 3
	NeverTypeOfError: 2
	TypestateError: 1
	ConstraintError: 4
	RequiredPredicateError: 20
=====================================================================
