Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.myaudi.mobile.assistant-0906C3FBAA2390C1F45D5B1687305C551CD36F25BA5E37D82263B199E3014A4F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8405)
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.SecretKey generateKey()>
		SHA-256: 7342a69b1b3baaecdb7d7592730a96ce986211358d6efffda3f9f203bec9916b
		Secure: true
	Object:
		Variable: varReplacer16099
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer16099)
		Method: <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key getSecretKey()>
		SHA-256: f21251bb53111d51ae89f50d3baaddbc2a25572257d0dce34b597ea2d8f5def1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8576)
		Method: <com.audi.myaudi.app.Configuration: java.lang.String hashIt(java.lang.String)>
		SHA-256: 8bcd13ff833ad8e683385d0238cd7292d3e73e0c7ecafb4217e935db7a9d0e0c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20619)
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: byte[] deobfuscate(android.content.Context,byte[])>
		SHA-256: 2c784da7ce2b38744f3c6f61dbb03f848352e9ffbe1f62bf4e6a039429dd3692
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer16099)
		Method: <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key getSecretKey()>
		SHA-256: 5b3bca1dba7eac6ef8089a7581540e6df1a5235c8e2d7acde1d4c0f6832f2fc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r12, $r11)
		Method: <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: byte[] decryptKey(byte[])>
		SHA-256: 127d206b9b1b6d31cf4153e9106e2efd0e4e92c745cce5a43531f6dc740762e2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer16085, varReplacer16086)
		Method: <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.lang.String decryptString(java.lang.String)>
		SHA-256: a35188ba73ddec386ede387854c44e79214d7250b9a61f06c2f92ac76fb2f192
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8403)
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec loadSecretKey(android.content.Context)>
		SHA-256: 157c94d95bcd7393eddc261b323c868d334822c0bb6a7b3a01e76e01780083dc
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.audi.myaudi.app.Configuration: java.lang.String hashIt(java.lang.String)>
		SHA-256: 9eea0c58860e4fa315ae57d61dca98d778f4a5170ca9d56eaca3a8a1e34ace8
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.SecretKey generateKey()>
		SHA-256: 18df61124f5b89ed0724d64d7e05a664c67385d86aceccc8aa0ae9230953aca4
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8394)
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: byte[] obfuscate(android.content.Context,byte[])>
		SHA-256: 2bbc4af0663486927826d587659089b30a408b0e65807e460dfb9aa5991b8cd4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.SecretKey generateKey()>
		SHA-256: f23538cab144e822db0faff7a30f3ea170b463adf495cfecf34c5858bf958067
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec loadSecretKey(android.content.Context)>
		SHA-256: 27a13f69ba1a651964d6d88114aefa9335b9ba94a490dbaa99e037d6eec39693
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: byte[] obfuscate(android.content.Context,byte[])>
		SHA-256: 47c6cecd626f97c9d411b6e15dd7478214d02d36d92b6c11237ed38d0c457054
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.lang.String decryptString(java.lang.String)>
		SHA-256: 337d81481faebec0c48c9a2ff23ad2833754a0d24ef7920673c083bbdf1aa47c
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16103)
		Method: <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: byte[] decryptKey(byte[])>
		SHA-256: 8af905472fe982a2cf3361f4ecfa257388297158b6a82c0d0a6580be621f39b4
		Secure: false
	Object:
		Variable: varReplacer8403
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8403)
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: javax.crypto.spec.SecretKeySpec loadSecretKey(android.content.Context)>
		SHA-256: 5cf39abf54bd7dea5017b949b2dc775ec3c45056ca4171e976b23cadbfdef99b
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer16113)
		Method: <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: void <init>()>
		SHA-256: e6987c7e8216168b706335d503609f8ea79e5f0034fa5c9cd7e7d0d0694fa48
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.audi.myaudi.app.Configuration: java.lang.String hashIt(java.lang.String)>
		SHA-256: 2d1e8b76e369240ae0907251c86cc92dd26e0101b792ac559c39ad886714ea02
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3514)
		Method: <com.adobe.adms.measurement.ADMS_MeasurementBase: void setupDefaults()>
		SHA-256: 317b9598d47f31604cd9d55973daff2d0054429de76f7d1bb897e61e27d5ca30
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.audi.myaudi.app.encrypt.Obfuscator: byte[] deobfuscate(android.content.Context,byte[])>
		SHA-256: cf1e340b4772e5101741bea58bfe971c5ae957516e0da5fe4ae15ecca1fb9d75
		Secure: false

Findings in Java Class: com.audi.myaudi.app.encrypt.Obfuscator

	 in Method: byte[] obfuscate(android.content.Context,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2bbc4af0663486927826d587659089b30a408b0e65807e460dfb9aa5991b8cd4)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8394)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2bbc4af0663486927826d587659089b30a408b0e65807e460dfb9aa5991b8cd4)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8394)


	 in Method: byte[] deobfuscate(android.content.Context,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2c784da7ce2b38744f3c6f61dbb03f848352e9ffbe1f62bf4e6a039429dd3692)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20619)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20618, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2c784da7ce2b38744f3c6f61dbb03f848352e9ffbe1f62bf4e6a039429dd3692)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20619)


Findings in Java Class: com.audi.myaudi.app.Configuration

	 in Method: java.lang.String hashIt(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8bcd13ff833ad8e683385d0238cd7292d3e73e0c7ecafb4217e935db7a9d0e0c)
			First parameter (with value "sha256") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8576)


Findings in Java Class: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider

	 in Method: java.lang.String decryptString(java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a35188ba73ddec386ede387854c44e79214d7250b9a61f06c2f92ac76fb2f192)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer16087, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer16087, $r5)


	 in Method: byte[] decryptKey(byte[])
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #e6987c7e8216168b706335d503609f8ea79e5f0034fa5c9cd7e7d0d0694fa48)
			Unexpected call to method getEntry on object of type java.security.KeyStore. Expect a call to one of the following methods getKey
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r6, varReplacer16105)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #127d206b9b1b6d31cf4153e9106e2efd0e4e92c745cce5a43531f6dc740762e2)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), close, java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = virtualinvoke $r2.<javax.crypto.CipherInputStream: int read()>()

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #8af905472fe982a2cf3361f4ecfa257388297158b6a82c0d0a6580be621f39b4)
			Unexpected call to method <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)> on object of type javax.crypto.Cipher. Expect a call to one of the following methods javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider),javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String),javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)
			at statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16103)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #8af905472fe982a2cf3361f4ecfa257388297158b6a82c0d0a6580be621f39b4)
			Unexpected call to method init on object of type javax.crypto.Cipher. Expect a call to one of the following methods getInstance
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer16104, $r10)


	 in Method: java.security.Key getSecretKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer16099)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	IncompleteOperationError: 1
	RequiredPredicateError: 3
	TypestateError: 4
=====================================================================
