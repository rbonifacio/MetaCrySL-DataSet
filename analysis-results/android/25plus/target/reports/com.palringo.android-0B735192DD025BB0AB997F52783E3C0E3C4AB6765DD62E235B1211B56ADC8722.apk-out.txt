Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.palringo.android-0B735192DD025BB0AB997F52783E3C0E3C4AB6765DD62E235B1211B56ADC8722.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.palringo.android.util.by: byte[] a(byte[],byte[])>
		SHA-256: cb970cb77be7e84aecb0546a2302655cf7ac2ab2b71dcea6fe60e216efc51384
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <b.b.b: void <init>(b.ak,b.as)>
		SHA-256: 1b0a43487cf53147814bbadf7571d0f41725654f6363842d88baca73e195e65c
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2815)
		Method: <com.palringo.android.base.e.a: javax.crypto.SecretKey a(java.lang.String,byte[],int,java.lang.String)>
		SHA-256: e72073ee8bf85bc2c9035df7d67bf21de3acdb2c4412f6869001ddf1c2b59576
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.palringo.android.base.e.a: javax.crypto.SecretKey a(java.lang.String,byte[],int,java.lang.String)>
		SHA-256: a498e5bbe9ad19786795370293c8123853a48f595c976b6c0f9b840021d92e36
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1961)
		Method: <com.deltadna.android.sdk.a.d: byte[] a(byte[],int,int)>
		SHA-256: ff90b9738751f61f55bd3163e3cd9c5472108633686306418025b31a2e33ebae
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.palringo.android.util.by: byte[] b(byte[])>
		SHA-256: b0777d852def8683bc7370285d0befd0689d63c04a599b48de2802425bfb4d46
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.palringo.android.base.e.b: void a(java.lang.String)>
		SHA-256: a73a880317d977af8c849200afce0d59461a8a4f7c8e311ba6e8a76374ce1041
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1806)
		Method: <com.palringo.android.util.by: byte[] a(byte[],byte[])>
		SHA-256: db79d64dd835a3fb61ebcd854b6735811010f5cea5b810b695f97cc865758a42
		Secure: false
	Object:
		Variable: r11
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r11.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r1, varReplacer2810)
		Method: <com.palringo.android.base.e.a: javax.crypto.Cipher a(javax.crypto.SecretKey,int,byte[],int)>
		SHA-256: e49b699eb1412626b578b5b3554f8ebcff6ff760007a3e1a5cc14c50e8ad1d5
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4846)
		Method: <net.hockeyapp.android.a: void d(android.content.Context)>
		SHA-256: fe3fd6f8105212c16ee49b134670f1577e73c5355419755e0bc50459cae278ba
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1809)
		Method: <com.palringo.android.util.by: byte[] b(byte[])>
		SHA-256: 33b0e2e3b9391dda43af8b9a50e7b8f13979ab3e534271623cc96e4825a1ade
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.deltadna.android.sdk.a.d: byte[] a(byte[],int,int)>
		SHA-256: 40994c5c62a2939a6203497716434df31caaf7367e749f9d6ff943a5690f90ea
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String a(java.lang.String)>
		SHA-256: 50e510f561c210a77b1015ef5ace6f545cfb0057cf884e0ca6deb88d584c9d17
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12095)
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String a(java.lang.String)>
		SHA-256: d84e758214c291f723c88910a50b2146d1687627a25b3824dbc990df9f60a15f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4853)
		Method: <net.hockeyapp.android.a: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: 612e4e1c02bdcc94b1464f25f0787620e2935f63032c4926b9d3a82218016cb6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.palringo.android.base.e.a: javax.crypto.Cipher a(javax.crypto.SecretKey,int,byte[],int)>
		SHA-256: 1631cdd3488dadc6a0eb48cabe71b1dfecab904f7794a79dcdc36db57acb7632
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1805)
		Method: <com.palringo.android.util.by: byte[] a(byte[],byte[])>
		SHA-256: 83b3ee9f542d7f30ab3d69591cd17a3649ef345347df03dcb33585c732df1485
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.a: void d(android.content.Context)>
		SHA-256: 616ff77bb4a4a07b5d8a7a50be528c2cb6e2eebd7fcc40ad1ff1df725d7dd9f2
		Secure: true
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4683)
		Method: <b.ak: void <init>(b.am)>
		SHA-256: efde361267a7ae9a85d78cbaa9e9a8b68391b96659757cc40542a103ef3c32bc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15290)
		Method: <b.a.o: java.lang.String a(java.lang.String)>
		SHA-256: f92836d42aaa67a5a932be8deac26bfd398b668e4e0b40ecb173eae357cb6db1
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: virtualinvoke $r3.<java.util.Random: void nextBytes(byte[])>($r8)
		Method: <b.b.b: void <init>(b.ak,b.as,java.util.Random)>
		SHA-256: 44038a63f46feb9dc1624a682fa13f8cd0b113347be2afd519fe81de22b07087
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.palringo.android.util.by: byte[] a(byte[],byte[])>
		SHA-256: 466c360e393044352d09cb02d065db5351f65432c8e81edb6e5028a60d847992
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.a.o: java.lang.String a(java.lang.String)>
		SHA-256: acda6d00e6d7c8bd95ce4103ea2444534c57c44135882f6740a39a37032a030a
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.palringo.android.base.e.a: java.lang.String a(java.lang.String,byte[],java.lang.String,java.lang.String)>
		SHA-256: f0234ceda7dbaa51362ab0623ddf4d645073b22242e175c3a6474a1a5be37c0c
		Secure: false
	Object:
		Variable: varReplacer1805
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1805)
		Method: <com.palringo.android.util.by: byte[] a(byte[],byte[])>
		SHA-256: 8bb7206f894790f6605b0c5878dfa4e7d41b5bf83cb762cbf8277a752425b396
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.a.o: c.j a(c.j)>
		SHA-256: acda6d00e6d7c8bd95ce4103ea2444534c57c44135882f6740a39a37032a030a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15895)
		Method: <b.a.o: c.j a(c.j)>
		SHA-256: 3bed77f7a913fa0ca10e15dbf34dd558de190e86774ae6bcd1303b7f33cdacad
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1807, varReplacer1808)
		Method: <com.palringo.android.util.by: byte[] b(byte[])>
		SHA-256: 94ad39632a3ee7af1cd3c158fcbc0413855214ef280d6ce4fdeb892a055c6da2
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.a: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: 5e54d7c75072b6ee2b597c5b9413576e6ddb692cffad2f913372e9e2b04fca41
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11026)
		Method: <com.palringo.android.base.e.b: void a(java.lang.String)>
		SHA-256: 51093324b4f0a4a5d58c2dfbbb7d52c33bac8de3662b3dc910bd3486ab143462
		Secure: true

Findings in Java Class: com.palringo.android.base.e.a

	 in Method: javax.crypto.SecretKey a(java.lang.String,byte[],int,java.lang.String)
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[],byte[],int) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>($r4, $r1, varReplacer2819)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: java.lang.String a(java.lang.String,byte[],java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1631cdd3488dadc6a0eb48cabe71b1dfecab904f7794a79dcdc36db57acb7632)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r5 = staticinvoke <com.palringo.android.base.e.a: javax.crypto.Cipher a(javax.crypto.SecretKey,int,byte[],int)>($r4, varReplacer2800, $r1, varReplacer2801)


	 in Method: javax.crypto.Cipher a(javax.crypto.SecretKey,int,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r11.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r1, varReplacer2810)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #e49b699eb1412626b578b5b3554f8ebcff6ff760007a3e1a5cc14c50e8ad1d5)
			Second parameter (with value 200)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r11.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r1, varReplacer2810)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2811, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2811, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2811, $r0, $r4)


Findings in Java Class: com.palringo.android.util.by

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1804, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #db79d64dd835a3fb61ebcd854b6735811010f5cea5b810b695f97cc865758a42)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1806)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #db79d64dd835a3fb61ebcd854b6735811010f5cea5b810b695f97cc865758a42)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1806)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1805)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1810, $r2)


Findings in Java Class: b.ak

	 in Method: void <init>(b.am)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4684, varReplacer4684, varReplacer4684)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4684, varReplacer4684, varReplacer4684)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 10
	ConstraintError: 3
	IncompleteOperationError: 1
	ForbiddenMethodError: 1
=====================================================================
