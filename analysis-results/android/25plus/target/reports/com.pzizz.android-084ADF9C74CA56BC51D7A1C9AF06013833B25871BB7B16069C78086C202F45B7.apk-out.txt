Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.pzizz.android-084ADF9C74CA56BC51D7A1C9AF06013833B25871BB7B16069C78086C202F45B7.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1802)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: 39db6643cc8a1935ea6d94808087e2f501cea82640a872527498a985c0d05dc0
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1836)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: 9a83a22da2d78405e6cd3cbd09f4c45e3c2e07c6a06e65b619476f7b8e568818
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: a69da9772a3fe20a5b8a3da2d965798565bf108a402900bc7d0bfacd6bdeddbf
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 1f15fdcda9b923b07ad2fb0fff591155d212c798860f8dee84a8c357e9a78696
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2210)
		Method: <com.mixpanel.android.util.ImageStore: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)>
		SHA-256: 90e0fd02dea36e3a3df9a9bf78418b0f8e2161b8723796b8e570d053f13cf669
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1833)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: 5361358c6a1385c0d52697e9bc391c6e51dceee0b4e915fbbd1780f424f10488
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: a34e20962c91ca958dc98705cf9ed3568965045deb9f4c84cb0863d5d67b5210
		Secure: false
	Object:
		Variable: varReplacer1805
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1805)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: cd509b8ff2d2a40bdbbbe6bec755f7ca7f1b70dd0bfe6b5e093dfcfa1fb77107
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2097)
		Method: <com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>
		SHA-256: 3a2837d16fc601dbc169810fdf7282310c925b3c2564d0ddb4c7a0f165472ceb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1826)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 2d78c16b0c3b297f260cd022aa4ba5b98583e526d5b5bd33893f7c2c59563c00
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1182)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: eec50b745acfeac8166dbe1d82df121a7b43f122e6565c3d8279e1bbb3ea749
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1828)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 104d6a0dfa13d8373b55abfb8fc1429bf83e33be98496f0c2d1e81b4a17a22e0
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1173)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 1c628572cd29a2ec61269b652832fe41e1fe31632cf3a4f11d68645ffded64af
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1805)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: 6f9fbb8b029239f56762b085007fd4c9648831ba59773d7d9d9eae8be1b3fcae
		Secure: false
	Object:
		Variable: varReplacer1833
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1833)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: df2007dd1a042b9570961330309486e0a851fa16ffbe45024e567027af2d68a1
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 39aadb73d0e9a32b92f425a1e4e292cb18454b7a893a2e3ad4134eca36da1976
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 378fa10e2a093566e279e3caa5291b78b286b80ed5f1ca63b77d687cf94072a1
		Secure: true

Findings in Java Class: com.pzizz.android.backend.SneakyModulePurchaseManager

	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1805)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1804, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #39db6643cc8a1935ea6d94808087e2f501cea82640a872527498a985c0d05dc0)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1802)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #39db6643cc8a1935ea6d94808087e2f501cea82640a872527498a985c0d05dc0)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1802)


	 in Method: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9a83a22da2d78405e6cd3cbd09f4c45e3c2e07c6a06e65b619476f7b8e568818)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1836)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9a83a22da2d78405e6cd3cbd09f4c45e3c2e07c6a06e65b619476f7b8e568818)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1836)


Findings in Java Class: com.mixpanel.android.util.ImageStore

	 in Method: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #90e0fd02dea36e3a3df9a9bf78418b0f8e2161b8723796b8e570d053f13cf669)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2210)


Findings in Java Class: com.mixpanel.android.mpmetrics.MixpanelAPI

	 in Method: void <init>(android.content.Context,java.util.concurrent.Future,java.lang.String,com.mixpanel.android.mpmetrics.MPConfig)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #90e0fd02dea36e3a3df9a9bf78418b0f8e2161b8723796b8e570d053f13cf669)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r7.<com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.MixpanelAPI$1)>($r0, varReplacer2168)


Findings in Java Class: com.mixpanel.android.mpmetrics.AnalyticsMessages

	 in Method: void <init>(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #90e0fd02dea36e3a3df9a9bf78418b0f8e2161b8723796b8e570d053f13cf669)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker createWorker()>()


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, $r8)


Findings in Java Class: com.mixpanel.android.mpmetrics.MPConfig

	 in Method: void <init>(android.os.Bundle,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2069, varReplacer2069, varReplacer2069)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2069, varReplacer2069, varReplacer2069)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1183, r5, varReplacer1183)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1183, r5, varReplacer1183)


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1170, varReplacer1170, varReplacer1170)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1170, varReplacer1170, varReplacer1170)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	IncompleteOperationError: 2
	RequiredPredicateError: 10
=====================================================================
