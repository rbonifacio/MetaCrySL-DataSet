Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.qranio.bqranio-114B881D5321D90A9AB1E6C4C570313328191CEF5D91BE3232A3A641171EE4B3.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11006)
		Method: <crittercism.android.da: java.lang.String a(java.lang.String)>
		SHA-256: d2d5da65adf73c24f54cc64077ad9f21a0a6ac54f6119f1439b3e41921aee33b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10771)
		Method: <com.qranio.util.Security: java.lang.String decrypt(java.lang.String)>
		SHA-256: da1228654967f7d56c8b7ce9b77e0c9f01efda02a4d46df2977d3d02cad7bbd5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer13831)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: c3341f894ee299ad9747274576fc12808bb2c7e95f27c46d3741069097ba4811
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.qranio.webserviceconnect.Security: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: 1be05182ec330625056542a313cb41901830cf37581d91b17c13cf3eb07684a4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15553)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 9fee66d8991bd5e68cf30452220a142f7c73f1f7c3c856d0add84c750a24eadb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16099)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String shaBase64(java.lang.String)>
		SHA-256: 371db647e4ac27a02ce6fbd321451a6c81c1c1359fa76df6a3422336866019b7
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer8837)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: d8042768dbcc5274d2cb7b64d8647b3a68081b198318975224ee13133554eb07
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10774)
		Method: <com.qranio.util.Security: java.security.Key generateKey()>
		SHA-256: 9e3cfb4316584e432a3848a535a347280413889b1c5d31220817bc91ffd542d3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17043)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: de31e31a841b62e7823c53b3b96a1c7f69f9986a2ae9bb4a54e81c73a4f66498
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11852)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: ac8d027d106120791a833ce175a5769c6c10de1d2c2bc363bd50180dd6d61a69
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.qranio.util.Security: java.lang.String decrypt(java.lang.String)>
		SHA-256: e406d6c161b7cb5f8bd5c05683d11dd35d9cffd56cc5a555c42ebb90acdb170c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: varReplacer13831
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer13831)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: a0e73ebc4a23f4c8efc6f2add2454f3316ad72d736f1aa95adc338aa79c3bc02
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 43a35377bfb25a758eae159694ac09d24d8c3d5d84e510d0079c959e8fdcb063
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 7fca8a799bc6062cb3f0d85d50c9a7042244d50e0849feff92df6616f699e872
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8836)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 6028c84724f1c8f44fffe0b75c67117b6fba235280bb78fe459f90d491323e7e
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer13827)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: b702b27981f49ed8d34493393589de0c3de36e89b262f4e413d462678c09b0c6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: 5c31efb8beb779517a7f291168d3912335afc0c4abe67c9d32ed8797b2e7c24a
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10313)
		Method: <crittercism.android.y: java.security.Provider a()>
		SHA-256: a09dbfff418d80e167a5c3828fd1c2b3db6e7c840d165aab9817b8afc7a013b2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String shaBase64(java.lang.String)>
		SHA-256: 7e4c598fefb2cc0aa59230e140959cfefafbdf41dc1e16cb0f02ba069289e752
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.util.Random: void nextBytes(byte[])>($r2)
		Method: <com.squareup.okhttp.ws.WebSocketCall: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,java.util.Random)>
		SHA-256: 5fd49c807860cbf1852f0291c01998409f82892e207cf76802dc130126a4dbbe
		Secure: true
	Object:
		Variable: varReplacer8837
		Type: java.lang.String
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer8837)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 203c17e897bf61f55ce040a9b81ff8b6dbf987ec5776951af68bb0b95509a5ab
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7087)
		Method: <com.qranio.webserviceconnect.Security$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: cbc87aa776a6434ad0515a9633f3924f29a4f4445bf5d2c6c9bad1fd2a1f554c
		Secure: false
	Object:
		Variable: varReplacer10774
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10774)
		Method: <com.qranio.util.Security: java.security.Key generateKey()>
		SHA-256: fe9dd1f4283b87b480ab7ffbcf849427e1765a30d6fe262f872fedbbfc41638e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <crittercism.android.da: java.lang.String a(java.lang.String)>
		SHA-256: a8d5f990f480129ebcd9dabf20cc87a7e6dbbf1c3faf732ccff9c89b10b2fdef
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.squareup.okhttp.ws.WebSocketCall: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request)>
		SHA-256: 4b382ab64325a502c3d2d40fdfd66a1acd7d9c126f7523417345f0ebe57f6ee2
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: d04a34131442e6215abf536c38358ba5d3ff2845ebd3a37286f3009aca967eb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15906)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 7d56c6bba28c8bf6e1c85ab7e6f79a8962565d58c9b90b0efd7150d6f2aff6b5
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 2feca76bc0b1f633b0e7445d33ac9d4f4a9606eb32af76fd1505f1fb038c4fdc
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: b832aa670c828e2ede739dc34ac5c16bb43a49eaa1e85346ac40adef288109f1
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 36ba1c4d4a21b43e8434065008241024dfe4622b0bb42c4c93bbc9c8a26a18ab
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.localytics.android.AnalyticsHandler: void _updateHeaderForTestModeAttribution(java.lang.String,org.json.JSONObject,com.localytics.android.DatapointHelper$AdvertisingInfo,boolean)>
		SHA-256: c01b882ce9f8e5ef324c3b8d9131b55c7fa50a59a239ef9df76a0b4774ff7d4c
		Secure: true

Findings in Java Class: crittercism.android.y

	 in Method: java.security.Provider a()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a09dbfff418d80e167a5c3828fd1c2b3db6e7c840d165aab9817b8afc7a013b2)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10313)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a09dbfff418d80e167a5c3828fd1c2b3db6e7c840d165aab9817b8afc7a013b2)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r0.<javax.net.ssl.SSLContext: java.security.Provider getProvider()>()


Findings in Java Class: com.qranio.util.Security

	 in Method: java.lang.String decrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #da1228654967f7d56c8b7ce9b77e0c9f01efda02a4d46df2977d3d02cad7bbd5)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10771)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10772, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #da1228654967f7d56c8b7ce9b77e0c9f01efda02a4d46df2977d3d02cad7bbd5)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10771)


	 in Method: java.security.Key generateKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10774)


Findings in Java Class: com.sromku.simple.fb.utils.Utils

	 in Method: java.lang.String encode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer13831)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15550, varReplacer15550, varReplacer15550)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15550, varReplacer15550, varReplacer15550)


Findings in Java Class: com.qranio.webserviceconnect.Security$MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7085, r5, varReplacer7085)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7085, r5, varReplacer7085)


Findings in Java Class: com.qranio.webserviceconnect.WSUtils

	 in Method: java.lang.String getWSHash(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer8837)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 2
	RequiredPredicateError: 8
=====================================================================
