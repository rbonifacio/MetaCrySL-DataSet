Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.radio.station.WRVR.FM-14431EB961D6C88651D422BF6FE4E4FBAA0A6018E1112134BD4E5A727C92957F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nielsen.app.nuid.AppNuid: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9e96d6ab2dcbad8864c460e02a4f4b1fb403d49331e63c421caad4a32b5b90b2
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: d46c95533590153b624a6e80bdf1220eedd0892cc8e665b5ffdc7b6ab899f0a9
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1284)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 239f277a75fd8ba33395efea9ca1ca896b640a83c31c3cd38f4136e9841f1d29
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: b1475ecb277cf44c18e504f1be84657ccb3a6b602605d56eb56e04862a5c2552
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Cipher
		Statement: $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9705)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: f4aed1619669a16dc924fa2deeacfc7c965d4f5fb618cb02e46963b07d4ad8f3
		Secure: false
	Object:
		Variable: varReplacer3856
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer3856)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 364c8272ac4b30cc953dfce18d23eed6b0a401641bece5ade13a95b3477d1523
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 6b9b525b007c7fb5fa18f190271a394669ab7f53f62abdcf4d4a6da8910369fc
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3851)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 79fc863581649d0f7d2962254456a7aaff3ff737c50e34530435d69cde1064d4
		Secure: true
	Object:
		Variable: r62
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer9757)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 473df3c79f14e4e97986db700c69c3a3514bb058374f6db5ddf1165b58b881b6
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3704, $i0, varReplacer3705)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 2e9b56253e0cb694634bbb5565cfa63a692dfa409a8611dbaad53a7121b0a8dd
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 3b1433a56fc2a601eab847c9e0a83d51ac703a70d2cc28f41e56abe456875171
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 6b9b525b007c7fb5fa18f190271a394669ab7f53f62abdcf4d4a6da8910369fc
		Secure: false
	Object:
		Variable: varReplacer3697
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer3697)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 6c13ea2c7eb2039ab81740ed463ff922d52245e5068d75d4ece0bafc55c14449
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: f35dc12c56d152e6c31ac584b3069d4a668fd44bb0ebc9c820d266f938d614d1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3441)
		Method: <com.nielsen.app.sdk.k: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d358aa426dc1c82332982e5327a3780b64e21933c86c31f01f4fccd76dd38e2c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6688)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: f7d4bc7ac866917b40ed61895b2c2343d6db130a6ee4006f9969b6eaaa192f5f
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = interfaceinvoke $r10.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 7394cd3202e1c43fc7fffb4516ad6ee015a1df5079f4af5bf3c4b682405e31de
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: a305d6e410284860ef5a0feaf85b69ddb063ba2e1d58f03639330c6977b4d3f9
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e87af06d8fb6c7e96dcb23128dca6a747933186aad4e69028d6372068e638d35
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Key
		Statement: $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer9721, $r8)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: b7a09c2bc9d72fb2c1841abd4f0e7dfb22fd197e712f8686751ebc1bf4879077
		Secure: false
	Object:
		Variable: varReplacer3705
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3704, $i0, varReplacer3705)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 944b1a9dcf310e63e8211fc567e5a8e86b40e4e76581bde809bca25a77db7660
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r11)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 1c0020d3fb70c2baa6e9d6e8f23073be9899449952a2944613639bc6b6104ae4
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: c48f8e476b7b2837d2bf724f233951604a7661f55ab3a3713661f09d99e4bc9f
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 3b1433a56fc2a601eab847c9e0a83d51ac703a70d2cc28f41e56abe456875171
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: ac7398f1264eb13e0b3c8ab4f9ac9a7bd15568cf473aef7fb9e22e1163b0cbc9
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e87af06d8fb6c7e96dcb23128dca6a747933186aad4e69028d6372068e638d35
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: c48f8e476b7b2837d2bf724f233951604a7661f55ab3a3713661f09d99e4bc9f
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer3697)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 8fec1d8c5eacd72673273c6e703d7c6831452f0c80f3746516ba005edd40f583
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.KeyGenerator
		Statement: $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3848)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: c455a2f790485bfdea4bbf4b532f770f829ccebec1c94a607ceb25940f01ea67
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 2feca76bc0b1f633b0e7445d33ac9d4f4a9606eb32af76fd1505f1fb038c4fdc
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: b5ab2245a188792f7b550e6182ac388ed5e10fe00f3a3a4aa1f6384f07e41d7e
		Secure: true
	Object:
		Variable: $r17
		Type: javax.crypto.KeyGenerator
		Statement: $r17 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9773)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 2335d091bddc57694e35a0575f77d2cd60f3022a679aa2a9cd9ce04e337ce66e
		Secure: true
	Object:
		Variable: r61
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 4c82dce21c60bd48931284d8f86f0209c37debc663aefe6acccbb48c3b685af0
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3835, $i0, varReplacer3836)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 75eaa003a0baecc87f19781ff79c0ccbcdd5d1e0b8800a97870d9c725bb67fcd
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: a305d6e410284860ef5a0feaf85b69ddb063ba2e1d58f03639330c6977b4d3f9
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9753)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: e904d8cf95df90c41c5384f04456e0609782f2d7b22b89c0b74be8a0ffc1aead
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 223ae1f4b6474cfcf28fce1bbcb594159b124d1cfd6f0f99aa382524a8b2d388
		Secure: true
	Object:
		Variable: r62
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9807, $i1, varReplacer9808)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 4f858a0f93386e413e1e8b66bb9f8bc90acee8f48c2446540cf222d868e0f8ea
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3715)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 168303fa8e300942324c31d14de1ff452d3cea969c2bf1b8719350bc134ca5aa
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3693)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer894)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: eb82b16ba8220c82872744c14984697d5040815756be66a1e66f591b4ddf92d1
		Secure: true
	Object:
		Variable: varReplacer9808
		Type: java.lang.String
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9807, $i1, varReplacer9808)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: b836a2f47e039cd06e5ad5ee16e0f9ab06d7733593dccd35464c0e3c60777ee1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4226)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: c89f503d99b2a4a42327cbdc9a705a8409bb118e5a3d0dd715fff03084007f49
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3854)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: cded189ecbe9f5d628814ba12b2edfd7df2de0590442c929a9976f1ab65c3c2a
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Key
		Statement: $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer9725, $r8)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 11bfc940cecf96c234481c52b26a8cb321db5a5864432d4f58ac1faa1a60876b
		Secure: false
	Object:
		Variable: r61
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 4c82dce21c60bd48931284d8f86f0209c37debc663aefe6acccbb48c3b685af0
		Secure: false
	Object:
		Variable: varReplacer3836
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3835, $i0, varReplacer3836)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: fd9895bf1041831d743256cbbee2231f242226ec3fd88b38f00fbf53874f2ecc
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r10 = virtualinvoke $r17.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 8836fe1dc9cf09609882e676a853d2fc914a942529160e2899ca9733b81fe07
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10364)
		Method: <com.nielsen.app.nuid.AppNuid: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d1c4c493b744cc2edc5637a8fd5fa68e3b14b4ce8c3835b94db5471e6b2e72d2
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer3856)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: e758831819cd16388753a0607d1daa4e1157353dd9875f36cbbe2a7a5670be1b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nielsen.app.sdk.k: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e26b74913e8b4fea91a9c66dcd6a0102a88d2fd644bec0e6a2ca11257bdb70b9
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.KeyGenerator
		Statement: $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3696)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 95fcd1066e59fb86024b1b7cf9215da2b05231a38d14ce77865d9bfdd1dc56e7
		Secure: true
	Object:
		Variable: varReplacer9757
		Type: java.lang.String
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer9757)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: aa1825a861448b5817187bfec317c5862ed735c3b5a0cc0965a770d7aa920424
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.localytics.android.AnalyticsHandler: void _updateHeaderForTestModeAttribution(java.lang.String,org.json.JSONObject,com.localytics.android.DatapointHelper$AdvertisingInfo,boolean)>
		SHA-256: c01b882ce9f8e5ef324c3b8d9131b55c7fa50a59a239ef9df76a0b4774ff7d4c
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 8f38c9bd4e17e89b7d9d1628eac13e332b81502b2a05a4e7126ad5a702e80bad
		Secure: true

Findings in Java Class: com.nielsen.app.nuid.a

	 in Method: boolean a()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Unexpected call to method getInstance on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3693)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3704, $i0, varReplacer3705)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods load
			at statement: virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3704, $i0, varReplacer3705)


	 in Method: byte[] b(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.nielsen.app.nuid.AppNuid

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r6.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10332, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = $r0.<com.nielsen.app.nuid.AppNuid: com.nielsen.app.nuid.b p>


	 in Method: void startQuery(boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10305, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10324, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10303, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ff8564e5cbde0a82afd78e69b58627ce69ab7a0b73e309512f188ca1448cef51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer10294, $r3)


Findings in Java Class: com.nielsen.app.sdk.c

	 in Method: boolean a()
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3835, $i0, varReplacer3836)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer3856)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3865, $r15)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6)
			Unexpected call to method getInstance on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer3835, $i0, varReplacer3836)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)


Findings in Java Class: com.nielsen.app.sdk.AppLaunchMeasurementManager

	 in Method: byte[] a(byte[],int)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r3.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r20, $r8)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9807, $i1, varReplacer9808)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9714, $r15, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer9736, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9714, $r15, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9807, $i1, varReplacer9808)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 60

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
	ImpreciseValueExtractionError: 3
	TypestateError: 6
	NeverTypeOfError: 3
	IncompleteOperationError: 6
=====================================================================
