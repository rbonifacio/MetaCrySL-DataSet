Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.senseu.app-0B1E93A0575E010E4E46F5AB55C7F7E23C4CE8361F72117D6C045EB11ECF187B.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: af73d191f04fe76a3c80ddd9c6d7afb7b255a38fa62b970666b8234f23f01145
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.tencent.open.utils.HttpUtils: org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 20492e4fb32e47e28a7ead4d25141df0a45263484a75ab23a7f3a5178dcc300c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9783)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: a3acc3b25754dc73fc1ef19ffbc191e93d4ee2b8cc46e028f344e98e095b8f6
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3969)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 535ec8bd7edbe61878970313948f87ba1f44e8511b094dd9f39e254fdf820858
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore.util.af: byte[] e(java.lang.String)>
		SHA-256: 92b4774bded19ea50d02608588a010229f25214f28a8e9a0b442768cebd56e74
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.amap.api.mapcore.util.aa: java.lang.String d(android.content.Context)>
		SHA-256: f56c0243c3796e54442631f6acf94acbd3f2395f621144e36b05234a4bcbdd81
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3971)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: be71346d591ea563a9a87ffeadb1cd30e3485a7467bddcc75144ef349c6c66d5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3888)
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: cb4c1eb645463c2e8f3cbeb23c9551aeba95552953bb38c8bfbcc7463ba75815
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8077)
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: c0e5053985b5d3493e566b3fce98352cd1c0f4fa8010c417b2fec91227fe419c
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 206b4963140b17abac96861a36b9d2bee2e80bfd0be442b7244586e8f24c8e25
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8333)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 728bc9b46dbf5c5c1b4823cb7edab5dfb3ae9ac756076a87918794dd6c3b7a31
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9893)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: f0ec8996558e3848210b7b8d8b89bff1b9b282742a1254fb0c9792b5c01aa091
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3897)
		Method: <com.amap.api.mapcore.util.aa: java.lang.String d(android.content.Context)>
		SHA-256: 5a6c8632a57f2d9ec998b0e61c98924a7d8cefdd3dad53ade70b8e01a8c53e6e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 9f2ecbcf0ee8886570e73aedaf73524fe8fadcea7811ef0d9ef99da1547b845b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3739)
		Method: <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>
		SHA-256: 4405fb05ee181655ee3ab8e80a7f5f0c2aee773b263c7fa1b9c56c737133baa
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: 6231d677a58346b93ae4827c3807ee04a717c38ebcd8a071789221fab4f16d51
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 2472aefda38552dc0f4055d2972c26b41e8abea31e51e01e8293a5dd7f550933
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 73f75e94dd18c8e60393fab7a10f7972581160a9f6bae754fd386d4cacec499
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3974)
		Method: <com.amap.api.mapcore.util.af: byte[] e(java.lang.String)>
		SHA-256: 1441055411facbff06139667b91c7f9f85c1310aba016a99881041cd832a35cd
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4278)
		Method: <com.sina.weibo.sdk.net.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>
		SHA-256: af8b9d1dc213ddc18b05eb6bca4586d623371a11c72cc1db7e4f452dc487d2a5
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8431)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 210486408d7d031bb8844e0f74857033cc4a2ec871694aac7dd4e74354f809fd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10422)
		Method: <com.tencent.bugly.proguard.a: java.lang.String c(byte[])>
		SHA-256: a1d61c25ff397dbb67abe05ad2540213d4e7e6f9d07a122ff8e03d5545998845
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 5b930072ad5d1b3ed7c071611f426825e983b472eb593477709e101538243fa1
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8422)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 2f6a22db9e85aa1e6dcf4dbdaca64c4ac86b91e01b08e03331d58769a5c41f80
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8332)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 754542c8b8f74a03dd1f489c23c51faa0b3c96539b5258af47fbb50755c5b49a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 1b14969e783f50655d3bd517cc82f9c4f0fd3a29a3e8d224d34ce476f69fcf6d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 389c07dc610e9470c8bbaee59735ccb0e4e113470448f046bbf75e4a029f4fbc
		Secure: true
	Object:
		Variable: varReplacer8332
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8332)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 5b1b928deda422d106a9f81537dd8924171baac5eacfacc96394a155a273c13b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.sina.weibo.sdk.net.HttpManager: org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory()>
		SHA-256: 69839fb2317ad945c0b4b9ffb83d9288ad7e5826dc1c6ada88da2e60e8afceaf
		Secure: true
	Object:
		Variable: varReplacer9794
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9794)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: de98364e36dd5105f5f627faf248ba1f186d4c94084c5a8436b364130a797dde
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8424)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: ceeb93748e77eac71a7d11f33a45e48c327cd6db8ba8176f671699b52530d087
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: ee76d2bfe9bfb0e0cb94119aaa1d667dfd06540ffafedff71218aae2fa638f2f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 896348da707dd1822855f5e5b10c716bff1dc73b7431e5a4c37c0dc968480211
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: 894759b2db79125b4010be47049f0303bbed9cfe8bd8fa5012f5b950a7f70f5e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: 7cbd5d5d94f52e4331a8dca3938b3018a489aa8f58fb370c08b421666674c8e3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.bugly.proguard.a: java.lang.String c(byte[])>
		SHA-256: ff0d77755436d914fb56b3a2f634c3ad31326ca70bf4b6e2956b7ac053abda15
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8326)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: 9ab1b0b656f338aca541937dd5f69494c855b550c28ec92c7affb41b89d6ca07
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4359)
		Method: <com.tencent.open.utils.HttpUtils$MyX509TrustManager: void <init>()>
		SHA-256: 8a428ecde41d563a35f9132ae4c175d643452313a0729efac7a6f342a126598d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 7782097f1055b534e6d44451764bbb10690c9bff58e0be87a9fe2845542e39e4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9794)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: 5e4b69fd0adebd2b7f44bf78438552cf2fc3619630209b5747248d35f5f1bf4
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>
		SHA-256: 7118cedcd1272beec6441677092e34eca25d1e26247df61777ff03f1cbe575ec
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8432)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 982cb6b0ba8203473c08ff028f96b8934d6c0c8bde95eaafd8591f5aa09b24cc
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: a270ad1e474c7014c22f8189d40a6ed8de9e6ca6418b6f9a16de8aea80cdb347
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4351)
		Method: <com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: e2a0e6329f196004b6ecca1dc29ac664101022f344340d8a9353477737e80865
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: d5fc6a00628c92493961aa46e24d2ff45caf80798b927c9cbb038e6af52f14f6
		Secure: false
	Object:
		Variable: varReplacer3971
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3971)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 8d2b6b62c2016d786e16812bba612a9cea24970073e6536be6bb0b452749fa2f
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: d2a1354d23d4474f7b0b87ca60a309fac7b03735277eb00bde8a2df7d932081c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3002)
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: e1122bb7b2486b4b5f04a8bbc9883cd00df96d41de49f6a62dd4b719fc1bfbad
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.service.n: int a()>
		SHA-256: 16d7cd6aa4087b031a907b24534a6a500be48b38a3f079a76545d42f020f7354
		Secure: true
	Object:
		Variable: varReplacer8432
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8432)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 5abf0b7d1b72c2ef7637ed55434b7dd7bc67eb97632e7303278b75c657e04f14
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: 16aa4c15dca4d2c82517c55b108c61e0c5de7c3d017811cd36da0633c8165603
		Secure: true
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 843224542b8045866e2b201d3cf573220816f10246ae7402275589ce305416e0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 80036ccae0362268b16dd4497906104c1e7454942f99af3c6bbc930a9d7c3571
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: db395b22ced56c5ca633af477c861f58a097b1af3e802f766964c415de885445
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8325)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: b6b937af30d2619ca2dbbeb5cf893cead329013e286e02bfef5e180779ccece0
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5979)
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: a0a534e0bf985807f66303942d6f3ec3df04c52d29dba8b1f64b19eaf2d55bec
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.service.n: int a()>
		SHA-256: a023cbedd15aeb08d4597292c13371032fd0867070577fd2b53e53fff5b500ca
		Secure: true

Findings in Java Class: com.amap.api.mapcore.util.ac

	 in Method: java.lang.String c(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #cb4c1eb645463c2e8f3cbeb23c9551aeba95552953bb38c8bfbcc7463ba75815)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3888)


Findings in Java Class: com.amap.api.mapcore.util.aa

	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5a6c8632a57f2d9ec998b0e61c98924a7d8cefdd3dad53ade70b8e01a8c53e6e)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3897)


Findings in Java Class: com.tencent.open.utils.HttpUtils$MyX509TrustManager

	 in Method: void <init>()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #8a428ecde41d563a35f9132ae4c175d643452313a0729efac7a6f342a126598d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8a428ecde41d563a35f9132ae4c175d643452313a0729efac7a6f342a126598d)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = null

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8a428ecde41d563a35f9132ae4c175d643452313a0729efac7a6f342a126598d)
			First parameter (with value "JKS") should be any of {BKS, AndroidKeyStore, PKCS12, BouncyCastle, AndroidCAStore}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4359)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8a428ecde41d563a35f9132ae4c175d643452313a0729efac7a6f342a126598d)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4359)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8a428ecde41d563a35f9132ae4c175d643452313a0729efac7a6f342a126598d)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)


Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tencent.bugly.proguard.H

	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8328, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #9ab1b0b656f338aca541937dd5f69494c855b550c28ec92c7affb41b89d6ca07)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8326)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8328, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b6b937af30d2619ca2dbbeb5cf893cead329013e286e02bfef5e180779ccece0)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8325)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ceeb93748e77eac71a7d11f33a45e48c327cd6db8ba8176f671699b52530d087)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8424)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8421, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #2f6a22db9e85aa1e6dcf4dbdaca64c4ac86b91e01b08e03331d58769a5c41f80)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8422)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


Findings in Java Class: com.sina.weibo.sdk.utils.AidTask

	 in Method: java.lang.String encryptRsa(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9890, $r4)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f0ec8996558e3848210b7b8d8b89bff1b9b282742a1254fb0c9792b5c01aa091)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f0ec8996558e3848210b7b8d8b89bff1b9b282742a1254fb0c9792b5c01aa091)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9890, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f0ec8996558e3848210b7b8d8b89bff1b9b282742a1254fb0c9792b5c01aa091)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)


Findings in Java Class: com.sina.weibo.sdk.utils.AesEncrypt

	 in Method: java.lang.String Decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9784, $r5)


	 in Method: java.security.Key generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9794)


Findings in Java Class: com.amap.api.mapcore.util.ae

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3967, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3967, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3738, $r1)


Findings in Java Class: com.tencent.bugly.proguard.G

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8427, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8432)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8336, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8336, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8332)


Findings in Java Class: com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4352, r7, varReplacer4352)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4352, r7, varReplacer4352)


Findings in Java Class: com.sina.weibo.sdk.net.SSLSocketFactoryEx

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4279, r6, varReplacer4279)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4279, r6, varReplacer4279)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 67

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 25
	TypestateError: 2
	ImpreciseValueExtractionError: 1
	IncompleteOperationError: 6
	ConstraintError: 6
	NeverTypeOfError: 1
=====================================================================
