Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.shareprice.app.android-076435BE387B6E820E4F2E64FF006367AB849131A8C61BD5FAD82D4853FD6EB8.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 168576  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1450)
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: 7ae223eca368ce76a2ef70997ad99b48d394fc3971d9330fe4da1e28c4286462
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.urbanairship.push.embedded.Crypto: byte[] encrypt(byte[])>
		SHA-256: 209804a6bc6e01a2918dfb24978a33eeab9add20fe839dcd66f341c19cc48d1d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7513)
		Method: <com.urbanairship.push.embedded.Crypto: void <init>(java.util.UUID)>
		SHA-256: e27d332ae34c17cc519ae1b3a0220dc1a1035e32871f1d38253443eaf8f3d8
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)>
		SHA-256: 28ce7f80687f60d700936748d1561bbe406957299dfe63f40eacb0b994499d24
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String md5(java.lang.String)>
		SHA-256: 3bf4987a13fa537dd68996ea5adabcc7ded84a07b3f23a99273afd14778d368
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apptentive.android.sdk.util.Util: java.lang.String md5(java.lang.String)>
		SHA-256: f818b9880815425f66c3d940c2b15dfdc3d9e0a41b38527e1b7ee22715573994
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.urbanairship.push.embedded.Crypto: void <clinit>()>
		SHA-256: 3a86bd922a7407c76b7e0b8703a5cf40106df93e7d5ec5a60eb27796a7ae5a67
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.urbanairship.analytics.Analytics: java.lang.String getHashedDeviceId()>
		SHA-256: 7e6f4e8d8b56d579535f27a6deeade155bb4f0d4a1a7c2287393ec5e4360c760
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7514)
		Method: <com.urbanairship.push.embedded.Crypto: void <init>(java.util.UUID)>
		SHA-256: 23d169cbb7a94973ff6eec4ba7d78a0bb81eb31fd4c3d8b3f2a2951a18ba440c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7791)
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: 37cbe333607494c233263b73d4e319a7caab0fe75761482596de10f74abaf270
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9337)
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String md5(java.lang.String)>
		SHA-256: 13dbcd1b346b7ea9ea6d2c3a52879d6dd0cccb892636c04c226a5b6fadb365d2
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.shareprice.app.android.utils.SharePriceHttpUtils: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: 78f0593a1f3de5108f968f56ab3bcbf9967eb1194a50e66803c019a9baca17aa
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1774)
		Method: <com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 6732fb4f42bbd2b03b923b69cd67ece33cb44490df34d28b1db4069408c6b503
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.urbanairship.push.embedded.Crypto: byte[] decrypt(byte[])>
		SHA-256: 6e1461f1323ecfbab7864244669f51f370d07c62a1a7fd41b033b9457f060912
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5758)
		Method: <com.urbanairship.analytics.Analytics: java.lang.String getHashedDeviceId()>
		SHA-256: 2ba534270c6c733528636c39c6232f58ca488740cdf164c12e2a75d2115e6301
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5871)
		Method: <com.urbanairship.push.embedded.BoxOfficeClient: java.lang.String getHashedDeviceId(android.content.Context)>
		SHA-256: 87378944ef5730802caa3695bdf8c2c49aa5d0856c4ab9490a4148017017ce78
		Secure: true
	Object:
		Variable: varReplacer7514
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7514)
		Method: <com.urbanairship.push.embedded.Crypto: void <init>(java.util.UUID)>
		SHA-256: 7cfcfabfdca7ca94a93bb85148ae1e32067cda02b50cb941431a3d2f003e0016
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: 6a3069053649d899383b61fcfad25384555728d4af17de5336fb5f338ffe42e5
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: e0c72fc41e053c4940df80ac214885a81274dd181ac131e0da4a0b5bbb5e0b40
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.urbanairship.push.embedded.BoxOfficeClient: java.lang.String getHashedDeviceId(android.content.Context)>
		SHA-256: b1647c0f3f419ac79a1aa48ea656fee17be94686496b3c9c867e324676ec7258
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9746)
		Method: <com.apptentive.android.sdk.util.Util: java.lang.String md5(java.lang.String)>
		SHA-256: 88a4720eb14434e87b871db79242d333f62196d59929a8d26280b4d7d49629d1
		Secure: true

Findings in Java Class: com.urbanairship.push.embedded.HeliumClient

	 in Method: void readResponse()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e27d332ae34c17cc519ae1b3a0220dc1a1035e32871f1d38253443eaf8f3d8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r9.<com.urbanairship.push.embedded.Crypto: byte[] decrypt(byte[])>($r2)


	 in Method: void register()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e27d332ae34c17cc519ae1b3a0220dc1a1035e32871f1d38253443eaf8f3d8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r11.<com.urbanairship.push.embedded.Crypto: byte[] encrypt(byte[])>($r10)


Findings in Java Class: com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1775, r5, varReplacer1775)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1775, r5, varReplacer1775)


Findings in Java Class: com.urbanairship.push.embedded.Crypto

	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7516, $r2, $r3)


	 in Method: byte[] encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7536, $r2, $r3)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: void <init>(java.util.UUID)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7514)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	IncompleteOperationError: 2
=====================================================================
