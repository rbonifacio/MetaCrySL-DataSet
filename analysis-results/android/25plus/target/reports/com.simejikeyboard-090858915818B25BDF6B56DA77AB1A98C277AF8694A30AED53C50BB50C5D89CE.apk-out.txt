Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.simejikeyboard-090858915818B25BDF6B56DA77AB1A98C277AF8694A30AED53C50BB50C5D89CE.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
20:06:01.222 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
20:06:01.449 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
20:06:02.126 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:02.148 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:02.243 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:02.265 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:02.846 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
20:06:02.929 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
20:06:03.020 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
20:06:03.057 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
20:06:03.403 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:03.404 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:03.405 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:05.331 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:05.350 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:05.361 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:05.364 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:05.365 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:06.262 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
20:06:06.289 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
20:06:08.320 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
20:06:08.345 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
20:06:08.346 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
20:06:08.669 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
20:06:08.688 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
Alive 552228  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.baidu.crabsdk.c.d: byte[] c(java.lang.String,java.lang.String)>
		SHA-256: 6c6e06c1094bff39a0e395769ecc8c175137012898e61e30e3808453f3fb9bb5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.simeji.common.pasta.CodecUtils: java.lang.String getMD5Checksum(byte[],int)>
		SHA-256: c556cb25f1ebdbaf1caeec30cdda49baa8a2dea40721b0325d1cc66c7f8472f5
		Secure: true
	Object:
		Variable: varReplacer4897
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer4897)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: 387c29e1f43d74eed71891d9c9c7d85ea67e76f66e54a89bd20c014cbf410d6b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)
		Method: <com.baidu.crabsdk.c.e: java.lang.String a(java.lang.String)>
		SHA-256: 59a1d53a79b53b180b259525207be56b800e896d9ab382a32c4106e45490a51a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12415)
		Method: <com.tenfx.rz90FE.Nl.rz90FE.Nl.GL: java.lang.String GZ(java.lang.String)>
		SHA-256: 2b04691cbd5d836e4d78ba5965c6253cfa27bfebdc2d90460881b0b2490e53bc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer821)
		Method: <com.baidu.crabsdk.c.e: java.lang.String a(java.lang.String)>
		SHA-256: 6f7011282147f9e8e884e82416464188058efc8c08b12d6807aa3f7830ddb900
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4539)
		Method: <com.dianxinos.DXStatService.stat.TokenManager: java.lang.String a(java.lang.String)>
		SHA-256: 5df521f7a6a3016dfca672cbfc1b2fcce19228b4faf5f1d886ef44c7c3618ae3
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tenfx.rz90FE.Nl.rz90FE.Nl.GL: java.lang.String GZ(java.lang.String)>
		SHA-256: b8124aef99957c0a0084a7103b7ea027a5ba6b6f932e880180bf7eca50e6c2ae
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1002)
		Method: <com.baidu.crabsdk.c.d: java.security.Key a(java.lang.String)>
		SHA-256: a31e088dd76d1ade50cced7d30bfa59e1d07ec0e79a7e40fb445b7cc8de61a22
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.crabsdk.b.h: java.lang.String a(java.lang.String)>
		SHA-256: 518052a7ba9a5aaa8bb3563482d4b27e788fdb1b3fa22fe2f723ad029b42726
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.baidu.crabsdk.c.d: byte[] c(java.lang.String,java.lang.String)>
		SHA-256: 391b6169e9b35a908f3b19e2eaee691b62cbfc88079d96c6b091ed45d7cb1edf
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.simeji.inputview.convenient.emoji.EmojiUtils$2$1: void run()>
		SHA-256: a4825053de32dc6b66cccce7ff81a406bdaeb0ab5d94d609157dc7fe9d7879a0
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer821)
		Method: <com.baidu.crabsdk.c.e: java.lang.String a(java.lang.String)>
		SHA-256: cf16022cc5e17622ac6fe8cfb288e1248e3f06e501f0fb36a5a13eafe759ed53
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5205)
		Method: <com.baidu.simeji.common.pasta.CodecUtils: java.lang.String getMD5Checksum(byte[],int)>
		SHA-256: 5e3db2eed7e0d250c2eaa4f96ba5d44b7149ab7edd7581688adfee9f50511e1a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8629)
		Method: <okhttp3.av: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 205333354b3f937f05bace18571536926105d476994742fa27d22188c83ecbc2
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12757)
		Method: <com.baidu.simeji.inputview.convenient.emoji.EmojiUtils$2$1: void run()>
		SHA-256: b116c90a6e6e3b85443fa7eeedce129ec646bfae8e9537cfbaa82b0b05b72b15
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: 8b3200f117b1af4afc89786b3971b37bfebc8d085db25532653c2d22a1c15799
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer4897)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: a65daab64927f9221844aa4a21c74d5060f4cf796cbc5b54acff994002190347
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: 86912add76229853b83d666adf93ff55d7c2f50b1ffb3b7d5811747c900c1da4
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer822)
		Method: <com.baidu.crabsdk.c.e: java.lang.String a(java.lang.String)>
		SHA-256: 3fcd2f0323b47c0b95e182af0c616fac40ba030d42534b94278f8d26004dcbe7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3067)
		Method: <com.baidu.simeji.common.util.MD5Utils: java.lang.String getFileMD5StringInternal(java.io.File)>
		SHA-256: 1e39b8a4ff3541e339549261babc6448a1194e0203b897d9488b17ad21ea1d77
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer982)
		Method: <com.baidu.crabsdk.c.d: byte[] c(java.lang.String,java.lang.String)>
		SHA-256: 65e330751f09d97c4e0be56f5ba86fe5dc00736d49c913d1edde53c1e39047ac
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4900)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: e48a7862015dcaa58dd9035e26018f47ac419eefd4554c33cd065af380e556be
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9032)
		Method: <com.facebook.common.k.b: java.lang.String a(byte[])>
		SHA-256: dcd196a2481efd1fa597a6f004021539574f996d853cf8b1e84df79c3c3eeb7d
		Secure: true
	Object:
		Variable: varReplacer1002
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1002)
		Method: <com.baidu.crabsdk.c.d: java.security.Key a(java.lang.String)>
		SHA-256: 9a599ae09c0d0fb6045653d29094b0734b78545099bfdc168921e654a88052f4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer991)
		Method: <com.baidu.crabsdk.b.h: java.lang.String a(java.lang.String)>
		SHA-256: b288242faf1dd3cab3201f177e131f3cb72227aa32c38be1adf3db9526499848
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianxinos.DXStatService.stat.TokenManager: java.lang.String a(java.lang.String)>
		SHA-256: f8d340b0dfe4a83ba358527bb0d35bb19f24c38d911d7021c49545cb63527331
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.k.b: java.lang.String a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3052)
		Method: <com.baidu.simeji.common.util.MD5Utils: void <clinit>()>
		SHA-256: fdf4fd9feceb0d7318ac403a407f377759752454969a5ad0fa591396b5d7eb5a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)
		Method: <com.baidu.crabsdk.c.e: java.lang.String a(java.lang.String)>
		SHA-256: d502b329ee3f453abbd9a40191740fb2106c0e19f0f94d093fbb35ee8ee26d4c
		Secure: false

Findings in Java Class: com.baidu.crabsdk.c.e

	 in Method: java.lang.String a(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3fcd2f0323b47c0b95e182af0c616fac40ba030d42534b94278f8d26004dcbe7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer821)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer823, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3fcd2f0323b47c0b95e182af0c616fac40ba030d42534b94278f8d26004dcbe7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, varReplacer821)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3fcd2f0323b47c0b95e182af0c616fac40ba030d42534b94278f8d26004dcbe7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3fcd2f0323b47c0b95e182af0c616fac40ba030d42534b94278f8d26004dcbe7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer823, $r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3fcd2f0323b47c0b95e182af0c616fac40ba030d42534b94278f8d26004dcbe7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i2, $i3)


Findings in Java Class: com.baidu.crabsdk.c.d

	 in Method: byte[] c(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer988, $r3, $r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #65e330751f09d97c4e0be56f5ba86fe5dc00736d49c913d1edde53c1e39047ac)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer982)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer988, $r3, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #65e330751f09d97c4e0be56f5ba86fe5dc00736d49c913d1edde53c1e39047ac)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer982)


	 in Method: java.security.Key a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1002)


Findings in Java Class: com.tenfx.rz90FE.Nl.rz90FE.Nl.GL

	 in Method: java.lang.String GZ(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2b04691cbd5d836e4d78ba5965c6253cfa27bfebdc2d90460881b0b2490e53bc)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okhttp3.av

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8630, r7, varReplacer8630)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8630, r7, varReplacer8630)


Findings in Java Class: com.baidu.simeji.common.util.EncryptUtils

	 in Method: byte[] encryptAes(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4909, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer4897)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	ImpreciseValueExtractionError: 1
	IncompleteOperationError: 3
	TypestateError: 3
	RequiredPredicateError: 9
=====================================================================
