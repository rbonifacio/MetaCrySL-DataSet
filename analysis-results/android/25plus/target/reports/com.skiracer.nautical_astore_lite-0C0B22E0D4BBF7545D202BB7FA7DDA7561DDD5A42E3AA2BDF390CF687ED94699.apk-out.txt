Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.skiracer.nautical_astore_lite-0C0B22E0D4BBF7545D202BB7FA7DDA7561DDD5A42E3AA2BDF390CF687ED94699.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer6947)
		Method: <com.example.android.trivialdrivesample.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: ac9dcae9363b7e22908dd9092912c4fcb83af0370d7eeaf2841e351c3548867f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r4)
		Method: <skiracer.util.EncryptionUtil: byte[] decrypt(byte[],java.io.InputStream,int)>
		SHA-256: ef73f93ca94e1e3466bf035c29ef42bcae68bf3229ae622149542eb92b1492c8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2546)
		Method: <skiracer.storage.RestUrls: byte[] sampleMD5Digest(byte[])>
		SHA-256: ba0ecf2e8d405e4a1c42c995cc21790fd61868cd4518901261da6b9a1af01835
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7405)
		Method: <skiracer.util.EncryptionUtil: byte[] decrypt(byte[],java.io.InputStream,int)>
		SHA-256: d05865803632be33935bf9542d1fba5ba11ad6e14b8269971f0355671f109cac
		Secure: false
	Object:
		Variable: varReplacer7404
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7404)
		Method: <skiracer.util.EncryptionUtil: byte[] decrypt(byte[],java.io.InputStream,int)>
		SHA-256: 680ed3ef9e57632d2f730afe754efb4c41d84a3e6d653d9c50d4661ffaac52bd
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.example.android.trivialdrivesample.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <skiracer.storage.RestUrls: byte[] sampleMD5Digest(byte[])>
		SHA-256: 3b940b92f5e4b31443803d75519c1aec82c16b2ecfd8d102404ba591b0598d97
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7404)
		Method: <skiracer.util.EncryptionUtil: byte[] decrypt(byte[],java.io.InputStream,int)>
		SHA-256: 77c43c8813fb554bc9f62fc2d241ea14974808474ae806954f1cfe01df0946b1
		Secure: false

Findings in Java Class: skiracer.util.EncryptionUtil

	 in Method: byte[] decrypt(byte[],java.io.InputStream,int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d05865803632be33935bf9542d1fba5ba11ad6e14b8269971f0355671f109cac)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES_128, ARC4, TDEA, AES, BLOWFISH, RSA, ARCFOUR, DESEDE, AES_256, RC4}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7405)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d05865803632be33935bf9542d1fba5ba11ad6e14b8269971f0355671f109cac)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7404)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ef73f93ca94e1e3466bf035c29ef42bcae68bf3229ae622149542eb92b1492c8)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), close, java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r0)


Findings in Java Class: com.example.android.trivialdrivesample.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 2
	IncompleteOperationError: 2
=====================================================================
