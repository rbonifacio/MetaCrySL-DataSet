Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.valentus-141FB458C303E4D50E606FB8F08F3BA26D9100DBECF67CF9CC8833218932A669.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer373)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: d1741cacbfa7a74c8e3da2c94123f33a43531bf7aceeac5d3bf430660029d71c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1136)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 3529dc4da45f08bbfa4886cc2fdae94c98b5e7e119c22ed61e9d845fb789e87f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer379)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: f78a5b8ad578b991c07ac3345df7f4054a2576d78163a9895d5ccab35546c1b4
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer375)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: 149c7d4d12b335710507533476cc31e2c263e1d3e77b0ecd1f92b21175321f9b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3293)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 39d03aa457e80274572667b00dbc6e69a1308083b5149cf63e2683ae264dd9b0
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer378)
		Method: <com.valentus.network.NetworkService: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)>
		SHA-256: 6d5ce4817c5dc1ccb619c8d9064abcc3d9c9d1daa3bf237d03a388363a9f85a5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true

Findings in Java Class: com.valentus.network.NetworkService

	 in Method: com.squareup.okhttp.OkHttpClient addSSLTLS(com.squareup.okhttp.OkHttpClient,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer376, $r12, varReplacer376)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d1741cacbfa7a74c8e3da2c94123f33a43531bf7aceeac5d3bf430660029d71c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer376, $r12, varReplacer376)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer371, $r12, varReplacer371)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #f78a5b8ad578b991c07ac3345df7f4054a2576d78163a9895d5ccab35546c1b4)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer371, $r12, varReplacer371)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1133, varReplacer1133, varReplacer1133)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1133, varReplacer1133, varReplacer1133)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	NeverTypeOfError: 2
=====================================================================
