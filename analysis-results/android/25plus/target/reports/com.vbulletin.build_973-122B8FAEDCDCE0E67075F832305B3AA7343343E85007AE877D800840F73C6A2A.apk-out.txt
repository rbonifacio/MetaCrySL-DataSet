Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.vbulletin.build_973-122B8FAEDCDCE0E67075F832305B3AA7343343E85007AE877D800840F73C6A2A.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 60029a1b2e5ee22a3931915434a5fa44cf27db5eb408040851f105ce7e16415b
		Secure: true
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5136)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 1b46a7b7873d509a92a4637edacb85a5aaecd5b96dfefc75de766801ba7469d2
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentEventStore: void startNewVisit()>
		SHA-256: 16e2093d83c7039b49d21a048d17818591ae5ea22f20400c902dded8894eac28
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 4d0d73ed509b99931dd07e65ab72bb4c38bc5cabf8058c750064f3607fcd6b2
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6240)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: aaa59735325d2a291c4caa8bc5ec2350e9af0567159a3d6b0aff1044e0223a15
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.vbulletin.client.httprequest.Util: java.lang.String md5(java.lang.String)>
		SHA-256: 4241ebe07d6857c937a29e5d653b98b2705a2480ce6bec0999920c878d6c2395
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1691)
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: bad259b4eff522e918fb6e10cc192d5370300597ceaab34fffbdf82da9bf2721
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: dae50a7a3480c41072b412801df159b36d80d91d815fe01726a27974aeb4bc28
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3920)
		Method: <com.vbulletin.client.httprequest.Util: java.lang.String md5(java.lang.String)>
		SHA-256: 5692201f693dba2fd3566ace5e95a2359e6e905a8f023da2e42a53fe885659cd
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5139)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 9f71493c6df2aa7cdc8b34e9a58aceb8817d3703e6d914ac385f02e55068fe72
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6589)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 46263336ee7622f6c9c197f589b5fcb8f5daee6d9007e19729c0a13424ff8f68
		Secure: true
	Object:
		Variable: varReplacer6241
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6241)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: 765a54c356ee7dd8310a78fc9c1970961aede1b4e1f2b4f2776cd7c3a0fda51e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 2927e1a5cb224287b03f6dd515d016a63eb5cb0704288180ae31d42a6182fe4b
		Secure: true
	Object:
		Variable: varReplacer5136
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5136)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 952e91ed4bd9d036bad2b3f8d4ded32e32d878bf4e7a76c0386311afcb4c241a
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6241)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: 28cdfd7c96044dbcd03882754a80ac0dc488c03f4c750591cb81173fabd9ecf
		Secure: false

Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5136)


Findings in Java Class: com.vbulletin.util.FacebookUtils

	 in Method: java.lang.String hmacForSecret(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6241)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
=====================================================================
