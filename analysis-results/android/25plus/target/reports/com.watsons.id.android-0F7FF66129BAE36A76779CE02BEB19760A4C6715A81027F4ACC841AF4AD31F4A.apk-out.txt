Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.watsons.id.android-0F7FF66129BAE36A76779CE02BEB19760A4C6715A81027F4ACC841AF4AD31F4A.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer3817
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3817)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 79a92cbf42a270245cc0914e04b372bec7ac0e2d1c3f86182cb7cc5354e9f7d9
		Secure: false
	Object:
		Variable: varReplacer3792
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3792)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: fc3fd0dbbd99cdb1a36d5449c57ba91fe4e478ca0d093981e875a6a2fb3d0499
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer683)
		Method: <parknshop.parknshopapp.r: c.ak a(c.ak)>
		SHA-256: 51fbb80c9df54cf3acff358cd8aea7b0b4459251785f60801bf80bb3fe7776b6
		Secure: false
	Object:
		Variable: varReplacer3814
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3813, varReplacer3814)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: f6123af36483d057e885c0bfa09e6a91a17dafed51096ec7b7c5ff0a5b70e6dd
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4239)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 43f353960f5eb72497197ae5f57c8946ec2744ac53a6c6df13f721aad74be124
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3813, varReplacer3814)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 4aec7a1b4fde708df99d8c83dd71d88744ed6cdf20c2b141a108f8ae3ac319d8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3794)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: b1844f0de762c33a21d5deced1ba22757606118a408b3dfea2a5c232438b2336
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3812)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: b4564c0f78ef8779b55d23d5e64d418badf4c99e89e19cd4e47014780efa291e
		Secure: false
	Object:
		Variable: varReplacer3812
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3812)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: a827e6100fecf8ff32b2d383610e2ce84ca2c684fdd70dff5e7eda11527ee2d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1283)
		Method: <c.aj: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: fa515e931223ff8ef71703572b09588e7a80bf01861137155e3ff87167b10f07
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4245)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: b8305ae88eec8b5c300879c14d83f6e2f4ee61fb90472a4fb3d9aea1e8214c3b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: varReplacer3798
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3798)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 7b40606e586d09a7a927f42090585cc2af955cadc81166bc0b2b8be0a61d6b85
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 36ccaffd5df31af12c6519920ab1cc93c8763b7b3de943b0e4737a6f5039543
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.c: void d()>
		SHA-256: 5f11170c0830485070437f05ddb232c64d2202d1714075160e608039cee429ab
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3821)
		Method: <com.c.a.c: void d()>
		SHA-256: 8045cfd84c3ff6d9eb4bf150e84b7c204458b19df56f46783389d37e6670dbe7
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer3808, varReplacer3809)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 9a11d9b9584e73205eba83ffb3a9acd8c5a2268ff5ba2fe0dd6b35c805338aa1
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3817)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: f033da7393394b185b0d015af04a5be73f6e0ef3b2c04fa237363bd50416a246
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4260)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 252b9605e78b7fad1fb5614b53efc468d1504b37bc819aee4fa313864a833585
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3798)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 9e3b4a843035bf1c4ce528e8b75ea52d931064385d24c87136b941123fb19990
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer686)
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: 9db17f1c561b8c8f7f41271f9e1d60b769acd72dffab078bee341fa57bc8fe53
		Secure: false
	Object:
		Variable: varReplacer3802
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3801, $i0, varReplacer3802)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: cef92d36453a4c9bc1d639e772b14ea26835e8a92435f37a450853b6d7f63c44
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3792)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: b72411649ba17eeeb6c7f657fc4619eee2e82457e8120611c55d136a38d960b5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3811)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 35466fc7847b1fa9b776cc0d185ce3fac0f19683595253652303ac741473bd9e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 3f11a2aebe407b793940ab5a06c1a9c0c3504da88c0e2c8f3f4c736766d43690
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3801, $i0, varReplacer3802)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: 206cdd46ff5bf5086bb0fdf85935732019f6357de78451992f30d550904d3637
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: specialinvoke r14.<java.security.SecureRandom: void <init>()>()
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: 8d0642c9b9f4d9f53ae393fba9113dac0b32662ae94782b26c676bc69e4472e8
		Secure: true

Findings in Java Class: com.c.a.a

	 in Method: com.c.a.f a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3798)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3801, $i0, varReplacer3802)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3801, $i0, varReplacer3802)


	 in Method: com.c.a.f a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3813, varReplacer3814)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4aec7a1b4fde708df99d8c83dd71d88744ed6cdf20c2b141a108f8ae3ac319d8)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3817)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3812)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4aec7a1b4fde708df99d8c83dd71d88744ed6cdf20c2b141a108f8ae3ac319d8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3813, varReplacer3814)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: byte[] a(com.c.a.b,com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4241, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: com.c.a.b a(byte[],com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4261, $r5, $r2)


	 in Method: com.c.a.f a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3792)


Findings in Java Class: parknshop.parknshopapp.r

	 in Method: c.ak a(c.ak)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer681, r16, varReplacer681)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer681, r16, varReplacer681)


Findings in Java Class: c.aj

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1281, r7, varReplacer1281)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1281, r7, varReplacer1281)


Findings in Java Class: parknshop.parknshopapp.Utils.f

	 in Method: c.ak a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer688, r16, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer688, r16, $r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 32

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 16
	ImpreciseValueExtractionError: 1
	NeverTypeOfError: 1
	IncompleteOperationError: 1
=====================================================================
