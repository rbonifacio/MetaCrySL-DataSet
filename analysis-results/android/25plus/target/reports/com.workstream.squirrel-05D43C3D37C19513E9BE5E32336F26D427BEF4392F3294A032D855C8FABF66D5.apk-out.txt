Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.workstream.squirrel-05D43C3D37C19513E9BE5E32336F26D427BEF4392F3294A032D855C8FABF66D5.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r26
		Type: javax.net.ssl.KeyManager[]
		Statement: $r26 = virtualinvoke $r22.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: 897cac0938535cb0e636b810adc85922a05ef0b8f1f76db5a25cc54a5e26cb06
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 801c310b5c5152f74107c5bbc5442f1cd271c95e9c4d232b6d973c35dfe4c9b6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer631)
		Method: <com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 8f1a7ca8992e17722f93fa287ee26f10d5c766f48daded91e23c68df7c956b04
		Secure: false
	Object:
		Variable: r39
		Type: java.security.SecureRandom
		Statement: specialinvoke r39.<java.security.SecureRandom: void <init>()>()
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: d09b19a8ec61885aa12915440bc1be0a2c0cf73523e3401f1dd30c0ecbf6373f
		Secure: true
	Object:
		Variable: $r25
		Type: javax.net.ssl.SSLContext
		Statement: $r25 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer608)
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: 9a039a6979db17b2b05747ffee6c76e6cf6e700f5b8e775521e01ddd134dc6ba
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r22 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer609)
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: 46157eadcd7a211b3b75598f305f2ade03da18c6312660f6f75e575b526d179c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 6c625e137cabfa7c59da6dc7744de4cadf22be011b35748c2cda6401092924a1
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer611)
		Method: <com.workstream.authenticate.registration.UsingInternalRegistration: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)>
		SHA-256: 27efefd1cf72cafec9e98712091e662b32304b4ba8c20976bb22b333c7547f7f
		Secure: false

Findings in Java Class: com.workstream.authenticate.registration.UsingInternalRegistration

	 in Method: javax.net.ssl.HttpsURLConnection getHttpsConnection(int)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #46157eadcd7a211b3b75598f305f2ade03da18c6312660f6f75e575b526d179c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r22.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r26, r40, $r27)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r26, r40, $r27)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #27efefd1cf72cafec9e98712091e662b32304b4ba8c20976bb22b333c7547f7f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer604, $r14)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #46157eadcd7a211b3b75598f305f2ade03da18c6312660f6f75e575b526d179c)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r22 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer609)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r22.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r14)


Findings in Java Class: com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer630)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer630)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #6c625e137cabfa7c59da6dc7744de4cadf22be011b35748c2cda6401092924a1)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 3
	RequiredPredicateError: 6
	ConstraintError: 1
=====================================================================
