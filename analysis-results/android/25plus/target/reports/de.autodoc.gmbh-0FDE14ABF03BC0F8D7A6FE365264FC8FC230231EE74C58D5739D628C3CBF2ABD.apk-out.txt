Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/de.autodoc.gmbh-0FDE14ABF03BC0F8D7A6FE365264FC8FC230231EE74C58D5739D628C3CBF2ABD.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26813)
		Method: <aqc: java.lang.String a(java.lang.String)>
		SHA-256: 4466bb67692c9e9f70f7240dc5edc66a5b584f82aff65eb8d222baab4835013a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <aai: java.lang.String b(java.lang.String)>
		SHA-256: 58ec0febed15de1722cabde7fd9aa729d97d07059bea05a6be180a829346430
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <uu: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: c24e314ed29e95a2729e279be17f4552935a1b02664c12df8fa3cbb76eb3132c
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <uv: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: d43d0f2ec3b384ac362a6e8cedad4202cfd3a9bcbb01a4d4c9d8cd02069584e8
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <uv: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: d851c2a4fe2ec84dbc99db45afad9464373800b88bd9bc18ca4c82bcbcd38493
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <us: java.security.KeyPair a()>
		SHA-256: 98b85cbd42fcd5c9d1a1b29ee360675a704dafb3bb3a642fedbb2de9bd9be535
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <uu: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 35dcf13b7c8fc741e94effa933895135d6793e659506e72e8f498f2058cae78a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <aqc: java.lang.String a(java.lang.String)>
		SHA-256: a83579b7046fb75ae6e7b10ac43280805c3bdd21efb429f8c028ac8b40c96ed0
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.appsee.xb: java.lang.String A(byte[])>
		SHA-256: e52a7d33609302673ff7488209e2c07d0800f69f5b6fd3d7a2a4aaed61b86844
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23639)
		Method: <aqt: void <init>(javax.net.ssl.TrustManager)>
		SHA-256: 2a404ef4a23e43a71b3e009e55349cd82ae1c1af3138840479488d0629e13f0e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19870)
		Method: <ur: java.lang.String a(java.security.KeyPair)>
		SHA-256: 3a65a51fdb39a1e9a2cdde64d98fdf7aa32fbcd9cb7ff3de32d202212f6684ba
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <uv: java.security.KeyPair f(java.lang.String)>
		SHA-256: 13f06b1f1c494975689123c529915b362a62a5caa07cd0254f158d866f9add65
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <aqr: void a(okhttp3.OkHttpClient$Builder)>
		SHA-256: 25abba41af37ccd3048de8445c666f793456c5bbc7c81f9e54413f782907dbfa
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer18348)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 3f33864399e5884d35646c45d8c44645c506cc4b9eda4780f717130ff9b3a750
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30342)
		Method: <aai: java.lang.String b(java.lang.String)>
		SHA-256: be44ddfbab5a3263147f28872cff013b6a42b11575d9ee365f5c04c9b0534e46
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <ur: java.lang.String a(java.security.KeyPair)>
		SHA-256: b5d9f2bc608fc20ba1db8bc220f9f9591ea63be32699c76f028f9751beeac67c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21668)
		Method: <agm: java.security.MessageDigest j(java.lang.String)>
		SHA-256: c0846f0904b1281a486f1c8ee2594fd7202001d585b1665229da3d522ea4cf4c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer19877)
		Method: <us: java.security.KeyPair a()>
		SHA-256: 452e79a4f5818614bcf0a012b22fdf9745fc1e67cee0bd2b3e91be622852f372
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <ur: java.lang.String a(java.security.KeyPair)>
		SHA-256: f1a6a4ac196064c716877a63e3771cfa4c60d3e87471a0bcb2fb03aa5cbf781e
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.appsee.xb: java.lang.String A(byte[])>
		SHA-256: 20e2d6223142b2afa5fc5282cd6b2da6227cd858c5efdee24496da814722da48
		Secure: true
	Object:
		Variable: $r21
		Type: byte[]
		Statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)
		Method: <agz: void e()>
		SHA-256: 6ea0ce1daa58133727ced01f5965d865a9b203beb5673104749aab7cd01bc99a
		Secure: true

Findings in Java Class: ur

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a65a51fdb39a1e9a2cdde64d98fdf7aa32fbcd9cb7ff3de32d202212f6684ba)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19870)


Findings in Java Class: uu

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #35dcf13b7c8fc741e94effa933895135d6793e659506e72e8f498f2058cae78a)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: agz

	 in Method: void e()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c0846f0904b1281a486f1c8ee2594fd7202001d585b1665229da3d522ea4cf4c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c0846f0904b1281a486f1c8ee2594fd7202001d585b1665229da3d522ea4cf4c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <agm: java.security.MessageDigest j(java.lang.String)>(varReplacer21645)


Findings in Java Class: agm

	 in Method: java.security.MessageDigest j(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c0846f0904b1281a486f1c8ee2594fd7202001d585b1665229da3d522ea4cf4c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21668)


Findings in Java Class: aqt

	 in Method: void <init>(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23640, $r2, varReplacer23640)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23640, $r2, varReplacer23640)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18346, r7, varReplacer18346)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18346, r7, varReplacer18346)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ConstraintError: 2
	IncompleteOperationError: 3
=====================================================================
