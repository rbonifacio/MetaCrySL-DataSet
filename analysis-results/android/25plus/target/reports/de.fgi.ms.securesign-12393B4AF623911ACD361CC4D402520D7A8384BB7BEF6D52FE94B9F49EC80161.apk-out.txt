Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/de.fgi.ms.securesign-12393B4AF623911ACD361CC4D402520D7A8384BB7BEF6D52FE94B9F49EC80161.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1742)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 428e071a02321674aa15db695c7b0ca2a8a585dbef8f842d02eaa9856004f997
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: e43ead56044a9371116fcb52a8537d070b3b1edd6a6755086f47d7cfa40599fc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 1e3e9e5d04e8e8b1737f6338aa348b04a08ffcd06d5f3393fb16bd9e978806af
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer685)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: edf66613d790f40b6aa0fe5122a3ee451b78e401c3586cc741dcdd458b5bb208
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1741)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: aa39c4f1ab91b66f70753cc6ab8021e2f5ab39adfb0666c582d9ee4f36c69233
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1735)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: b283ece39ca88941a07929ba885e440cd3864aa7621f554fdc1fd85a57426870
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer667)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e31226c82dfd458bfaab88bd32ac015f52fc52d4b3755dee87e63c8fd6bfd3ad
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1744)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: e59ef0a55ec2ad2e2b3aa6b8c01cd7eff8d50aba812fb93b56ce8d9dd7c61e73
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: 17bbbabf343ebbf03f4b1dff9cda50d46ffb2a12bee2b28683b2da48d8e8bd42
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1862)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: 3d2df5c5a5db503104e1f60cc4c875190db50365cd67612d7b43b8b19e93de16
		Secure: false
	Object:
		Variable: varReplacer667
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer667)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 462e9f38aa6070f47ed0f5fed2b565b2227c38e971dc654150ee619152c57e37
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1317)
		Method: <cor.ae.h: void <init>(java.security.KeyStore)>
		SHA-256: 33464b8e5db18c00259ca792741a04161941f2d86dcb61043488f6da3e87b389
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: 3d6411b6a4370a0f3d87960742df753ceb55ae38eefd723fc1f3f47de2445caf
		Secure: true
	Object:
		Variable: varReplacer1862
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1862)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: ad7fff28eff46b58bb4d4b56ab37267299142dd784551abcb6a4db3b46b7b6ad
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 14c82bce462938a66e642e2f8f9201603e3463add336be297c1996351d3542fe
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <cor.ah.l: void <init>()>
		SHA-256: e258c3da732379a6323f070341fcf9dcdb363564cf919d30abdb7e5f0990b252
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: 6c7ecfb3dcd0d53951b50f09f8703077f5cc0e115c52fea2f02c7094bb1466f1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1842)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: f396bdd022052fd2c39d4ca60bf5e03ee5e6417a96b76633ae8d43690c4b7627
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <cor.ae.h: java.security.KeyStore a()>
		SHA-256: 220b9378390358ade1d6a9a43b629270bf5f71c354d985d427798d799a117c0a
		Secure: true
	Object:
		Variable: varReplacer1742
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1742)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: ba7137e890e9a08ad893dd32fe7a24123af77b8a07e40b9f2e006149bf50c004
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: c3aab333969edcfc27b514338051b106cd1b59d5032e6c600725624162efaf49
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1667)
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: 606554d2dc8d70d28b135cd9acb083edc9db2fc36b6790af7a07da2cbeb6a612
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1748)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 1867f8d62b7c2dd871d9c9843f464d3bdb026c0a3eb1ad16203081e0efc793b7
		Secure: false
	Object:
		Variable: varReplacer1842
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1842)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: 44e9390f87a9031fce67319e68c6ed0765ce206482d8133dae1e96ebaa2de984
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1006)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 3c17bcd89fc73835432885015f8b49401682b8bb6121468d0f2fd7ca4481393a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1845)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: af424dcfccf4f71cba3ad0acad44063c9ecbadcd65253e078ec6ad180bdefc2
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 87be9a926e906383effaff4c375e29bb7485faa2d766ec82d92df120a87da9a6
		Secure: true

Findings in Java Class: cor.ar.d

	 in Method: byte[] a(java.lang.String,java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer684, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #edf66613d790f40b6aa0fe5122a3ee451b78e401c3586cc741dcdd458b5bb208)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding, OAEPwithSHA-256andMGF1Padding, OAEPwithSHA-1andMGF1Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer685)


	 in Method: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3c17bcd89fc73835432885015f8b49401682b8bb6121468d0f2fd7ca4481393a)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1006)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1009, $r1)


	 in Method: java.lang.String a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1734, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b283ece39ca88941a07929ba885e440cd3864aa7621f554fdc1fd85a57426870)
			First parameter (with value "RSA/None/PKCS1Padding") should be any of RSA/{ECB, Empty String}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1735)


	 in Method: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1867f8d62b7c2dd871d9c9843f464d3bdb026c0a3eb1ad16203081e0efc793b7)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1748)


	 in Method: javax.crypto.spec.SecretKeySpec b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1862)


	 in Method: byte[] a(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer667)


	 in Method: javax.crypto.spec.SecretKeySpec a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1842)


Findings in Java Class: cor.ae.h

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1318, r5, varReplacer1318)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1318, r5, varReplacer1318)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
	ConstraintError: 4
=====================================================================
