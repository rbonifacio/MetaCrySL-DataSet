Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/de.fgi.ms.securesign-12393B4AF623911ACD361CC4D402520D7A8384BB7BEF6D52FE94B9F49EC80161.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1669)
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: e4ba98f17f6c7167cc3d0713fe08bd7a734a5fed58606d337673043506453654
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: c3aab333969edcfc27b514338051b106cd1b59d5032e6c600725624162efaf49
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1741)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: e2a6be4c6532f72e534d483a5235752c56311918d57507d97f6d2cb86e5f2572
		Secure: true
	Object:
		Variable: varReplacer1741
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1741)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 28280e95117fe3b0fa1a13d74be3c5ba66e1d5705113ef847815bc2657b96c15
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1734)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: e66e43ed4d857f899a2cd6f981e18b47d9e99c360846df8cc5a3074ae4b6cbf
		Secure: false
	Object:
		Variable: varReplacer1842
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1842)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: 44e9390f87a9031fce67319e68c6ed0765ce206482d8133dae1e96ebaa2de984
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 1e3e9e5d04e8e8b1737f6338aa348b04a08ffcd06d5f3393fb16bd9e978806af
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <cor.ah.l: void <init>()>
		SHA-256: e258c3da732379a6323f070341fcf9dcdb363564cf919d30abdb7e5f0990b252
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: 6c7ecfb3dcd0d53951b50f09f8703077f5cc0e115c52fea2f02c7094bb1466f1
		Secure: false
	Object:
		Variable: varReplacer751
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer751)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 5ac33aa5b515c01648b68c9b7cbe02d79a9be30c41592ead3894992c8ca32299
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: 6f4c4d394a8476ccb834d64d658bd8b4c9bfa261a055d496ed22cceec443416a
		Secure: false
	Object:
		Variable: varReplacer1861
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1861)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: eede341f802b5707a6b15156eec033a56edb178927087a2cd5e5ac352a9191d7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer751)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: a202b9741d69c9cdebd840a42ecef052c18284ab134e3a02af522904fb8c57aa
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 87be9a926e906383effaff4c375e29bb7485faa2d766ec82d92df120a87da9a6
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1861)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: b58ee72f7744bbe8a7d418ea324aa07fbd6668ff92f97acaf8034e3347c61481
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1402)
		Method: <cor.ae.h: void <init>(java.security.KeyStore)>
		SHA-256: d874f7595724c1941f06a4b71104e1d910e24790bc23ae852d050e1242d20582
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1740)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: f61bfa30e34dc7b3c350b2f35d24361de0c724034ba87143dd40585507b73d28
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: e43ead56044a9371116fcb52a8537d070b3b1edd6a6755086f47d7cfa40599fc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 14c82bce462938a66e642e2f8f9201603e3463add336be297c1996351d3542fe
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer771)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: fdfe06cd29ad0bf4927bab4a9b558076a98c80cbba6cca4a1f7472bdd3d6dcaa
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <cor.ae.h: java.security.KeyStore a()>
		SHA-256: 220b9378390358ade1d6a9a43b629270bf5f71c354d985d427798d799a117c0a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: 17bbbabf343ebbf03f4b1dff9cda50d46ffb2a12bee2b28683b2da48d8e8bd42
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1743)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 51612802c2541cd5bca0d282f597b6e7ab71c231b0a9650b2fcdd6ae6f968bdc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1746)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 6fdf5076f10840ffbd8700b28d3f6945f6af2ebdbe1fc8fd3cbadf1661ea3395
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1094)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 544cd37a495cae6b4be20997c5569e18f14914be227ed453b5908f5be880503a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1842)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: f396bdd022052fd2c39d4ca60bf5e03ee5e6417a96b76633ae8d43690c4b7627
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1844)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: ffc855169830648de34458e1803b348d38be72360220bba2d8a6510f68cf05e9
		Secure: true

Findings in Java Class: cor.ar.d

	 in Method: byte[] a(java.lang.String,java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fdfe06cd29ad0bf4927bab4a9b558076a98c80cbba6cca4a1f7472bdd3d6dcaa)
			First parameter (with value "RSA") should be any of {OAEPwithSHA-512andMGF1Padding, OAEPwithSHA-224andMGF1Padding, OAEPPadding, NoPadding, PKCS1Padding, OAEPwithSHA-256andMGF1Padding, OAEPwithSHA-1andMGF1Padding, OAEPwithSHA-384andMGF1Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer771)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer769, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fdfe06cd29ad0bf4927bab4a9b558076a98c80cbba6cca4a1f7472bdd3d6dcaa)
			First parameter (with value "RSA") should be any of {OAEPwithSHA-512andMGF1Padding, OAEPwithSHA-224andMGF1Padding, OAEPPadding, NoPadding, PKCS1Padding, OAEPwithSHA-256andMGF1Padding, OAEPwithSHA-1andMGF1Padding, OAEPwithSHA-384andMGF1Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer771)


	 in Method: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #544cd37a495cae6b4be20997c5569e18f14914be227ed453b5908f5be880503a)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1094)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1093, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #544cd37a495cae6b4be20997c5569e18f14914be227ed453b5908f5be880503a)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1094)


	 in Method: java.lang.String a(byte[],java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e66e43ed4d857f899a2cd6f981e18b47d9e99c360846df8cc5a3074ae4b6cbf)
			First parameter (with value "RSA/None/PKCS1Padding") should be any of RSA/{ECB, Empty String}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1734)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1735, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e66e43ed4d857f899a2cd6f981e18b47d9e99c360846df8cc5a3074ae4b6cbf)
			First parameter (with value "RSA/None/PKCS1Padding") should be any of RSA/{ECB, Empty String}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1734)


	 in Method: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6fdf5076f10840ffbd8700b28d3f6945f6af2ebdbe1fc8fd3cbadf1661ea3395)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1746)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6fdf5076f10840ffbd8700b28d3f6945f6af2ebdbe1fc8fd3cbadf1661ea3395)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1746)


	 in Method: javax.crypto.spec.SecretKeySpec b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1861)


	 in Method: byte[] a(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer751)


	 in Method: javax.crypto.spec.SecretKeySpec a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1842)


Findings in Java Class: de.coronic.cor03.client.android.util.o

	 in Method: java.lang.String a(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e4ba98f17f6c7167cc3d0713fe08bd7a734a5fed58606d337673043506453654)
			First parameter (with value "SHA256") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1669)


Findings in Java Class: cor.ae.h

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1403, r5, varReplacer1403)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1403, r5, varReplacer1403)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
	ConstraintError: 9
=====================================================================
