Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/edu.harvard.college.omni-006715D6962512705F822186ABDBD229A0AF451251BF41E938F850019672E205.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer855)
		Method: <lb: java.security.KeyPair a()>
		SHA-256: 4cc3b8b8d7dd7e5bcab413800dc37caf446d5cbd08ce53d3a54450ec137293c3
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <ld: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 8ac18c9d827aa04c4bdcf2c9a96f01370521a8c663b7096aa419efdc77b758c8
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <le: java.security.KeyPair d(java.lang.String)>
		SHA-256: 79b8347f7d6f3c0d15e913104ad59be35f85db661e1dfa6bb51a62beac605f37
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <lb: java.security.KeyPair a()>
		SHA-256: e560b8b2f194e3940ed8fe3b0e66355b36917e66c8209f4cedb36657a0ffddbb
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1783)
		Method: <uj: java.lang.String a(java.lang.String)>
		SHA-256: 53147874321ded7be93bedde5df2495df425ecbccefd8510b7f7802f0b32b8d3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <le: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 14e36213ecb4589205637d8dd595e72a57b0fd68747d40d8fa384709d1cb89ca
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <le: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 74f145a0646a3a47e6f5a3c42265f5bf3b0afd8e42be11d8ac59648694a1b27b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <uj: java.lang.String a(java.lang.String)>
		SHA-256: be64d52d4f718f7c6c59a0cc9c7ec9f1d39e433b496bd94fbc546e2b0876106c
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer634)
		Method: <wr: void <init>(wr$a)>
		SHA-256: f469ec3ad92f65c8c6fc879dbec48de900788f1976333e2e3a5226263a51305f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer913)
		Method: <la: java.lang.String a(java.security.KeyPair)>
		SHA-256: 5aa8ae97269c4c59b147bb0cc3bfd372f61f1193c3bc942c6792c26fd6560801
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <ld: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: ef4e068b3a0352fe281eec7f65e3e4c9871ae67e2dd95bf5e0eee3a73a9d3c29
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <la: java.lang.String a(java.security.KeyPair)>
		SHA-256: 7da316b65a7c0fd5f4d2bbeb4462028c378712151917df43d7a9c219de9e9b45
		Secure: false

Findings in Java Class: ld

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #8ac18c9d827aa04c4bdcf2c9a96f01370521a8c663b7096aa419efdc77b758c8)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: la

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5aa8ae97269c4c59b147bb0cc3bfd372f61f1193c3bc942c6792c26fd6560801)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer913)


Findings in Java Class: uj

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #53147874321ded7be93bedde5df2495df425ecbccefd8510b7f7802f0b32b8d3)
			First parameter (with value "SHA256") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1783)


Findings in Java Class: wr

	 in Method: void <init>(wr$a)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer631, varReplacer631, varReplacer631)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer631, varReplacer631, varReplacer631)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
	ConstraintError: 3
=====================================================================
