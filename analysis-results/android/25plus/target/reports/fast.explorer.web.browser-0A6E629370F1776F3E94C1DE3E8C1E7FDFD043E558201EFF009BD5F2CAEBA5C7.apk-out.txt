Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/fast.explorer.web.browser-0A6E629370F1776F3E94C1DE3E8C1E7FDFD043E558201EFF009BD5F2CAEBA5C7.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: 63421fa07878d99f89d1adaf6e84172952bbd803537a3c6be212e72dea4653e7
		Secure: false
	Object:
		Variable: varReplacer2541
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2541)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: cee6b85e6b916e5819c6478d0b985214873956434eefb6f786b448c532cf229f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cz: java.lang.String a(java.lang.String)>
		SHA-256: 63982f204f558a23d9c25907c3cb6d4c0a79556fe7f0df9919020af8bffdaf99
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2540)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: e8580b74a5a9af0f767064b45d09c71f910dd63c629e3da14c845c1f5c7841c9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2537)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 401a978743b34038c0c2167b6b117a1472511eaa6585718e4724f7426a3c9ce0
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.ijoysoft.appwall.c.c: java.lang.String b(java.lang.String)>
		SHA-256: cd4ef629ef1df99049a308ac5feb7939720eff2c14f740550a70888929459afb
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: b513b8086ab0adc956d47bbf64c6c708040e2c827affc6fe8ec34cf3d231cc79
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2998)
		Method: <com.a.a.a.cw: byte[] b(byte[])>
		SHA-256: 8b54b44c2833bd6e79050300d371e62615cddc581ea22c4e234e1db8e4b57a42
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.a.a.a.af: void a()>
		SHA-256: 61023ae1cfde2f35061e509ad4b6215f6a7115e7610de3e8b43141d15bc1625
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1380)
		Method: <com.baidu.location.aq: java.lang.String a(byte[],boolean)>
		SHA-256: 25ff7f32a85ba9a25a5b0e0e152e01d3f4a3a36040eb5d9940c14b7206524f30
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cw: java.lang.String c(java.lang.String)>
		SHA-256: 4cae9241d15e353be2d0fa7e04e76d0cbbbb124bfdee99d1bc530f8ccd98e7aa
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cz: java.lang.String b(java.lang.String)>
		SHA-256: f3bf21ea171a0a3e77f6955ec85de897161a8966749fe0c40ccbb6f33a8978d8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2994)
		Method: <com.a.a.a.cz: java.lang.String b(java.lang.String)>
		SHA-256: 6cac371902ba805bcccb560e0f7a6062c8df32116a4f931e7c487d7ef482ae17
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2541)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: d7dfb17788e7f1c5ea0ca698fd9edbcacc8851780612f275c5676c61bda4e7ba
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cw: byte[] b(byte[])>
		SHA-256: f0465fae78b0772b817e02d8e4f265ed058f7bf3f8b5548b90dc617f0cfb7506
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2539)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 844fe261e73e3f95982d74122b8ecb678b7019c81570f3b1fed58117195e9da
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2632)
		Method: <com.a.a.a.cw: java.lang.String c(java.lang.String)>
		SHA-256: 82d3981f08a925284f43b8aaaeaf7b8c5895010a76e9ba967495588c10f16e3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4046)
		Method: <com.a.a.a.ak: void <init>(java.security.KeyStore)>
		SHA-256: 2f49f819dc0ab817e014876ef2d9fe22a23a13a7ce10584305e9ef99bd7aea36
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.location.aq: java.lang.String a(byte[],boolean)>
		SHA-256: 906af7690167eaf8d5eb11e560441c1f6bf18ca5bd404588a971220446817865
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5517)
		Method: <com.ijoysoft.appwall.c.c: java.lang.String b(java.lang.String)>
		SHA-256: 6ceb0f51733d93ae9048b6222fb05e06dbb242c2fb0c1ff8e896fa7f6e1dab8b
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 38b051f8ae81e23f12f8f3ef18d9d9f26ac0634e7a51299e3f35bffcfd74d1f7
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3210)
		Method: <com.a.a.a.cy: java.lang.String r(android.content.Context)>
		SHA-256: 3f8cf276b071fd7fa0209a56482d1ddd5995ce6e8504c656003b788b48a6de15
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: c8324634fac14dd2009afea4f5fbb3444cbf8b411a9d6c5060d5407f13eb5126
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.a.a.a.cy: java.lang.String r(android.content.Context)>
		SHA-256: 51661dc21831df68b124087c09d01c1c50b6653cf753a54ef078f2abc2e2aa12
		Secure: true
	Object:
		Variable: varReplacer2539
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2539)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 6e448f5c419740773bbc37eb6910afd7a71f9e3b56042a071bd4664bfb950b6f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3064)
		Method: <com.a.a.a.cz: java.lang.String a(java.lang.String)>
		SHA-256: ec55b8225a96d77e322d3f0263daaf3903bf1f07447b11ad29ad8768d27ab38c
		Secure: true

Findings in Java Class: com.a.a.a.cw

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #82d3981f08a925284f43b8aaaeaf7b8c5895010a76e9ba967495588c10f16e3)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2632)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2542, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2541)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2538, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2539)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2538, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.a.a.a.ak

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4044, r7, varReplacer4044)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4044, r7, varReplacer4044)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 9
=====================================================================
