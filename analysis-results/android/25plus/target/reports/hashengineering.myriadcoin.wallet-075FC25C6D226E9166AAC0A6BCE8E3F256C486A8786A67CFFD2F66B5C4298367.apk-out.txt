Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/hashengineering.myriadcoin.wallet-075FC25C6D226E9166AAC0A6BCE8E3F256C486A8786A67CFFD2F66B5C4298367.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 84577  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: 546d290a2432772f7d77fd096aafe14fd3233a466aced47ca28eb87d03674bd9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3679)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: 9233e507332df14582a6583b8531843ac9e13c2a6359443cce8ba4c198cfd40f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6501)
		Method: <com.hashengineering.crypto.Skein: void <clinit>()>
		SHA-256: 865124fc73b59fc924d3545e3eab9e6f6f1d93d5e98b0517838a15984c661b0a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6597)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 998c8f91ba3f061be49a090fecfe0f6cd444878e3a4c8c418c3d78294167246f
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 8e31e01138be74028ef3a6b58db86216562b93149a95d68d64b87e6f3437ab3b
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6592)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: fd0865e187c5c16656631ff27534ee540b118a279abd4b580a9c87cce09d09f4
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3479)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 3b3ce66ab864c79c85ae10c58d69a885212e05681ba1041eaa1e6d1d702530aa
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5165)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 9fbc9ca7c5760b0d329795f66e5027efda5480e76d2708090495ef86b150c861
		Secure: true
	Object:
		Variable: r50
		Type: java.security.cert.PKIXParameters
		Statement: specialinvoke r50.<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>($r23)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: c91c5c04f9ad4493017b9698b5414d54240b894f945aec5970e752f66e428e43
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.crypto.KeyCrypterScrypt: void <clinit>()>
		SHA-256: fdba3ff09a29f7bd6f734efc4217ade56b46c6431eddfac7a2866238eec414d5
		Secure: true
	Object:
		Variable: varReplacer6592
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6592)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 2622a5e76b68cc5a9f8622637c2d1f4958aef5a1b4be823d4a3cd80a41126d5b
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.core.ECKey: void <clinit>()>
		SHA-256: b8182c8b806eae893d66be9f5681d586425e17587ba497b9aa5ad2da95e1152
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 8e31e01138be74028ef3a6b58db86216562b93149a95d68d64b87e6f3437ab3b
		Secure: true
	Object:
		Variable: $r30
		Type: byte[]
		Statement: $z0 = virtualinvoke $r28.<java.security.Signature: boolean verify(byte[])>($r30)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: 23ab06d7af157d4146cea1b1243ee9d40e5e853ed562861ee8ccf78940d8de6b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <de.schildbach.wallet.util.Crypto: void <clinit>()>
		SHA-256: 85d47204815d2c880a4f9340a728bff586b271e476d0c85901ff5549e19af52b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6548)
		Method: <com.hashengineering.crypto.Groestl: void <clinit>()>
		SHA-256: cc41fc0282ab7c3ba299171f9665862651b6817428ad9abe800194710b8fbb1c
		Secure: true
	Object:
		Variable: $r28
		Type: java.security.Signature
		Statement: $r28 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: d3c7b83e7486f02ed3737d00a2cac468af662a3672495cefd4612607b0a6eeed
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1355)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: 18b4ed8e5049d5d9c590617d379b8048f22827d6e4769e5f9b86907cd5627e59
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6607)
		Method: <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: 89b936cba8b1788f05254f1505c5819ac088ab128099c1790042da990fa4d370
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer677)
		Method: <com.google.bitcoin.core.Utils: void <clinit>()>
		SHA-256: 850aa3e7215a9ff2cbf81a942f3a53beb5898307dfb7f5f31a291ea759f2227f
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5147)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 65ad55ebd39a36fe88fe826fa0ef61f9aa20bce505e983dca8bc4e78ad4fb3
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3472)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 5c92fbc01c11b09bfec6bd001b3da681d3f16236037abfbdbdbf86fe26c14ec3
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 42405f43c07d0cd9ac87f0e4cabacd6c6d8859ff772f57160ec37ce6ebdf0f30
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: c802f952b3f7fbd04b9e61c85189101cdaa4ba6bbac327aa4fbf07b49ff3fc88
		Secure: false

Findings in Java Class: com.google.bitcoin.core.CheckpointManager

	 in Method: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #18b4ed8e5049d5d9c590617d379b8048f22827d6e4769e5f9b86907cd5627e59)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1359)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #18b4ed8e5049d5d9c590617d379b8048f22827d6e4769e5f9b86907cd5627e59)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1349)

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1359)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1349)


Findings in Java Class: com.google.bitcoin.protocols.payments.PaymentSession

	 in Method: java.security.KeyStore createKeyStore(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c802f952b3f7fbd04b9e61c85189101cdaa4ba6bbac327aa4fbf07b49ff3fc88)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #5c92fbc01c11b09bfec6bd001b3da681d3f16236037abfbdbdbf86fe26c14ec3)
			First parameter (with value "JKS") should be any of {BKS, AndroidKeyStore, PKCS12, BouncyCastle, AndroidCAStore}
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3472)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #42405f43c07d0cd9ac87f0e4cabacd6c6d8859ff772f57160ec37ce6ebdf0f30)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5)


	 in Method: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r28.<java.security.Signature: void initVerify(java.security.PublicKey)>($r27)


Findings in Java Class: com.lambdaworks.crypto.PBKDF

	 in Method: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #998c8f91ba3f061be49a090fecfe0f6cd444878e3a4c8c418c3d78294167246f)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #998c8f91ba3f061be49a090fecfe0f6cd444878e3a4c8c418c3d78294167246f)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #998c8f91ba3f061be49a090fecfe0f6cd444878e3a4c8c418c3d78294167246f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Mac
			Constraint length(output1) + 0 > outOffset + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6600)


Findings in Java Class: com.lambdaworks.crypto.SCrypt

	 in Method: byte[] scryptJ(byte[],byte[],int,int,int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6592)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #998c8f91ba3f061be49a090fecfe0f6cd444878e3a4c8c418c3d78294167246f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>($r5, $r0, varReplacer6593, $r4, varReplacer6594)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 3
	RequiredPredicateError: 2
	ForbiddenMethodError: 2
	NeverTypeOfError: 2
	ConstraintError: 1
	ImpreciseValueExtractionError: 1
	IncompleteOperationError: 5
=====================================================================
