Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/hr.asseco.android.mtoken.otp.hr-0B0D5C11F0EDC7271F3BF705ECE0E94766ABC87C556EDBFDAE7DF227C76B76EC.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer807)
		Method: <hr.asseco.android.b.a: byte[] a(java.lang.String)>
		SHA-256: 23f36487675a508fdb2c6a17d662a5da8d8994cb796ad00582e6ef6ab183ffc3
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer808)
		Method: <hr.asseco.android.b.a: void <clinit>()>
		SHA-256: db29002f7cf95e6417b8a0b00cd7934d269ab98100310b7c171a0c4288ebc3de
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 5bdbdb75baa4a128c22a5bacd7160c61bbe95aa2bd156eea54c222926388fba8
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Mac
		Statement: $r15 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer824)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: 3fc3e38f2082e952facd0ef3131601222b5cf04c6226a36510eecd373157877a
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.SecureRandom
		Statement: specialinvoke $r12.<java.security.SecureRandom: void <init>()>()
		Method: <hr.asseco.android.widget.VirtualKeypad: void a(android.content.Context,android.util.AttributeSet)>
		SHA-256: c9dbcb02a9ec05e322e3bb614bf2579eb318ab0c5dc545b6b89d942164fd66d6
		Secure: true
	Object:
		Variable: r2
		Type: java.security.SecureRandom
		Statement: specialinvoke r2.<java.security.SecureRandom: void <init>()>()
		Method: <hr.asseco.android.b.a: void <clinit>()>
		SHA-256: a37e557d26f41a4216c88dc939bc6e152fefd3fd18e7f8e44deec71319de936c
		Secure: true
	Object:
		Variable: varReplacer916
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer916)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: c7bd4e30278300129b20cb52bc917998f557aa878a8782e9b5fa2c8369b2c3a8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer880)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: b85403fbea9a71b11267abef509ee8647e6aa761ed840272daa67e541548b2cd
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 5dc4340a2d1f046ff68210161494585e9dc00657d085bf63f64e27638a8df59a
		Secure: false
	Object:
		Variable: varReplacer880
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer880)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 238a2b6f4a7aba09e7fb63fca993908c7171b4af87ddd62ea5ab33a09640fb7e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 12698abc5636dc09553223a5d415a46844cc1e3c646dde0e598d0706b893c241
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer917)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 87a6d556092db517c1dc090d77db790793a15c7750f20f4486f455d48322629e
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 1fdf7781dc03f3f5a575c7b28ca01f300b447dd9d76d61579b5d755379552e8b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: a0918651345c7d9dbf15c518fc4924bb7186af610327daff3ad01e18bb9f1db5
		Secure: true
	Object:
		Variable: varReplacer825
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer825)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: 89d014646b4e8718cdb4a6c1c5e1eff65bf45c9428ce86c476dc9e4d97cd0447
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <hr.asseco.android.b.a: byte[] a(java.lang.String)>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: varReplacer868
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer868)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: b490440ce5755cef1f955ddcabf6cfc28c27437082222d9834593cf49d495f33
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer868)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 28c83a4f8d21054eb43dba58e0264a4c7495d76c983fe8f314abee05b0ea3af1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer825)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: 6ad04e8db183e1dbe45266860e9cfb7878d380eed391fba24b70e43953b11738
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 8495826414f22a1542ef7715924f9205effd2953ef2da58beab0c21efe9c6fe3
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer879)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 20ece2a9dcace20b2fed378697f4d4acdb1b5cadb823f5e07f78a3947d39dafd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer916)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: b8d433457968e3ebfcfd15cdaad632df301b31c201569c3978bf83a87bd203b4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer870)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: aa79f94cc81fdf5e0993792507dce7584bc4bcd7f6caf4c857e36796fc340a94
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r3, varReplacer840)
		Method: <hr.asseco.android.b.d: void a(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: 6d71a7af88a2ed65d876370dc595f5516db36aa1d318ac0e88380add3e7215c0
		Secure: true

Findings in Java Class: hr.asseco.android.b.d

	 in Method: void a(javax.crypto.Mac,byte[],int,byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #3fc3e38f2082e952facd0ef3131601222b5cf04c6226a36510eecd373157877a)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #3fc3e38f2082e952facd0ef3131601222b5cf04c6226a36510eecd373157877a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #3fc3e38f2082e952facd0ef3131601222b5cf04c6226a36510eecd373157877a)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Mac
			Constraint length(output1) + 0 > outOffset + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r3, varReplacer831)


Findings in Java Class: hr.asseco.android.b.e

	 in Method: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer825)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #3fc3e38f2082e952facd0ef3131601222b5cf04c6226a36510eecd373157877a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <hr.asseco.android.b.d: void a(javax.crypto.Mac,byte[],int,byte[],int)>($r15, $r13, $i1, $r16, $i0)


Findings in Java Class: hr.asseco.android.b.a

	 in Method: byte[] a(byte[],byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer880)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer881, $r3)


	 in Method: byte[] b(byte[],byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer868)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer869, $r3)


Findings in Java Class: hr.asseco.android.f.a.a

	 in Method: byte[] a(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer916)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	ImpreciseValueExtractionError: 1
	IncompleteOperationError: 2
	RequiredPredicateError: 6
	TypestateError: 2
=====================================================================
