Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/in.invpn-10980C85EE593103263EDAE09B5602842B49B2A39F8E7F1E77EE8EFB10C39982.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 19732  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer6623
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6623)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 328d4a2997d5faeb5380a5f4198b77593df0f6ef8c69a595c516adb4f25e943b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer616)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: a2f7057488e50b7144e57dee955eac452d4adce9706027ef3d02365e9bdb256c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6428)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 3d9d706344aeb82ac4f0a549aab930ab13f4ee5a159a99a24309cdc938c78aed
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6637)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a()>
		SHA-256: 8751b4624044755c71bc205c13557b3c0be396abb0a7f569302f0b136c32f737
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2176)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: b69d3d82626f897421793f5017df1a4c112dfaf691c8c19daa090449dcd67943
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: ce27a79f159a0b0e9d5beb5b86a8d9d0630db56327d0e0bd86801b701d7f64e7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6621)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 2097ffed7896f6aff178aa75120039304babe3962d8774e12c28f511fbfc0887
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 76c238b127f0dc616e39488c530b32fcba1af40805ec7fc0872956a83a6da782
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 7a5b6ff3104b0c697c70f8001151345e86e1c53eed3860aed8f6f84bad7a619c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: d86468cc9392a30c0a2ba2dbe963f5571fbe21bc8208cf57bb28622d3680cc60
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1995)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: bea2090a36cc511bbd9b99c1eae8b03238562fd3b77ffbcb7d5c1229e9f31d5e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer620, varReplacer621)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 716651c16b96b91452dfb8934e8b8a4fa7b8b1b36bdeda378e41e82608656c1e
		Secure: true
	Object:
		Variable: varReplacer2177
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2177)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 3ee8941db7c4df569faf26e6e6b26d73c3918728faca23af20919062af28445c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: bbe0b8ef84642ecfe2d0251874077e3b23da2170e4f2fb08bea07ceb3b40eade
		Secure: false
	Object:
		Variable: varReplacer6580
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6580)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: 8a98e072583020982ee7cfbb9396a1fa46d82db88668a00fbbf13a71a85c4014
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)>
		SHA-256: 3d1c29f9a6a16f7cacfdcd66eb1c08940e0808e6b96f4e756037ca7ac8bac0b2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6898)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 5f7b41b0b9e674b7dc97d9ca75c1d2a36e4c46d260f2699da16a45445a13ac30
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer622)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 93481ac4082510dd19767135b8cb24341f11db205fa225c92b50b31896771d97
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: c5a57e32c0226a86444337cd105d2e743b580d87ce60e2157049afb4d2848a9a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2177)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 6009e96678e97851ef2d8964a7eba2dd914a951230df4f2c25f03609b99dcb22
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: d3e541c1dd63b5d8b4b266e404ab796177c7a82d78852375cf3fcf1b299b6aa7
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3117)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: 21c4037a873621d0ea58212550dc301722b757050a87494ca5ffac1dfed30c7a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: a496e81fbb4fcdc5e03a647a323f9f888baa3ef5d73648a3e0b5a3b467ddbd1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 1cfaf2cb7506204331ef3ecc4990394b16071f06c77b1b96aef866a09c9d21cc
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 53e689f0838acc09cc36cef29f7f79a88f3727bc41513a6f98273796d8efc71d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 6eeb388f9f05d7f3e8f96664808a2e18b13430fbe401cac4e442507aee164771
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2913)
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: 36fc55480fc208f480f28d430d4c5723b14ac4cef0d2181aa807c545de5f3b87
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 85075d05eb7693deb90f4991b9c7d9d0798b6b3872d213e4dd07d55a4a51f8b6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 9bec08917d8c17d6308fce1047325c6c7c3f151094e6e268fc8e7d3e89e5beab
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2604)
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: 7a86a6e2401d6a0cc07ec229ac294e803929d5f6b09cfd33d38d8ef27b637fb0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer679)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: c664a00fcf2a9f36a1790631d7883951d35e6f6b7fe589352852891368bfd3c3
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: 112de34efa7b8be9b5ffcb803e9a8d349b144a8eb478ee5a675a596c16edd59c
		Secure: true
	Object:
		Variable: varReplacer1996
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1996)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 61d5fbd40021a195f9f08c55e6fb1b1e5f816b6b2f7048490b498acfc3b922e1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.android.agoo.common.c: byte[] a(byte[],javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 8f2e7913c00617921e7d852b9a31479fa9f5aae33209b7f9e78a25b1061dfac
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: 6d1a39c1831e5568cb7c076330221adccad2df3c11e1e633666447394a4bab1a
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: 8f4b35d04dbcf5b1d5c11b169e15fe55a7ce24c9198acfcbf22b27572989e7da
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 114e16caa40e734a0e255361d38b3835adb74935128fc69bdb16f1ab64dce330
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 266ce8ef6af251212529e05fd6070ced123a10d0494f7eae63a9e8bb332a6b13
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6429)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: d9e6f41c5877a9adbe7c72c2bf7658ed4298146ddc99779102980f00d683fab1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 9cfd93e16e92695722f1605f9722d0827a7d09b24ac41bd14056584a47c8b9b9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6615)
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 8638839cb7df875847a86db2af659ed60188fbe9a2b8497b9b77442830e954cf
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: bffe37a2d2b82caef2b49a93bd47e25da59c724bee9ad61d727e7de99f7acae
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6580)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: df92c02dcc3a66093bc1f3e32db9b753e54ba973031921490dbd974a9017e440
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2181)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: c3aca0cba7cadeeeb307b4019b086f6f93938a8be5c412ae3368d722c47bcdf3
		Secure: false
	Object:
		Variable: varReplacer617
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer617)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 6de9065a79075e5d68510049fb6f299109c3d03ba515e4cfc1d9e3949028313b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: b76e41fac3e3573bc28b2b0271af174bb43f8e90d4fcf4a9a078f6c58c75983c
		Secure: true
	Object:
		Variable: varReplacer2181
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2181)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 6e64b15c15f77bb0fc18d7b907bf094b53e3ef149388e57b8f04971853b66748
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2912)
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: 64a8ad730e0def8b95b7c24b9a03bf2e91c86f54624dfe79c4d051e9bb94f907
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: ac2912fd2a8cc62f2d028959fdfebed1a18ae39f8a205fd829cc8080606487cd
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2179)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: c0dd76d133339e49de76443b333db2fd9097deee88aacdedefa6777e33ef8b42
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6774)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 4bad5d8d86bcaf05a0705c8aab9a436ce03b067beec8caf3d5760f415f23d538
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1996)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: f9607110c593256628d9760e296cb0e46b4629194f8ce299d769d6d615eaf546
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5677)
		Method: <u.aly.bb: void <init>(java.security.KeyStore)>
		SHA-256: 702a12034f01b5bbba9beaf4125f38e8ae6146feb9fc0310e0ebce12fa1586c3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer617)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 436b4fe910508bbcf9c534c57a7f32580cf5c4342b6db9cc64c615fb00d9e6a5
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: a82afbb0761a6034a969f37b27432ebbeb3f0ad07c0c9c757c6dc182b3a5c0b2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: 1192797ef7ac70aefcb78b371048d02d5d6336b44a9003cf24a1687fda802802
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.aw: void a()>
		SHA-256: 6839d53c5c853cf50908053a93d66c4ab720e87bbff149d04df2410de8242ab0
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6901)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: 4eb7aed0f6e2c19d3a3a85d80c8ed79ba1758fc382b1bd0642452ac23448fa22
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: 3249420ad06991ff84956727aec3c333639d8ef077ab4291201463339c541e4b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 2705022dbbf2fad58b29aa7b832e91827679edd40f99b8f72f776b0057153b67
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 480d62b2174afc77ea171637c712e1afce063fa35eb4849bf29d0ae0c68791d8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2274)
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: de1c797cd3944d4c71d0c65ea291e80d938ce9a395fb856422eb9da84a243c7a
		Secure: true
	Object:
		Variable: varReplacer6429
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6429)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 14ac73ec9b885af41388701a1b3a0b90b9346810382e9018e4f27cbdd640445c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1914)
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: 8abe5cdada74aa005fd78e5aeedaa89e127bf2553c4da253bc2985ddfe8751e1
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6623)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: cc0c4d9a1007273a7f7fbc782aca31b66510df66b171242dfc0cbcd988883d9a
		Secure: false

Findings in Java Class: u.aly.bs

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7a86a6e2401d6a0cc07ec229ac294e803929d5f6b09cfd33d38d8ef27b637fb0)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2604)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2178, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2178, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2177)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2180, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2181)


Findings in Java Class: com.alibaba.sdk.android.httpdns.g

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5f7b41b0b9e674b7dc97d9ca75c1d2a36e4c46d260f2699da16a45445a13ac30)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6898)


Findings in Java Class: com.ta.utdid2.b.a.a

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer615, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer617)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6427, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6429)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6427, $r3, $r2)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer619, $r2)


Findings in Java Class: org.android.agoo.common.c

	 in Method: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer6629, $r0, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer6629, $r0, $r3, $r4)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6623)


Findings in Java Class: com.umeng.message.proguard.b

	 in Method: java.lang.String a(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1994, $r6, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1996)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1994, $r6, $r7)


Findings in Java Class: org.android.agoo.control.AgooFactory

	 in Method: java.lang.String parseEncryptedMsg(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6580)


Findings in Java Class: u.aly.bb

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5678, r7, varReplacer5678)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5678, r7, varReplacer5678)


Findings in Java Class: com.ta.utdid2.device.c

	 in Method: java.lang.String b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 28
=====================================================================
