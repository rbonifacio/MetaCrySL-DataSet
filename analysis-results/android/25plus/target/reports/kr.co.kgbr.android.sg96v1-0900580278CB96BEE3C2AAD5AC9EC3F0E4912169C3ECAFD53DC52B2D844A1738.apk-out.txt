Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/kr.co.kgbr.android.sg96v1-0900580278CB96BEE3C2AAD5AC9EC3F0E4912169C3ECAFD53DC52B2D844A1738.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer883)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: df378e46aedaaabe20e30bb4375409f9ba8b9453afbb4c7b259d3649be313159
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: a1672d523bdb1d62e6aa591eebae474c0d56146b23328619d7d686f732572bd0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: e931bd46e7d9ddc749e37536babd18ef495da0cad79eb88630553a684700e180
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1687)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: dab713aea470fdef34fb2528a42bfe5fd02ceb142380bbe37cd4026fc1df63b9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2158)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 228e8ac4b65d3f1a5fd3fd781211bbd34199069a7449f57d65184c55b006ac7f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1799)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: 5b5090ec5d92a5c73be7f6ae1e3618837a0f2d33e2b88324b071f4d423a39ffd
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1801)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: f112bc695c9f6cddfa1b649c6e34b81f514937628de1007db697e087a03d4ce1
		Secure: false
	Object:
		Variable: varReplacer1684
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1684)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: f64cebe8b723c525f71a1165bd690f50e11e9f0ed0432b521c1c45be45a9201c
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: 312bf13afc9aec2dfa0131117dc3e200a55ecd534a7fd640682c03f14a024398
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1684)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: 301c6ccd877d188a8442e886f358acff08b6b1c9188d57a3e4abd1a6cb180751
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: 312bf13afc9aec2dfa0131117dc3e200a55ecd534a7fd640682c03f14a024398
		Secure: false
	Object:
		Variable: varReplacer1799
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1799)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: eeced4658d2d34bfce2b9aa44bc79787dd290fa9fbff4967fe053905d0c5e08
		Secure: false

Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer880, varReplacer880, varReplacer880)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer880, varReplacer880, varReplacer880)


Findings in Java Class: com.clbee.authorviewer.aes256decoder.AES256Cipher

	 in Method: byte[] AES_Decode(java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1682, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1684)


	 in Method: byte[] AES_Decode(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1803, $r4, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1799)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
=====================================================================
