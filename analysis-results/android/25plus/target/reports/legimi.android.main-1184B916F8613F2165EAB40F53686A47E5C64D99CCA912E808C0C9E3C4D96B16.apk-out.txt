Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/legimi.android.main-1184B916F8613F2165EAB40F53686A47E5C64D99CCA912E808C0C9E3C4D96B16.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer837)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 21f3c60e982e249e2a79a01b1630266387bace75ba208c927416e93fddf82f31
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.n7mobile.crypto.Cryptographer: java.lang.String hashUsingSha1(byte[])>
		SHA-256: 384a696df11b6f2723583ace528ac06c1e08a03b1525bc7184010b3a88c5f1c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.n7mobile.crypto.Cryptographer: java.lang.String encryptAes(java.lang.String)>
		SHA-256: 25027dbd1a684c19ac4ce64b8c2ecd5d79b4ab97f2b2c92b6435e68731c79e9f
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer688)
		Method: <net.hockeyapp.android.Constants: java.lang.String tryHashStringSha256(android.content.Context,java.lang.String)>
		SHA-256: 68e29ada5ca1ef9396e7dbc4301232f45384f01da08be1c99322cc23c165507f
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2be18435da5845a85a621cf2f80cce42f76a23a9cb29b2054bcb6f671e7c6e60
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1500)
		Method: <com.n7mobile.crypto.Cryptographer: java.lang.String encryptRsaBytes(byte[])>
		SHA-256: 2e0b57689d6c81cca697538431266c28717a581d464baf1e0876b036f22c41cb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.n7mobile.crypto.Cryptographer: java.lang.String encryptRsaBytes(byte[])>
		SHA-256: dda2df5f6d61986616f8162260d023ac3432781b2358ac518407e17122599fd5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r1, varReplacer834, varReplacer835)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: bff897763e9f466cdc9b25d7810b4fd6134063c82bfa95033ad1d83c54b5370c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1480)
		Method: <com.n7mobile.crypto.Cryptographer: void generateAesKey(android.content.Context)>
		SHA-256: 8e191f51a656517f69e18e1f285197c14e70526ced860d39b424b99cf55f91c2
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2010)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzyy()>
		SHA-256: f70b983531f982ad62e5987d95f3a9f6bbfbc59afd74d3abd5ab216e44f9d6c6
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.Constants: java.lang.String tryHashStringSha256(android.content.Context,java.lang.String)>
		SHA-256: 1c4617f6643fd8a383be06a7beb8b7e7ccfaff6dbdea81a200db6a0e670576f1
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1493)
		Method: <com.n7mobile.crypto.Cryptographer: java.lang.String encryptAes(java.lang.String)>
		SHA-256: 27e573c4c09c3664fdffddad2963ee6b6ce1f04bc681313f7bce0c8af2774568
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1484)
		Method: <com.n7mobile.crypto.Cryptographer: void generateAesKey(android.content.Context)>
		SHA-256: 41864e7c7171e82b1d85fed51769a115c272d77c40b8a62435b170674caa18ad
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1968)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 831c9ac6b77dbfd5eabfc5db935e35e47a4e0190640ef5105e9ebfecfa8b1b17
		Secure: false
	Object:
		Variable: r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.n7mobile.crypto.Cryptographer: java.lang.String encryptAes(java.lang.String)>
		SHA-256: 52522640160935d04b7c0b4be15aa7c9f78f24c0babcc2adc0f09e15449bed07
		Secure: false
	Object:
		Variable: varReplacer842
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer842)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 736ed6f1d37c9110eb21e657bb05dfcd5ca45ec921f17698c92b0b8c857c3a41
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeg(java.lang.String)>
		SHA-256: ed4e9ddb7251b0e54551b6573d9e727c02047817b95d6673a730facf000f7796
		Secure: true
	Object:
		Variable: varReplacer835
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r1, varReplacer834, varReplacer835)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: b194023954f12a43a4cdc2860db67f12138568dd7466adb431cfea0f92f2ca34
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer678)
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: 9e402e47b6c30703b2ad04cecf0821f3aefb52e0a7c1b9072d09d2723666d6e7
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r10 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: f564e68a9287f8b3a99a59984f43ed9ba60e3bb2d720648e32576ece2cfafd60
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: fe3a4750366fbcae8ce205a822366227abc6e190eb81ad2eb2caed7221c0ffc2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzyy()>
		SHA-256: 747cd7a5f455355ff0fe5f8014ce696ade9b9ee6cb3a69db753af9edf316dde6
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 9b8a78d9edc971be91147cb909e582cf4e5d47ad532216cffc3f02042f047f00
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r26
		Type: java.security.Signature
		Statement: $r26 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1739)
		Method: <com.n7mobile.cmg.ThreadMessageDownloader: java.lang.String downloadJson(java.lang.String,boolean)>
		SHA-256: e0f81a33bf51ea7bd25ef9e928693edbb1ebf37180ee791d1227c08324ab3bcc
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: varReplacer1484
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1484)
		Method: <com.n7mobile.crypto.Cryptographer: void generateAesKey(android.content.Context)>
		SHA-256: d1fd63a700d77e471ca6bea068cd066db445816f31b0b7d5a38498f51ca6e5ca
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer836)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: df10114aacf17a4c5ae56b505e9185fe1ef9dae646ead9ee3e1684575f129059
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1478)
		Method: <com.n7mobile.crypto.Cryptographer: void generateAesKey(android.content.Context)>
		SHA-256: 897445143ca097f035b2d72d32de3d520d265101f4b32e2a9acd3e4c26badd46
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1785)
		Method: <com.n7mobile.cmg.ThreadMessageDownloader: boolean verifyCertificate(com.n7mobile.crypto.Cryptographer,byte[],java.lang.String)>
		SHA-256: 62416f133595f891e849e43df33f93d1ccb201d249f9ddcfbf86b6b64a09e777
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1777)
		Method: <com.n7mobile.crypto.Cryptographer: java.lang.String hashUsingSha1(byte[])>
		SHA-256: ddbbdac3472c09099d97d866ae4e90b6eb15aa08940f01f372a509d7a8687d9d
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 2abb37024bd464fc0c2ccf69b2ceddf0aedb43bffcb4711b7b94cf28f4b552ea
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2be18435da5845a85a621cf2f80cce42f76a23a9cb29b2054bcb6f671e7c6e60
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <com.n7mobile.cmg.ThreadMessageDownloader: boolean verifyCertificate(com.n7mobile.crypto.Cryptographer,byte[],java.lang.String)>
		SHA-256: 701f0e5a5e5b923b763c628999b87fb0b14674dd1cb06b186f66a521b44700fa
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer841)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: c25e45e2fad9455c0529629fa417b0834951d51d1fb5b2c173519866e31c89a2
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer842)
		Method: <com.google.android.vending.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: e50db81523987d9cf9d20b333c1ef3e58c42e00e8041ea5030df1f9bfecc8d22
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r7.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.n7mobile.crypto.Cryptographer: void generateAesKey(android.content.Context)>
		SHA-256: cd5e06d4f27b799f8342fed07bc82015311d4f5d5bea5ffb27b1c7f725a63ebd
		Secure: false

Findings in Java Class: com.n7mobile.cmg.common.PrefsAgent

	 in Method: java.lang.String getRegistrationId(android.content.Context)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #21f3c60e982e249e2a79a01b1630266387bace75ba208c927416e93fddf82f31)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r3 = virtualinvoke $r1.<com.google.android.vending.licensing.PreferenceObfuscator: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer1472, varReplacer1473)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c25e45e2fad9455c0529629fa417b0834951d51d1fb5b2c173519866e31c89a2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r3 = virtualinvoke $r1.<com.google.android.vending.licensing.PreferenceObfuscator: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer1472, varReplacer1473)


	 in Method: void setRegistrationId(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c25e45e2fad9455c0529629fa417b0834951d51d1fb5b2c173519866e31c89a2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke $r2.<com.google.android.vending.licensing.PreferenceObfuscator: void commit()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #21f3c60e982e249e2a79a01b1630266387bace75ba208c927416e93fddf82f31)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke $r2.<com.google.android.vending.licensing.PreferenceObfuscator: void commit()>()


Findings in Java Class: com.n7mobile.cmg.CMG

	 in Method: java.lang.String getRegistrationId(android.content.Context)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c25e45e2fad9455c0529629fa417b0834951d51d1fb5b2c173519866e31c89a2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r4 = virtualinvoke $r2.<com.google.android.vending.licensing.PreferenceObfuscator: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer818, varReplacer819)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #21f3c60e982e249e2a79a01b1630266387bace75ba208c927416e93fddf82f31)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r4 = virtualinvoke $r2.<com.google.android.vending.licensing.PreferenceObfuscator: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer818, varReplacer819)


Findings in Java Class: com.google.android.vending.licensing.AESObfuscator

	 in Method: void <init>(byte[],java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bff897763e9f466cdc9b25d7810b4fd6134063c82bfa95033ad1d83c54b5370c)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r10 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r10 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer842)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bff897763e9f466cdc9b25d7810b4fd6134063c82bfa95033ad1d83c54b5370c)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r1, varReplacer834, varReplacer835)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r1, varReplacer834, varReplacer835)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bff897763e9f466cdc9b25d7810b4fd6134063c82bfa95033ad1d83c54b5370c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r1, varReplacer834, varReplacer835)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.n7mobile.cmg.ThreadMessageDownloader

	 in Method: java.lang.String downloadJson(java.lang.String,boolean)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e0f81a33bf51ea7bd25ef9e928693edbb1ebf37180ee791d1227c08324ab3bcc)
			Operation on object of type java.security.Signature object not completed. Expected call to java.security.Signature: void update(byte), java.security.Signature: void update(byte[],int,int), java.security.Signature: void update(byte[]), java.security.Signature: void update(java.nio.ByteBuffer), verify
			at statement: virtualinvoke $r26.<java.security.Signature: void update(byte[])>($r24)


	 in Method: boolean verifyCertificate(com.n7mobile.crypto.Cryptographer,byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #831c9ac6b77dbfd5eabfc5db935e35e47a4e0190640ef5105e9ebfecfa8b1b17)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1968)


Findings in Java Class: com.n7mobile.crypto.Cryptographer

	 in Method: java.lang.String encryptRsaBytes(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1499, $r2)


	 in Method: void generateAesKey(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1481, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1484)


	 in Method: java.lang.String encryptAes(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1492, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1492, $r3, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 38

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	ConstraintError: 3
	RequiredPredicateError: 13
	IncompleteOperationError: 8
=====================================================================
