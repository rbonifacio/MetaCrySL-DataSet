Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/org.acs.pubs.cen.optimum-0D7241FC8FBDBC7EFD4983F32647EE78DB981C249AF8449AE74848EC4E236FE1.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer500)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: 34d16fef1d3a718d3698daecddb4ed0cb83b32b44b53d9ca8d7765a90f5cdff7
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: e0c72fc41e053c4940df80ac214885a81274dd181ac131e0da4a0b5bbb5e0b40
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: c3c5dc1682e57a512b72e963a5fb41a7b7db9c418a19121e48cc25d1ec1b91f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2880)
		Method: <com.google.ads.b: java.math.BigInteger d()>
		SHA-256: f39153f94a3857a53913aea26891a049b67ab1e4931a0f1fdbf10c795bcac5c5
		Secure: true
	Object:
		Variable: varReplacer500
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer500)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: 5ce17357b8bd32c61f582f97200a116ac057a50da89f607d717f16091daf7fa9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: b5fbd8fab021f359681408ce0fede977eb5cbaa7718495e87f7a6c4b0e21dad
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 359dcec9aaf4e026bd2f80646775c20e7cb06914ed0df52dc225fa2dc31ea5cf
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: f980e9159ee075a943ba208be792ee73d74bfeae2d064310d648d299f7429f02
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3232)
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: b00488d8030db213432d6fbc7a1db18225713f3687e54dd1511c72c54903944c
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3161)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: d576e3d60bdfe3d2fa5e1680dccc178253a28cb7763dbc13bd657d746d8e0cad
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r3.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r8, $r4)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: b27f21658c9920342cc983b077112d9e811ed68315bf0d26e77d7368b49dbf7d
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3160)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: 48012726c793a7be87e5a09331c7748ac004ccb2f9471c9a39f51c59aa85b61
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer498)
		Method: <org.acs.pubs.cen.optimum.utils.ZipDecrypter: java.io.File decrypt(java.io.File)>
		SHA-256: e9c951a519a0b865dbf96dbfa0b225f13873feaf34cb35cbdc3908422600d1ab
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 9851cb4f5e335a8afd2f6fa8953ca357f69d8b25ee0f7d811070c05075a507ed
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.b: java.math.BigInteger d()>
		SHA-256: 78a979d5efddbf2afb96ae4c070ca3d2463759077cfed92e4b0a58617d6126a5
		Secure: true
	Object:
		Variable: varReplacer3161
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3161)
		Method: <com.google.ads.an: byte[] a(byte[],java.lang.String)>
		SHA-256: 20d59801d502afc03b05cf914f1292113d35a013a2344c97d58e8bc591929fbf
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2229)
		Method: <org.acs.pubs.cen.optimum.services.SyncJobsService: javax.net.ssl.SSLSocketFactory createSslSocketFactory()>
		SHA-256: ce6d9243096e5ccf9859056b8fc5f8de716d82c964be8284f72d2d09faac403c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.ads.aj: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 397770e48d3a64bf1d52958c037bf479b6896d2b87107b9d677024e3763bca1c
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <org.acs.pubs.cen.optimum.inApp.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c678472b4c19c53650e756c77dab364889209724da847a2f30c698a83517174f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1707)
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: 61d07ef7d873f393aebb5c7dbdbfd4e402b284b36cecafded7ba21833e793e9f
		Secure: true
	Object:
		Variable: r4
		Type: java.security.SecureRandom
		Statement: specialinvoke r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.acs.pubs.cen.optimum.services.SyncJobsService: javax.net.ssl.SSLSocketFactory createSslSocketFactory()>
		SHA-256: eb15ec94c9b11872c8e3c7fe70db38019b9f3a3cb83bbc73fde8fbe444b1eea7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2521)
		Method: <org.acs.pubs.cen.optimum.inApp.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: ae8f6d8ae617d2c26dc88bd1960f224da3c91092c987df8492a4cd38d0c0950f
		Secure: false

Findings in Java Class: org.acs.pubs.cen.optimum.utils.ZipDecrypter

	 in Method: java.io.File decrypt(java.io.File)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b27f21658c9920342cc983b077112d9e811ed68315bf0d26e77d7368b49dbf7d)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), close, java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = virtualinvoke $r3.<javax.crypto.CipherInputStream: int read(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e9c951a519a0b865dbf96dbfa0b225f13873feaf34cb35cbdc3908422600d1ab)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer498)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e9c951a519a0b865dbf96dbfa0b225f13873feaf34cb35cbdc3908422600d1ab)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r3.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r8, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e9c951a519a0b865dbf96dbfa0b225f13873feaf34cb35cbdc3908422600d1ab)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer498)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer500)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b27f21658c9920342cc983b077112d9e811ed68315bf0d26e77d7368b49dbf7d)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), close, java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = virtualinvoke $r3.<javax.crypto.CipherInputStream: int read(byte[])>($r1)


Findings in Java Class: com.google.ads.an

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3161)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3162, $r8, $r2)


Findings in Java Class: org.acs.pubs.cen.optimum.services.SyncJobsService

	 in Method: javax.net.ssl.SSLSocketFactory createSslSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2230, r5, r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2230, r5, r4)


Findings in Java Class: org.acs.pubs.cen.optimum.inApp.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 3
	RequiredPredicateError: 7
	ConstraintError: 2
=====================================================================
