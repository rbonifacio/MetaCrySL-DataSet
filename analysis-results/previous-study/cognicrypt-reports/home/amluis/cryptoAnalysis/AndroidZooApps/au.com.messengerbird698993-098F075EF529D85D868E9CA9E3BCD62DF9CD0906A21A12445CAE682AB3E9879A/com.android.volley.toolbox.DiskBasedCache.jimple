public class com.android.volley.toolbox.DiskBasedCache extends java.lang.Object implements com.android.volley.Cache
{
    private static final int CACHE_MAGIC;
    private static final int DEFAULT_DISK_USAGE_BYTES;
    private static final float HYSTERESIS_FACTOR;
    private final java.util.Map mEntries;
    private final int mMaxCacheSizeInBytes;
    private final java.io.File mRootDirectory;
    private long mTotalSize;

    public void <init>(java.io.File)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.io.File $r1;
        int varReplacer983;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.io.File;

        varReplacer983 = 20971520;

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void <init>(java.io.File,int)>($r1, varReplacer983);

        return;
    }

    public void <init>(java.io.File, int)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.io.File $r1;
        int $i0, varReplacer984, varReplacer986;
        java.util.LinkedHashMap $r2;
        float varReplacer985;
        long varReplacer987;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        varReplacer984 = 16;

        varReplacer985 = 0.75F;

        varReplacer986 = 1;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(varReplacer984, varReplacer985, varReplacer986);

        $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries> = $r2;

        varReplacer987 = 0L;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = varReplacer987;

        $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory> = $r1;

        $r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes> = $i0;

        return;
    }

    private java.lang.String getFilenameForKey(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1, $r4, varReplacer1791, varReplacer1792;
        java.math.BigInteger $r2, r8;
        java.lang.Throwable $r3;
        java.security.MessageDigest $r5;
        byte[] $r6;
        int $i0, varReplacer1793, varReplacer1794;
        java.lang.StringBuilder $r7, r9;
        java.security.NoSuchAlgorithmException r10;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $r4 = null;

     label01:
        varReplacer1791 = "MD5";

        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1791);

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r6);

     label02:
        r8 = new java.math.BigInteger;

        $r2 = r8;

     label03:
        $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        varReplacer1793 = 1;

        specialinvoke r8.<java.math.BigInteger: void <init>(int,byte[])>(varReplacer1793, $r6);

        varReplacer1794 = 16;

        $r1 = virtualinvoke $r2.<java.math.BigInteger: java.lang.String toString(int)>(varReplacer1794);

     label04:
        $r4 = $r1;

     label05:
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

     label06:
        if $i0 >= 32 goto label10;

        r9 = new java.lang.StringBuilder;

        $r7 = r9;

     label07:
        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer1792 = "0";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1792);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r4 = $r1;

        goto label05;

     label09:
        $r3 := @caughtexception;

        r10 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke r10.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label10:
        return $r4;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label09;
    }

    private void pruneIfNeeded(int)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        int $i0, $i3, $i7;
        long $l1, $l2, $l5, $l6;
        byte $b4;
        boolean $z0;
        java.lang.Object[] $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r7;
        java.lang.String $r8, varReplacer1804, varReplacer1805, varReplacer1806;
        java.io.File $r9;
        float $f0, $f1;
        java.lang.Integer $r10;
        java.lang.Long $r11;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $i0 := @parameter0: int;

        $l2 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l1 = (long) $i0;

        $l2 = $l2 + $l1;

        $i3 = $r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes>;

        $l1 = (long) $i3;

        $b4 = $l2 cmp $l1;

        if $b4 >= 0 goto label1;

        return;

     label1:
        $z0 = <com.android.volley.VolleyLog: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r1 = newarray (java.lang.Object)[0];

        varReplacer1805 = "Pruning old cache entries.";

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>(varReplacer1805, $r1);

     label2:
        $l1 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $i3 = 0;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r5;

        $r8 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        if $r8 == null goto label7;

        $r8 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r9 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r8);

        $z0 = virtualinvoke $r9.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label6;

        $l5 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l6 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l5 = $l5 - $l6;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l5;

     label4:
        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        $i3 = $i3 + 1;

        $l5 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l6 = (long) $i0;

        $l5 = $l5 + $l6;

        $f0 = (float) $l5;

        $i7 = $r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes>;

        $f1 = (float) $i7;

        $f1 = $f1 * 0.9F;

        $b4 = $f0 cmpg $f1;

        if $b4 >= 0 goto label3;

     label5:
        $z0 = <com.android.volley.VolleyLog: boolean DEBUG>;

        if $z0 == 0 goto label7;

        $r1 = newarray (java.lang.Object)[3];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[0] = $r10;

        $l5 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l1 = $l5 - $l1;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[1] = $r11;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 - $l2;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r1[2] = $r11;

        varReplacer1804 = "pruned %d files, %d bytes, %d ms";

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>(varReplacer1804, $r1);

        return;

     label6:
        $r1 = newarray (java.lang.Object)[2];

        $r8 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r1[0] = $r8;

        $r8 = $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r8 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r8);

        $r1[1] = $r8;

        varReplacer1806 = "Could not delete cache entry for key=%s, filename=%s";

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>(varReplacer1806, $r1);

        goto label4;

     label7:
        return;
    }

    private void putEntry(java.lang.String, com.android.volley.toolbox.DiskBasedCache$CacheHeader)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r2, $r5;
        long $l0, $l1, $l2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Object $r4;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.android.volley.toolbox.DiskBasedCache$CacheHeader;

        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $l1 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l0 = $r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l1 = $l1 + $l0;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l1;

     label1:
        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;

     label2:
        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r4;

        $l1 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l2 = $r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l0 = $r5.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l0 = $l2 - $l0;

        $l1 = $l1 + $l0;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l1;

        goto label1;
    }

    private static int read(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0;
        java.io.EOFException $r1;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        if $i0 != -1 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        return $i0;
    }

    static int readInt(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0, $i1;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i0 = $i0 << 0;

        $i1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $i1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i1 = $i1 << 16;

        $i0 = $i0 | $i1;

        $i1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $i1 = $i1 << 24;

        $i0 = $i0 | $i1;

        return $i0;
    }

    static long readLong(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l1 = (long) $i0;

        $l1 = $l1 & 255L;

        $l1 = $l1 << 0;

        $l1 = 0L | $l1;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 8;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 16;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 24;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 32;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 40;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 48;

        $l1 = $l1 | $l2;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>($r0);

        $l2 = (long) $i0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 56;

        $l1 = $l1 | $l2;

        return $l1;
    }

    static java.lang.String readString(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0;
        long $l1;
        byte[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.InputStream;

        $l1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: long readLong(java.io.InputStream)>($r0);

        $i0 = (int) $l1;

        $r1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: byte[] streamToBytes(java.io.InputStream,int)>($r0, $i0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF-8");

        return $r2;
    }

    static java.util.Map readStringStringMap(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0, $i1;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r4;
        java.util.HashMap r5;

        $r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int readInt(java.io.InputStream)>($r0);

        if $i0 != 0 goto label3;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label1:
        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r3 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: java.lang.String readString(java.io.InputStream)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        $r4 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: java.lang.String readString(java.io.InputStream)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();

        $r1 = (java.util.Map) $r2;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        r5 = new java.util.HashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.HashMap: void <init>(int)>($i0);

        goto label1;

     label4:
        $r1 = (java.util.Map) $r2;

        return $r1;
    }

    private void removeEntry(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        long $l0, $l1;
        java.lang.Object $r2;
        java.util.Map $r3;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r4;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r2;

        if $r4 == null goto label1;

        $l1 = $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l0 = $r4.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l0 = $l1 - $l0;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l0;

        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    private static byte[] streamToBytes(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer1787, varReplacer1788, varReplacer1789;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i0 - $i1;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, $i1, $i2);

        if $i2 == -1 goto label2;

        $i1 = $i1 + $i2;

        goto label1;

     label2:
        if $i1 == $i0 goto label3;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer1787 = "Expected ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1787);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1788 = " bytes, read ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1788);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        varReplacer1789 = " bytes";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1789);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label3:
        return $r1;
    }

    static void writeInt(java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        int $i0, $i1;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $i1 = $i0 >> 0;

        $i1 = $i1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        $i1 = $i0 >> 8;

        $i1 = $i1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        $i1 = $i0 >> 16;

        $i1 = $i1 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i1);

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        return;
    }

    static void writeLong(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        long $l0, $l1;
        int $i2;
        byte $b3;

        $r0 := @parameter0: java.io.OutputStream;

        $l0 := @parameter1: long;

        $l1 = $l0 >>> 0;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l1 = $l0 >>> 8;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l1 = $l0 >>> 16;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l1 = $l0 >>> 24;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l1 = $l0 >>> 32;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l1 = $l0 >>> 40;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l1 = $l0 >>> 48;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        $l0 = $l0 >>> 56;

        $i2 = (int) $l0;

        $b3 = (byte) $i2;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($b3);

        return;
    }

    static void writeString(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        java.lang.String $r1;
        byte[] $r2;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof $r2;

        $l1 = (long) $i0;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeLong(java.io.OutputStream,long)>($r0, $l1);

        $i0 = lengthof $r2;

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        return;
    }

    static void writeStringStringMap(java.util.Map, java.io.OutputStream) throws java.io.IOException
    {
        java.util.Map $r0;
        java.io.OutputStream $r1;
        int $i0;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.String $r6;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.io.OutputStream;

        if $r0 == null goto label2;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeInt(java.io.OutputStream,int)>($r1, $i0);

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeString(java.io.OutputStream,java.lang.String)>($r1, $r6);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.String) $r4;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeString(java.io.OutputStream,java.lang.String)>($r1, $r6);

        goto label1;

     label2:
        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeInt(java.io.OutputStream,int)>($r1, 0);

     label3:
        return;
    }

    public void clear()
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.io.File $r1;
        int $i0, $i1;
        java.io.File[] $r2;
        java.util.Map $r3;
        java.lang.Object[] $r4;
        java.lang.Throwable $r5;
        long varReplacer1571;
        java.lang.String varReplacer1572;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r2 == null goto label3;

        $i0 = lengthof $r2;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r3 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        varReplacer1571 = 0L;

        $r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = varReplacer1571;

        $r4 = newarray (java.lang.Object)[0];

        varReplacer1572 = "Cache cleared.";

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>(varReplacer1572, $r4);

     label4:
        exitmonitor $r0;

        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public com.android.volley.Cache$Entry get(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        com.android.volley.toolbox.DiskBasedCache$CountingInputStream $r1, $r8, r21;
        java.lang.String $r2, $r15, varReplacer1785;
        com.android.volley.Cache$Entry $r3, $r11;
        java.util.Map $r4;
        java.lang.Object $r5;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r6;
        java.io.File $r7;
        java.io.FileInputStream $r9, r20;
        long $l0;
        int $i1;
        byte[] $r10;
        java.lang.Throwable $r12, $r13, $r16, $r17, $r18, $r19;
        java.lang.Object[] $r14;
        java.io.IOException r22;
        null_type varReplacer1786;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r2 := @parameter0: java.lang.String;

        $r3 = null;

        entermonitor $r0;

     label01:
        $r2 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r2);

        $r4 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r5;

     label02:
        if $r6 != null goto label04;

     label03:
        exitmonitor $r0;

        return $r3;

     label04:
        $r7 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r2);

     label05:
        $r8 = null;

     label06:
        r21 = new com.android.volley.toolbox.DiskBasedCache$CountingInputStream;

        $r1 = r21;

        r20 = new java.io.FileInputStream;

        $r9 = r20;

     label07:
        specialinvoke r20.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        varReplacer1786 = null;

        specialinvoke r21.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void <init>(java.io.InputStream,com.android.volley.toolbox.DiskBasedCache$1)>($r9, varReplacer1786);

     label08:
        staticinvoke <com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream)>($r1);

     label09:
        r20 = new java.io.FileInputStream;

        $r9 = r20;

     label10:
        specialinvoke r20.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        $l0 = virtualinvoke $r7.<java.io.File: long length()>();

     label11:
        $i1 = (int) $l0;

     label12:
        $r10 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: byte[] streamToBytes(java.io.InputStream,int)>($r9, $i1);

        $r11 = virtualinvoke $r6.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.Cache$Entry toCacheEntry(byte[])>($r10);

     label13:
        if $r1 == null goto label15;

     label14:
        virtualinvoke $r1.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label15:
        $r3 = $r11;

        goto label03;

     label16:
        $r12 := @caughtexception;

        goto label03;

     label17:
        $r13 := @caughtexception;

     label18:
        $r14 = newarray (java.lang.Object)[2];

        $r15 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r14[0] = $r15;

        r22 = (java.io.IOException) $r13;

        $r15 = virtualinvoke r22.<java.io.IOException: java.lang.String toString()>();

        $r14[1] = $r15;

        varReplacer1785 = "%s: %s";

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>(varReplacer1785, $r14);

        virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void remove(java.lang.String)>($r2);

        if $r7 == null goto label19;

        virtualinvoke $r7.<java.io.File: boolean delete()>();

     label19:
        if $r8 == null goto label03;

     label20:
        virtualinvoke $r8.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label21:
        goto label03;

     label22:
        $r16 := @caughtexception;

        goto label03;

     label23:
        $r17 := @caughtexception;

     label24:
        if $r8 == null goto label26;

     label25:
        virtualinvoke $r8.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label26:
        throw $r17;

     label27:
        $r18 := @caughtexception;

        exitmonitor $r0;

        throw $r18;

     label28:
        $r19 := @caughtexception;

        goto label03;

     label29:
        $r17 := @caughtexception;

        $r8 = $r1;

        goto label24;

     label30:
        $r13 := @caughtexception;

        $r8 = $r1;

        goto label18;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.lang.Throwable from label06 to label08 with label23;
        catch java.io.IOException from label08 to label09 with label30;
        catch java.io.IOException from label10 to label11 with label30;
        catch java.io.IOException from label12 to label13 with label30;
        catch java.lang.Throwable from label08 to label13 with label29;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.io.IOException from label25 to label26 with label28;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label26 to label27 with label27;
    }

    public java.io.File getFileForKey(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0;
        null_type varReplacer1795;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new java.io.File;

        $r2 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r1);

        return $r3;

     label1:
        varReplacer1795 = null;

        return varReplacer1795;
    }

    public java.io.File getFilenamePath(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new java.io.File;

        $r2 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r1 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r1);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r1);

        return $r3;

     label1:
        return null;
    }

    public void initialize()
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.io.File $r1;
        java.io.FileInputStream $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.String $r4, varReplacer1784;
        java.io.File[] $r5;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r7;
        long $l2;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        entermonitor $r0;

     label01:
        $r1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        $r1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label02;

        $r3 = newarray (java.lang.Object)[1];

        $r1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3[0] = $r4;

        varReplacer1784 = "Unable to create cache dir %s";

        staticinvoke <com.android.volley.VolleyLog: void e(java.lang.String,java.lang.Object[])>(varReplacer1784, $r3);

     label02:
        exitmonitor $r0;

        return;

     label03:
        $r1 = $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r5 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r5 == null goto label02;

        $i0 = lengthof $r5;

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label02;

        $r1 = $r5[$i1];

     label05:
        $r6 = null;

     label06:
        $r2 = new java.io.FileInputStream;

     label07:
        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label08:
        $r7 = staticinvoke <com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream)>($r2);

        $l2 = virtualinvoke $r1.<java.io.File: long length()>();

     label09:
        $r7.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size> = $l2;

     label10:
        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader)>($r4, $r7);

     label11:
        if $r2 == null goto label13;

     label12:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label13:
        $i1 = $i1 + 1;

        goto label04;

     label14:
        $r8 := @caughtexception;

        goto label13;

     label15:
        $r9 := @caughtexception;

     label16:
        if $r1 == null goto label18;

     label17:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label18:
        if $r6 == null goto label13;

     label19:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label20:
        goto label13;

     label21:
        $r10 := @caughtexception;

        goto label13;

     label22:
        $r11 := @caughtexception;

     label23:
        if $r6 == null goto label25;

     label24:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label25:
        throw $r11;

     label26:
        $r12 := @caughtexception;

        exitmonitor $r0;

        throw $r12;

     label27:
        $r13 := @caughtexception;

        goto label25;

     label28:
        $r11 := @caughtexception;

        $r6 = $r2;

        goto label23;

     label29:
        $r14 := @caughtexception;

        $r6 = $r2;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label05 with label26;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.Throwable from label06 to label08 with label22;
        catch java.io.IOException from label08 to label09 with label29;
        catch java.io.IOException from label10 to label11 with label29;
        catch java.lang.Throwable from label08 to label11 with label28;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.io.IOException from label24 to label25 with label27;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label25 to label26 with label26;
    }

    public void invalidate(java.lang.String, boolean)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.android.volley.Cache$Entry $r3;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

     label1:
        $r3 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: com.android.volley.Cache$Entry get(java.lang.String)>($r1);

        if $r3 == null goto label3;

        $r3.<com.android.volley.Cache$Entry: long softTtl> = 0L;

        if $z0 == 0 goto label2;

        $r3.<com.android.volley.Cache$Entry: long ttl> = 0L;

     label2:
        virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void put(java.lang.String,com.android.volley.Cache$Entry)>($r1, $r3);

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void put(java.lang.String, com.android.volley.Cache$Entry)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        com.android.volley.Cache$Entry $r1;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader $r2;
        java.io.FileOutputStream $r3;
        java.lang.String $r4, varReplacer1802;
        byte[] $r5;
        int $i0;
        java.io.File $r6;
        java.lang.Throwable $r7, $r9;
        boolean $z0;
        java.lang.Object[] $r8;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r4 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.android.volley.Cache$Entry;

        entermonitor $r0;

     label01:
        $r4 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r4);

        $r5 = $r1.<com.android.volley.Cache$Entry: byte[] data>;

        $i0 = lengthof $r5;

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void pruneIfNeeded(int)>($i0);

        $r6 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r4);

     label02:
        $r3 = new java.io.FileOutputStream;

     label03:
        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

     label04:
        $r2 = new com.android.volley.toolbox.DiskBasedCache$CacheHeader;

     label05:
        specialinvoke $r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: void <init>(java.lang.String,com.android.volley.Cache$Entry)>($r4, $r1);

        virtualinvoke $r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: boolean writeHeader(java.io.OutputStream)>($r3);

     label06:
        $r5 = $r1.<com.android.volley.Cache$Entry: byte[] data>;

     label07:
        virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r5);

        virtualinvoke $r3.<java.io.FileOutputStream: void close()>();

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader)>($r4, $r2);

     label08:
        exitmonitor $r0;

        return;

     label09:
        $r7 := @caughtexception;

     label10:
        $z0 = virtualinvoke $r6.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label08;

        $r8 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8[0] = $r4;

        varReplacer1802 = "Could not clean up file %s";

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>(varReplacer1802, $r8);

     label11:
        goto label08;

     label12:
        $r9 := @caughtexception;

        exitmonitor $r0;

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label02 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void remove(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache $r0;
        java.lang.String $r1, varReplacer1796;
        java.io.File $r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.Throwable $r4;

        nop;

        $r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r1 := @parameter0: java.lang.String;

        entermonitor $r0;

     label1:
        $r2 = virtualinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: void removeEntry(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r1;

        $r1 = specialinvoke $r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r1);

        $r3[1] = $r1;

        varReplacer1796 = "Could not delete cache entry for key=%s, filename=%s";

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>(varReplacer1796, $r3);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
