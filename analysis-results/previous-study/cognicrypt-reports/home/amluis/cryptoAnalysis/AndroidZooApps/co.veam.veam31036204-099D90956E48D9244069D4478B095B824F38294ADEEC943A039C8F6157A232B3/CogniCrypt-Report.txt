Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2756)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 5a975f89e6cdbbaa71eece8c71559ec707bb1850dded221a2ad9e41e0e3c2d5c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeP(java.lang.String)>
		SHA-256: a53a10fcbcfb3290d3008d5842f3a3c3487fccb65b6ab868a632b08b7a6f832f
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.veam.inappbilling.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 1bd65c7e3ef7c5880ee054dd01ba963cb9b0d277e32cad1c7526c867dab34e4b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7913)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: bb4919f12e680fd3c0a12ac1808223ef8c49f76f4679d9b4350785a504f3c5d5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8414)
		Method: <com.veam.inappbilling.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 27a5e7b7cd3c5c30ffa82133c0d3af0c157c101b0ed2ce8682dbdda6e36bd669
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2692)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 46f56e7b8c621805cf78de782162b158ad35eb6f22f21cc58b2295c57e8b9b7c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer7914)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 1c4141e901903bf7e45b27050218d60205e9168847ce6ee49a92ada41327f0c3
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer7915, varReplacer7916)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 14e4d2e97ce571ffe673fb76dc0847ffa60dd0d492e18d1b9303c544ffad83ca
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: varReplacer7920
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7920)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 97f5ccc33ca9f88693bbca37681051c381bcd7e71516ba44363451be83a4632b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: bdbb92e6f960385509aefd190497c89a8c421e1717a727a6ba55a04508029dc2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 92352f365af81b6cd93aec5685485ef79e11ee652b7e2f3af45cc5e33bb8d7b9
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String sha1(java.lang.String)>
		SHA-256: 7b6ee592fe0f8249d32b7ede0d514a59af47d43eb85d58fc04f8336757cb2aaa
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2599)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String sha1(java.lang.String)>
		SHA-256: eacfd13c7bedd4bdbb68030c94031fc1aa416eac2ef9914ea0408b6fb1d080b5
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getCachedFileName(java.lang.String)>
		SHA-256: d35f41a5e4d9fb1065fd5c80d4ecd9dc4fbc47f97c738c6b3238640091ac4274
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer7915, varReplacer7916)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 89b5266ed8d806689dcb8fb1f5badaeb2b16892690f39633f803a5cc96defb4
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2833)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getUniqueId(android.content.Context)>
		SHA-256: af94a00fb47369f4a39efa9baead588cb94a4202b934b30273dd3cd0c5943204
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7920)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 24c0a378aa29512d9b3ce8669c89f578899af4d385cf331572cf598cafaaece
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getUniqueId(android.content.Context)>
		SHA-256: cd11e726120efd98634e609dd41795b1367161aa8cb4e23c26e52677ac1ed59c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer803)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getCachedFileName(java.lang.String)>
		SHA-256: ecc75bb56eff3eda736a4fc0b3865901a8e6abb80efb97c812302d7ed79b7abb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8821)
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 85972ba67447348d53c655c0605a7e01530918689b36436b86c233a7a60f900f
		Secure: false

Findings in Java Class: co.veam.veam31036204.VeamUtil

	 in Method: java.lang.String getCachedFileName(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ecc75bb56eff3eda736a4fc0b3865901a8e6abb80efb97c812302d7ed79b7abb)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer803)


	 in Method: java.lang.String sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #eacfd13c7bedd4bdbb68030c94031fc1aa416eac2ef9914ea0408b6fb1d080b5)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2599)


	 in Method: java.lang.String getUniqueId(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #af94a00fb47369f4a39efa9baead588cb94a4202b934b30273dd3cd0c5943204)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2833)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #46f56e7b8c621805cf78de782162b158ad35eb6f22f21cc58b2295c57e8b9b7c)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2692)


Findings in Java Class: com.facebook.internal.Utility

	 in Method: java.lang.String hashWithAlgorithm(java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: co.veam.veam31036204.SimpleCrypto

	 in Method: byte[] decrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared Alg
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer7919, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer7919, $r3, $r5)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer7915, varReplacer7916)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #bb4919f12e680fd3c0a12ac1808223ef8c49f76f4679d9b4350785a504f3c5d5)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS7Padding, PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7913)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7920)


Findings in Java Class: com.veam.inappbilling.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #27a5e7b7cd3c5c30ffa82133c0d3af0c157c101b0ed2ce8682dbdda6e36bd669)
			First parameter (with value "SHA1withRSA") should be any of {NONEwithDSA, SHA1withDSA, SHA224withDSA, SHA256withDSA, SHA256withRSA, SHA256withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8414)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.google.android.gms.internal.zzpx

	 in Method: java.lang.String zzbb(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #85972ba67447348d53c655c0605a7e01530918689b36436b86c233a7a60f900f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8821)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 8
	RequiredPredicateError: 5
	ImpreciseValueExtractionError: 1
=====================================================================