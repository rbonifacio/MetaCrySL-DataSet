public class com.tune.TuneUtils extends java.lang.Object
{

    public void <init>()
    {
        com.tune.TuneUtils $r0;

        $r0 := @this: com.tune.TuneUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String bytesToHex(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.String $r1, varReplacer3236;
        byte $b2;
        short $s3;
        java.lang.StringBuilder $r2;
        null_type varReplacer3235;

        nop;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        varReplacer3235 = null;

        return varReplacer3235;

     label1:
        $i0 = lengthof $r0;

        $r1 = "";

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        if $s3 >= 16 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer3236 = "0";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3236);

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label5:
        return $r1;
    }

    public static byte[] compress(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        java.util.zip.GZIPOutputStream $r1;
        java.io.ByteArrayOutputStream $r2;
        int $i0;
        byte[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.io.ByteArrayOutputStream;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r1 = new java.util.zip.GZIPOutputStream;

        specialinvoke $r1.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.util.zip.GZIPOutputStream: void write(byte[])>($r3);

        virtualinvoke $r1.<java.util.zip.GZIPOutputStream: void close()>();

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

        return $r3;
    }

    public static byte[] concatenateByteArrays(byte[], byte[])
    {
        byte[] $r0, $r1, $r2;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r2 = newarray (byte)[$i0];

        $i0 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, 0, $i0);

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, $i0, $i1);

        return $r2;
    }

    public static boolean convertToBoolean(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = "1";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "yes";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $r1 = "true";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static java.lang.String decompress(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        java.util.zip.GZIPInputStream $r1;
        java.io.ByteArrayInputStream $r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r4;

        $r0 := @parameter0: byte[];

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r1 = new java.util.zip.GZIPInputStream;

        specialinvoke $r1.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream,int)>($r2, 32);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r0 = newarray (byte)[32];

     label1:
        $i0 = virtualinvoke $r1.<java.util.zip.GZIPInputStream: int read(byte[])>($r0);

        if $i0 == -1 goto label2;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r0, 0, $i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label1;

     label2:
        virtualinvoke $r1.<java.util.zip.GZIPInputStream: void close()>();

        virtualinvoke $r2.<java.io.ByteArrayInputStream: void close()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static boolean hasPermission(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4;
        java.lang.Throwable $r2;
        int $i0, varReplacer3070, varReplacer3071, varReplacer3072, varReplacer3073, varReplacer3074, varReplacer3075;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo $r5;
        android.content.pm.ApplicationInfo $r6;
        android.content.pm.PackageManager$NameNotFoundException r7;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label7;

        $i0 = 0;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer3074 = 0;

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, varReplacer3074);

     label2:
        $r6 = $r5.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r6.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label3:
        if $i0 < 23 goto label6;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>($r0, $r1);

        if $i0 != 0 goto label5;

        varReplacer3072 = 1;

        return varReplacer3072;

     label4:
        $r2 := @caughtexception;

        r7 = (android.content.pm.PackageManager$NameNotFoundException) $r2;

        virtualinvoke r7.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        goto label3;

     label5:
        varReplacer3070 = 0;

        return varReplacer3070;

     label6:
        $i0 = staticinvoke <android.support.v4.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>($r0, $r1);

        if $i0 == 0 goto label8;

        varReplacer3073 = 0;

        return varReplacer3073;

     label7:
        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r1);

        if $i0 == 0 goto label8;

        varReplacer3075 = 0;

        return varReplacer3075;

     label8:
        varReplacer3071 = 1;

        return varReplacer3071;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static byte[] hexToBytes(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < 2 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return null;

     label4:
        return $r1;
    }

    public static void log(java.lang.String)
    {
        java.lang.String $r0, varReplacer3408;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer3408 = "TUNE";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer3408, $r0);

        return;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer3232, varReplacer3233, varReplacer3234;
        java.lang.Throwable $r1;
        boolean $z0;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.security.NoSuchAlgorithmException r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        varReplacer3234 = "";

        return varReplacer3234;

     label1:
        varReplacer3232 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3232);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.tune.TuneUtils: java.lang.String bytesToHex(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3233 = "";

        return varReplacer3233;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String readStream(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.lang.StringBuilder $r1, $r5;
        java.io.BufferedReader $r2;
        java.io.InputStreamReader $r3;
        java.lang.String $r4, varReplacer4278, varReplacer4279, varReplacer4280;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 == null goto label3;

        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        varReplacer4278 = "UTF-8";

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r0, varReplacer4278);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r4 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer4279 = "\n";

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4279);

        goto label1;

     label2:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        varReplacer4280 = "";

        return varReplacer4280;
    }

    public static java.lang.String sha1(java.lang.String)
    {
        java.lang.String $r0, varReplacer3229, varReplacer3230, varReplacer3231;
        java.lang.Throwable $r1;
        boolean $z0;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.security.NoSuchAlgorithmException r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        varReplacer3230 = "";

        return varReplacer3230;

     label1:
        varReplacer3229 = "SHA-1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3229);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.tune.TuneUtils: java.lang.String bytesToHex(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3231 = "";

        return varReplacer3231;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String sha256(java.lang.String)
    {
        java.lang.String $r0, varReplacer3226, varReplacer3227, varReplacer3228;
        java.lang.Throwable $r1;
        boolean $z0;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.security.NoSuchAlgorithmException r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        varReplacer3227 = "";

        return varReplacer3227;

     label1:
        varReplacer3226 = "SHA-256";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3226);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.tune.TuneUtils: java.lang.String bytesToHex(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3228 = "";

        return varReplacer3228;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
}
