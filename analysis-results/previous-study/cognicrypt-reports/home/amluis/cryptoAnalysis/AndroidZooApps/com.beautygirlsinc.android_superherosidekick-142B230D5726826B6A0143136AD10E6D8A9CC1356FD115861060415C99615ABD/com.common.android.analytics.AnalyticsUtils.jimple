public class com.common.android.analytics.AnalyticsUtils extends java.lang.Object
{
    public static final java.lang.String STR_DOMAIN;
    private static final java.lang.String TAG;
    private static java.lang.StringBuffer accessLog;
    private static boolean accessLogAvailable;
    private static java.lang.String accessLogFileName;
    private static java.lang.String analyticsUrl;
    private static java.lang.String cacheFileName;
    private static int logCount;
    private static java.lang.String testUrl;

    static void <clinit>()
    {
        int varReplacer1931, varReplacer1932;
        null_type varReplacer1933, varReplacer1934;
        java.lang.String varReplacer1935, varReplacer1936, varReplacer1937;

        nop;

        varReplacer1934 = null;

        <com.common.android.analytics.AnalyticsUtils: java.lang.String testUrl> = varReplacer1934;

        varReplacer1935 = "/cds/1x1.png?";

        <com.common.android.analytics.AnalyticsUtils: java.lang.String analyticsUrl> = varReplacer1935;

        varReplacer1937 = "MkAnalyticsCache.txt";

        <com.common.android.analytics.AnalyticsUtils: java.lang.String cacheFileName> = varReplacer1937;

        varReplacer1933 = null;

        <com.common.android.analytics.AnalyticsUtils: java.lang.StringBuffer accessLog> = varReplacer1933;

        varReplacer1936 = "MkCdsAccessLog.txt";

        <com.common.android.analytics.AnalyticsUtils: java.lang.String accessLogFileName> = varReplacer1936;

        varReplacer1931 = 0;

        <com.common.android.analytics.AnalyticsUtils: boolean accessLogAvailable> = varReplacer1931;

        varReplacer1932 = 0;

        <com.common.android.analytics.AnalyticsUtils: int logCount> = varReplacer1932;

        return;
    }

    public void <init>()
    {
        com.common.android.analytics.AnalyticsUtils $r0;

        $r0 := @this: com.common.android.analytics.AnalyticsUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String MD5(java.lang.String)
    {
        java.lang.String $r0, varReplacer3599;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.security.NoSuchAlgorithmException r4;
        null_type varReplacer3598;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer3599 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3599);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.common.android.analytics.AnalyticsUtils: java.lang.String bytes2Hex(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3598 = null;

        return varReplacer3598;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String SHA1(java.lang.String)
    {
        java.lang.String $r0, varReplacer3337;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.security.NoSuchAlgorithmException r4;
        null_type varReplacer3336;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer3337 = "SHA-1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3337);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.common.android.analytics.AnalyticsUtils: java.lang.String bytes2Hex(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3336 = null;

        return varReplacer3336;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String bytes2Hex(byte[])
    {
        byte[] $r0;
        java.lang.String $r1, $r2, varReplacer3344;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.lang.StringBuilder $r3;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = "";

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer3344 = "0";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3344);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static void cacheAnalytics(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r6, varReplacer1952, varReplacer1953, varReplacer1954, varReplacer1956, varReplacer1957, varReplacer1958;
        java.io.File $r2, r11;
        java.io.OutputStreamWriter $r3, r13;
        java.io.FileOutputStream $r4, r12;
        java.lang.StringBuilder $r5, r10;
        boolean $z0;
        java.lang.Throwable $r7, $r8;
        java.lang.Exception $r9;
        java.io.IOException r14;
        int varReplacer1955;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

     label01:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer1953 = "------>cache:";

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1953);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1958 = "AnalyticsUtils";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1958, $r6);

        $r2 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = <com.common.android.analytics.AnalyticsUtils: java.lang.String cacheFileName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r11 = new java.io.File;

        $r2 = r11;

        specialinvoke r11.<java.io.File: void <init>(java.lang.String)>($r6);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label04;

     label03:
        virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

     label04:
        r12 = new java.io.FileOutputStream;

        $r4 = r12;

     label05:
        varReplacer1955 = 1;

        specialinvoke r12.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r2, varReplacer1955);

     label06:
        r13 = new java.io.OutputStreamWriter;

        $r3 = r13;

     label07:
        varReplacer1956 = "UTF-8";

        specialinvoke r13.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, varReplacer1956);

        virtualinvoke $r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.OutputStreamWriter: void flush()>();

        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

     label08:
        r10 = new java.lang.StringBuilder;

        $r5 = r10;

     label09:
        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer1952 = "------>cache:";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1952);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer1957 = "(=>successfully!!!)";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1957);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1954 = "AnalyticsUtils";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1954, $r1);

     label10:
        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        return;

     label11:
        $r7 := @caughtexception;

     label12:
        r14 = (java.io.IOException) $r7;

        virtualinvoke r14.<java.io.IOException: void printStackTrace()>();

     label13:
        goto label04;

     label14:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        throw $r8;

     label15:
        $r9 := @caughtexception;

     label16:
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label17:
        goto label10;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Throwable from label04 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
    }

    public static boolean checkNetwork(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;
        int varReplacer1938, varReplacer1939;
        java.lang.String varReplacer1940;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer1940 = "connectivity";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1940);

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 != 0 goto label2;

     label1:
        varReplacer1938 = 0;

        return varReplacer1938;

     label2:
        varReplacer1939 = 1;

        return varReplacer1939;
    }

    public static void copyAnalyticsBean(com.common.android.analytics.AnalyticsBean, com.common.android.analytics.AnalyticsBean)
    {
        com.common.android.analytics.AnalyticsBean $r0, $r1;
        int $i0;
        java.lang.String $r2, varReplacer2212, varReplacer2213;
        long $l1;

        nop;

        $r0 := @parameter0: com.common.android.analytics.AnalyticsBean;

        $r1 := @parameter1: com.common.android.analytics.AnalyticsBean;

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: int getPlatform()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setPlatform(int)>($i0);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getAnalyticVersion()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setAnalyticVersion(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getAppVersion()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setAppVersion(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getBuddleId()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setBuddleId(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getUDID()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setUDID(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getGaId()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setGaId(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getAndroidId()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setAndroidId(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getCountry()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setCountry(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getDeviceType()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setDeviceType(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getDeviceModel()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setDeviceModel(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getDeviceOS()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setDeviceOS(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getFirmwareVersion()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setFirmwareVersion(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getWifi()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setWifi(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getCarrier()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setCarrier(java.lang.String)>($r2);

        $l1 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: long getInstall_time()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setInstall_time(long)>($l1);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getLanguage()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setLanguage(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getTimeZone()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setTimeZone(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getDpi()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setDpi(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getScreen()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setScreen(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getRootedDevice()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setRootedDevice(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getIsProtrait()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setIsProtrait(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getSessionId()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setSessionId(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getEventId()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setEventId(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getTimesTamp()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setTimesTamp(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getEventCategory()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setEventCategory(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getEventAction()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setEventAction(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getEventLabel()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setEventLabel(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getEventValue()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setEventValue(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getExt1()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setExt1(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getExt2()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setExt2(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getExt3()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setExt3(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getExt4()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setExt4(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<com.common.android.analytics.AnalyticsBean: java.lang.String getExt5()>();

        virtualinvoke $r1.<com.common.android.analytics.AnalyticsBean: void setExt5(java.lang.String)>($r2);

        return;

     label1:
        varReplacer2212 = "Analytics";

        varReplacer2213 = "copyAnalyticsBean error! src or target bean is null";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2212, varReplacer2213);

        return;
    }

    private static boolean findBinary(java.lang.String)
    {
        java.lang.String $r0, $r2, varReplacer3347;
        int $i0, $i1, varReplacer3345, varReplacer3346;
        java.lang.String[] $r1;
        java.io.File $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "/sbin/";

        $r1[1] = "/system/bin/";

        $r1[2] = "/system/xbin/";

        $r1[3] = "/data/local/xbin/";

        $r1[4] = "/data/local/bin/";

        $r1[5] = "/system/sd/xbin/";

        $r1[6] = "/system/bin/failsafe/";

        $r1[7] = "/data/local/";

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer3347 = "su";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3347);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        varReplacer3346 = 1;

        return varReplacer3346;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        varReplacer3345 = 0;

        return varReplacer3345;
    }

    public static java.lang.String getAnalyticsUrl(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

     label1:
        $r1 = <com.common.android.analytics.AnalyticsUtils: java.lang.String testUrl>;

        if $r1 == null goto label3;

        $r1 = <com.common.android.analytics.AnalyticsUtils: java.lang.String testUrl>;

     label2:
        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        return $r1;

     label3:
        $r1 = staticinvoke <com.common.android.analytics.AnalyticsUtils: java.lang.String getServiceURL(android.content.Context)>($r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = <com.common.android.analytics.AnalyticsUtils: java.lang.String analyticsUrl>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        goto label2;

     label5:
        $r3 := @caughtexception;

        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static java.lang.String getAndroidId(android.content.Context)
    {
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "android_id");

        return $r2;
    }

    public static java.lang.String getDeviceOS()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1, varReplacer3335;

        nop;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer3335 = "Android ";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3335);

        $r1 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getDeviceType()
    {
        java.lang.String r0;

        nop;

        r0 = <android.os.Build: java.lang.String MANUFACTURER>;

        return r0;
    }

    public static java.lang.String getDpi(android.content.Context)
    {
        android.content.Context $r0;
        android.util.DisplayMetrics $r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r4, varReplacer3327;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = new android.util.DisplayMetrics;

        specialinvoke $r1.<android.util.DisplayMetrics: void <init>()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer3327 = "";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3327);

        $i0 = $r1.<android.util.DisplayMetrics: int densityDpi>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static long getInstallationTime(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        int $i0, varReplacer3332;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        long l1, varReplacer3330, varReplacer3331;
        android.content.pm.PackageManager$NameNotFoundException r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer3332 = 0;

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer3332);

     label2:
        if $i0 > 8 goto label3;

        varReplacer3330 = 0L;

        return varReplacer3330;

     label3:
        l1 = $r4.<android.content.pm.PackageInfo: long firstInstallTime>;

        return l1;

     label4:
        $r1 := @caughtexception;

        r5 = (android.content.pm.PackageManager$NameNotFoundException) $r1;

        virtualinvoke r5.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        varReplacer3331 = 0L;

        return varReplacer3331;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static java.lang.String getIsProprait(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int $i0;
        java.lang.String varReplacer3322, varReplacer3323;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int orientation>;

        if $i0 != 2 goto label1;

        varReplacer3322 = "0";

        return varReplacer3322;

     label1:
        varReplacer3323 = "1";

        return varReplacer3323;
    }

    public static java.lang.String getIsRootedDevice()
    {
        boolean $z0;
        java.lang.String varReplacer3324, varReplacer3325;

        nop;

        $z0 = staticinvoke <com.common.android.analytics.AnalyticsUtils: boolean isRootedDevice()>();

        if $z0 == 0 goto label1;

        varReplacer3324 = "1";

        return varReplacer3324;

     label1:
        varReplacer3325 = "0";

        return varReplacer3325;
    }

    public static java.lang.String getMEID(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        return $r3;
    }

    public static long getNetTime(java.lang.String)
    {
        java.lang.String $r0;
        java.net.URL $r1, r5;
        java.net.URLConnection $r2;
        long $l0;
        java.lang.Throwable $r3, $r4;
        java.net.MalformedURLException r6;
        java.io.IOException r7;

        $r0 := @parameter0: java.lang.String;

        r5 = new java.net.URL;

        $r1 = r5;

     label1:
        specialinvoke r5.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r2.<java.net.URLConnection: void connect()>();

        $l0 = virtualinvoke $r2.<java.net.URLConnection: long getDate()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        r6 = (java.net.MalformedURLException) $r3;

        virtualinvoke r6.<java.net.MalformedURLException: void printStackTrace()>();

     label4:
        return 0L;

     label5:
        $r4 := @caughtexception;

        r7 = (java.io.IOException) $r4;

        virtualinvoke r7.<java.io.IOException: void printStackTrace()>();

        goto label4;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label5;
    }

    public static java.lang.String getScreen(android.content.Context)
    {
        android.content.Context $r0;
        android.util.DisplayMetrics $r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r4, varReplacer3326;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = new android.util.DisplayMetrics;

        specialinvoke $r1.<android.util.DisplayMetrics: void <init>()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = $r1.<android.util.DisplayMetrics: int widthPixels>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer3326 = "*";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3326);

        $i0 = $r1.<android.util.DisplayMetrics: int heightPixels>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String getServiceURL(android.content.Context)
    {
        android.content.Context $r0;
        android.os.Bundle $r1;
        java.lang.Throwable $r2;
        android.content.pm.PackageManager $r3;
        java.lang.String $r4, varReplacer1977, varReplacer1978, varReplacer1979, varReplacer1980;
        android.content.pm.ApplicationInfo $r5;
        int varReplacer1976;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1976 = 128;

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r4, varReplacer1976);

     label2:
        $r1 = $r5.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        varReplacer1977 = "ServerBaseUrl";

        $r4 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1977);

     label4:
        return $r4;

     label5:
        $r2 := @caughtexception;

        varReplacer1979 = "Analytics";

        varReplacer1980 = "Get domain Failed";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1979, varReplacer1980);

        varReplacer1978 = "";

        return varReplacer1978;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    public static java.lang.String getSessionId(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.StringBuilder $r3;
        long $l0;
        null_type varReplacer3321;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.common.android.analytics.AnalyticsUtils: java.lang.String getUDID(android.content.Context)>($r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r1;

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if $r4 == null goto label2;

        $r1 = staticinvoke <com.common.android.analytics.AnalyticsUtils: java.lang.String SHA1(java.lang.String)>($r4);

        return $r1;

     label2:
        varReplacer3321 = null;

        return varReplacer3321;
    }

    public static java.lang.String getTimeZoneStr()
    {
        int $i0, $i1;
        java.util.TimeZone $r0;
        float $f0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2, varReplacer3328, varReplacer3329;

        nop;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>();

        $i0 = $i0 / 3600000;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $i1 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>();

        $i1 = $i1 % 3600000;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $f0 = (float) $i1;

        $f0 = $f0 / 3600000.0F;

        $f0 = $f0 * 60.0F;

        $i1 = (int) $f0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if $i0 >= 0 goto label3;

        $r2 = "";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer3328 = ":";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3328);

        if $i1 != 0 goto label4;

        $r2 = "00";

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $r2 = "+";

        goto label1;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer3329 = "";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3329);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;
    }

    public static java.lang.String getUDID(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        null_type varReplacer3338;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.common.android.analyticscenter.utils.AndriodUUIDHelper: java.lang.String getUUID()>();

        if $r1 == null goto label1;

        $r1 = staticinvoke <com.common.android.analytics.AnalyticsUtils: java.lang.String SHA1(java.lang.String)>($r1);

        return $r1;

     label1:
        varReplacer3338 = null;

        return varReplacer3338;
    }

    public static java.lang.String getWifi(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;
        java.lang.String varReplacer3333, varReplacer3334;

        nop;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.common.android.analytics.AnalyticsUtils: boolean isWifi(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        varReplacer3334 = "1";

        return varReplacer3334;

     label1:
        varReplacer3333 = "0";

        return varReplacer3333;
    }

    public static java.lang.String getWifiMAC(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.wifi.WifiManager $r2;
        android.net.wifi.WifiInfo $r3;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r2 = (android.net.wifi.WifiManager) $r1;

        if $r2 != null goto label2;

        $r3 = null;

     label1:
        if $r3 == null goto label3;

        $r4 = virtualinvoke $r3.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

        return $r4;

     label2:
        $r3 = virtualinvoke $r2.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        goto label1;

     label3:
        return null;
    }

    public static boolean isRootedDevice()
    {
        boolean $z0;
        java.lang.String varReplacer3339;

        nop;

        varReplacer3339 = "su";

        $z0 = staticinvoke <com.common.android.analytics.AnalyticsUtils: boolean findBinary(java.lang.String)>(varReplacer3339);

        return $z0;
    }

    public static boolean isWifi(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        android.net.NetworkInfo$State $r4, $r5;
        int varReplacer3340, varReplacer3342, varReplacer3343;
        java.lang.String varReplacer3341;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer3341 = "connectivity";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer3341);

        $r2 = (android.net.ConnectivityManager) $r1;

        varReplacer3340 = 1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(varReplacer3340);

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r4 != $r5 goto label1;

        varReplacer3342 = 1;

        return varReplacer3342;

     label1:
        varReplacer3343 = 0;

        return varReplacer3343;
    }

    public static void logAccessData(java.lang.String)
    {
        java.io.File $r0, r13;
        java.io.OutputStreamWriter $r1, r18;
        java.io.FileOutputStream $r2, r17;
        java.lang.String $r3, $r5, $r7, varReplacer1982, varReplacer1983, varReplacer1984, varReplacer1985, varReplacer1986, varReplacer1987, varReplacer1988, varReplacer1989, varReplacer1990, varReplacer1991, varReplacer1993;
        boolean $z0;
        int $i0, varReplacer1981, varReplacer1992;
        java.util.Properties $r4;
        java.lang.StringBuilder $r6, r12;
        java.lang.StringBuffer $r8, r16;
        java.lang.Throwable $r9, $r10;
        java.lang.Exception $r11;
        java.text.SimpleDateFormat r14;
        java.util.Date r15;
        java.io.IOException r19;

        nop;

        $r3 := @parameter0: java.lang.String;

        entermonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

     label01:
        $z0 = <com.common.android.analytics.AnalyticsUtils: boolean accessLogAvailable>;

        if $z0 == 0 goto label17;

        if $r3 == null goto label17;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label17;

        $r4 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        varReplacer1982 = "line.separator";

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(varReplacer1982);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>($r5);

        if $z0 != 0 goto label02;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r5 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r7 = "mounted";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label17;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r5 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer1984 = "MkLogs";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1984);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r13 = new java.io.File;

        $r0 = r13;

        specialinvoke r13.<java.io.File: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

     label03:
        r14 = new java.text.SimpleDateFormat;

        varReplacer1983 = "yyyy-MM-dd";

        specialinvoke r14.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(varReplacer1983);

        r15 = new java.util.Date;

        specialinvoke r15.<java.util.Date: void <init>()>();

        $r5 = virtualinvoke r14.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r15);

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer1987 = "-";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1987);

        $r5 = <com.common.android.analytics.AnalyticsUtils: java.lang.String accessLogFileName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r13 = new java.io.File;

        $r0 = r13;

        specialinvoke r13.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

     label04:
        if $z0 != 0 goto label06;

     label05:
        virtualinvoke $r0.<java.io.File: boolean createNewFile()>();

     label06:
        r14 = new java.text.SimpleDateFormat;

        varReplacer1990 = "yyyy-MM-dd HH:mm:ss.SSS";

        specialinvoke r14.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(varReplacer1990);

        r15 = new java.util.Date;

        specialinvoke r15.<java.util.Date: void <init>()>();

        $r5 = virtualinvoke r14.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r15);

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer1991 = " ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1991);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = <com.common.android.analytics.AnalyticsUtils: java.lang.StringBuffer accessLog>;

        if $r8 != null goto label07;

        r16 = new java.lang.StringBuffer;

        specialinvoke r16.<java.lang.StringBuffer: void <init>()>();

        <com.common.android.analytics.AnalyticsUtils: java.lang.StringBuffer accessLog> = r16;

     label07:
        $r8 = <com.common.android.analytics.AnalyticsUtils: java.lang.StringBuffer accessLog>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = <com.common.android.analytics.AnalyticsUtils: int logCount>;

        $i0 = $i0 + 1;

        <com.common.android.analytics.AnalyticsUtils: int logCount> = $i0;

        $i0 = <com.common.android.analytics.AnalyticsUtils: int logCount>;

     label08:
        if $i0 != 10 goto label17;

     label09:
        varReplacer1985 = "AnalyticsUtils";

        varReplacer1986 = "------>start to log cds access data";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1985, varReplacer1986);

     label10:
        r17 = new java.io.FileOutputStream;

        $r2 = r17;

     label11:
        varReplacer1981 = 1;

        specialinvoke r17.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r0, varReplacer1981);

     label12:
        r18 = new java.io.OutputStreamWriter;

        $r1 = r18;

     label13:
        varReplacer1993 = "UTF-8";

        specialinvoke r18.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r2, varReplacer1993);

     label14:
        $r8 = <com.common.android.analytics.AnalyticsUtils: java.lang.StringBuffer accessLog>;

     label15:
        $r3 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.OutputStreamWriter: void write(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.OutputStreamWriter: void flush()>();

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

        varReplacer1988 = "AnalyticsUtils";

        varReplacer1989 = "log cds access data=>successfully!!!";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1988, varReplacer1989);

     label16:
        varReplacer1992 = 0;

        <com.common.android.analytics.AnalyticsUtils: int logCount> = varReplacer1992;

        r16 = new java.lang.StringBuffer;

        specialinvoke r16.<java.lang.StringBuffer: void <init>()>();

        <com.common.android.analytics.AnalyticsUtils: java.lang.StringBuffer accessLog> = r16;

     label17:
        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        return;

     label18:
        $r9 := @caughtexception;

     label19:
        r19 = (java.io.IOException) $r9;

        virtualinvoke r19.<java.io.IOException: void printStackTrace()>();

     label20:
        goto label06;

     label21:
        $r10 := @caughtexception;

        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        throw $r10;

     label22:
        $r11 := @caughtexception;

     label23:
        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label24:
        goto label16;

        catch java.lang.Throwable from label01 to label04 with label21;
        catch java.io.IOException from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label06 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Throwable from label09 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label23 to label24 with label21;
    }

    public static java.lang.String replaceSpecialSign(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*|\t|\r|\n");

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\"|\'|\\.|,");

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("_");

        return $r0;

     label1:
        return "";
    }

    public static java.lang.String replaceSpecialSign2(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*|\t|\r|\n");

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        return $r0;

     label1:
        return "";
    }

    public static void sendAndClearAnalytics(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r8, $r9, varReplacer1944, varReplacer1945, varReplacer1946, varReplacer1947, varReplacer1948, varReplacer1949, varReplacer1950, varReplacer1951;
        java.io.BufferedReader $r2;
        java.io.File $r3;
        java.lang.Exception $r4;
        java.io.FileInputStream $r5;
        java.io.InputStreamReader $r6;
        java.lang.StringBuilder $r7;
        boolean $z0;
        java.lang.StringBuffer $r10;
        java.lang.Throwable $r11;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = <java.io.File: java.lang.String separator>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = <com.common.android.analytics.AnalyticsUtils: java.lang.String cacheFileName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r8);

        $r8 = "";

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label17;

        varReplacer1944 = "AnalyticsUtils";

        varReplacer1945 = "------>cache file exists,sending cache data....";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1944, varReplacer1945);

     label02:
        $r5 = new java.io.FileInputStream;

     label03:
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label04:
        $r6 = new java.io.InputStreamReader;

     label05:
        varReplacer1949 = "UTF-8";

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, varReplacer1949);

     label06:
        $r2 = new java.io.BufferedReader;

     label07:
        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label08:
        $r9 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        if $r9 == null goto label14;

        $r7 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r7 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer1948 = "line.separator";

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer1948);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        goto label08;

     label14:
        virtualinvoke $r6.<java.io.InputStreamReader: void close()>();

        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

        $r10 = staticinvoke <com.common.android.analytics.AnalyticsUtils: java.lang.StringBuffer sendDataByGet(java.lang.String,java.lang.String)>($r1, $r8);

     label15:
        if $r10 != null goto label17;

     label16:
        varReplacer1946 = "AnalyticsUtils";

        varReplacer1947 = "------>cache data was send successfully!!!";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1946, varReplacer1947);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label17:
        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        return;

     label18:
        $r4 := @caughtexception;

     label19:
        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        varReplacer1950 = "Analytics";

        varReplacer1951 = "==>>Read cache data failed!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1950, varReplacer1951);

     label20:
        goto label17;

     label21:
        $r11 := @caughtexception;

        exitmonitor class "Lcom/common/android/analytics/AnalyticsUtils;";

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.lang.Exception from label12 to label13 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label02 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
    }

    public static java.lang.StringBuffer sendDataByGet(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r4, $r8, $r10, varReplacer1959, varReplacer1960, varReplacer1961, varReplacer1962, varReplacer1963, varReplacer1964, varReplacer1967, varReplacer1968, varReplacer1970, varReplacer1971, varReplacer1972;
        java.net.URL $r2, r17;
        int $i0, $i1, varReplacer1969;
        java.util.Properties $r3;
        java.lang.String[] $r5;
        java.lang.StringBuffer $r6, $r13;
        java.lang.StringBuilder $r7, r16;
        java.lang.Thread $r9;
        long $l2;
        java.net.URLConnection $r11;
        java.net.HttpURLConnection $r12;
        java.lang.Throwable $r14, $r15;
        java.io.IOException r18;
        java.net.MalformedURLException r19;
        null_type varReplacer1965, varReplacer1966, varReplacer1973;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label01;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < 1 goto label01;

        if $r1 == null goto label01;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= 1 goto label02;

     label01:
        varReplacer1966 = null;

        return varReplacer1966;

     label02:
        $r3 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        varReplacer1963 = "line.separator";

        $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(varReplacer1963);

        if $r1 == null goto label21;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        if $r5 == null goto label03;

        $i0 = lengthof $r5;

        if $i0 != 0 goto label04;

     label03:
        varReplacer1965 = null;

        return varReplacer1965;

     label04:
        $r13 = new java.lang.StringBuffer;

        $r6 = $r13;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label05:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label20;

        $r1 = $r5[$i0];

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = new java.net.URL;

        $r2 = r17;

     label06:
        specialinvoke r17.<java.net.URL: void <init>(java.lang.String)>($r8);

     label07:
        if $r2 == null goto label13;

        r16 = new java.lang.StringBuilder;

        $r7 = r16;

     label08:
        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer1961 = "CDS is Sending data(thread id = ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1961);

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l2 = virtualinvoke $r9.<java.lang.Thread: long getId()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        varReplacer1962 = "):";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1962);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1970 = "AnalyticsUtils";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1970, $r10);

        $r11 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label09:
        $r12 = (java.net.HttpURLConnection) $r11;

     label10:
        varReplacer1969 = 3000;

        virtualinvoke $r12.<java.net.HttpURLConnection: void setConnectTimeout(int)>(varReplacer1969);

        varReplacer1964 = "GET";

        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer1964);

        $i1 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>();

     label11:
        if $i1 != 200 goto label14;

     label12:
        varReplacer1967 = "AnalyticsUtils";

        varReplacer1968 = "data was send successfully";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1967, varReplacer1968);

        staticinvoke <com.common.android.analytics.AnalyticsUtils: void logAccessData(java.lang.String)>($r8);

     label13:
        $i0 = $i0 + 1;

        goto label05;

     label14:
        varReplacer1971 = "AnalyticsUtils";

        varReplacer1972 = "dat was send failed.......";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1971, varReplacer1972);

        $r13 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label15:
        goto label13;

     label16:
        $r14 := @caughtexception;

        r18 = (java.io.IOException) $r14;

     label17:
        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();

     label18:
        goto label13;

     label19:
        $r15 := @caughtexception;

        r19 = (java.net.MalformedURLException) $r15;

        virtualinvoke r19.<java.net.MalformedURLException: void printStackTrace()>();

        goto label13;

     label20:
        $i0 = virtualinvoke $r6.<java.lang.StringBuffer: int length()>();

        if $i0 != 0 goto label22;

        varReplacer1959 = "AnalyticsUtils";

        varReplacer1960 = "CDS Send all events successfully";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1959, varReplacer1960);

     label21:
        varReplacer1973 = null;

        return varReplacer1973;

     label22:
        return $r6;

        catch java.net.MalformedURLException from label06 to label07 with label19;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.net.MalformedURLException from label17 to label18 with label19;
    }

    public static boolean sendDataByPost(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r7;
        java.io.BufferedReader $r2, $r6;
        java.io.PrintWriter $r3, $r5;
        java.net.URL $r4;
        int $i0;
        java.net.URLConnection $r8;
        java.net.HttpURLConnection $r9;
        java.io.OutputStream $r10;
        java.io.InputStreamReader $r11;
        java.io.InputStream $r12;
        java.lang.StringBuilder $r13;
        java.lang.Exception $r14, $r15, $r16, $r17, $r19;
        java.lang.Throwable $r18;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label43;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < 1 goto label43;

        if $r1 == null goto label43;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= 1 goto label01;

        return 1;

     label01:
        $r5 = null;

        $r6 = null;

        $r7 = "";

     label02:
        $r4 = new java.net.URL;

     label03:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r8 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r9 = (java.net.HttpURLConnection) $r8;

        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Accept", "*/*");

        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");

        virtualinvoke $r9.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)");

        virtualinvoke $r9.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r9.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label04:
        $r3 = new java.io.PrintWriter;

     label05:
        $r10 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r10);

     label06:
        virtualinvoke $r3.<java.io.PrintWriter: void write(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

     label07:
        $r2 = new java.io.BufferedReader;

        $r11 = new java.io.InputStreamReader;

     label08:
        $r12 = virtualinvoke $r9.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r12, "UTF-8");

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11);

     label09:
        $r0 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        if $r0 == null goto label14;

     label11:
        $r13 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $r7 = $r0;

        goto label09;

     label14:
        $r13 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("===================\u300b\u300b");

        $i0 = virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("", $r0);

        $i0 = virtualinvoke $r9.<java.net.HttpURLConnection: int getResponseCode()>();

     label16:
        if $i0 != 200 goto label21;

        if $r3 == null goto label18;

     label17:
        virtualinvoke $r3.<java.io.PrintWriter: void close()>();

     label18:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

     label19:
        return 1;

     label20:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

        return 1;

     label21:
        if $r3 == null goto label23;

     label22:
        virtualinvoke $r3.<java.io.PrintWriter: void close()>();

     label23:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

     label24:
        return 0;

     label25:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

        goto label24;

     label26:
        $r16 := @caughtexception;

     label27:
        virtualinvoke $r16.<java.lang.Exception: void printStackTrace()>();

     label28:
        if $r5 == null goto label30;

     label29:
        virtualinvoke $r5.<java.io.PrintWriter: void close()>();

     label30:
        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

     label31:
        return 0;

     label32:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

        goto label31;

     label33:
        $r18 := @caughtexception;

     label34:
        if $r5 == null goto label36;

     label35:
        virtualinvoke $r5.<java.io.PrintWriter: void close()>();

     label36:
        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

     label37:
        throw $r18;

     label38:
        $r19 := @caughtexception;

        virtualinvoke $r19.<java.lang.Exception: void printStackTrace()>();

        goto label37;

     label39:
        $r18 := @caughtexception;

        $r5 = $r3;

        goto label34;

     label40:
        $r18 := @caughtexception;

        $r6 = $r2;

        $r5 = $r3;

        goto label34;

     label41:
        $r16 := @caughtexception;

        $r5 = $r3;

        goto label27;

     label42:
        $r16 := @caughtexception;

        $r6 = $r2;

        $r5 = $r3;

        goto label27;

     label43:
        return 1;

        catch java.lang.Exception from label03 to label04 with label26;
        catch java.lang.Exception from label05 to label06 with label26;
        catch java.lang.Throwable from label02 to label06 with label33;
        catch java.lang.Exception from label06 to label07 with label41;
        catch java.lang.Exception from label08 to label09 with label41;
        catch java.lang.Throwable from label06 to label09 with label39;
        catch java.lang.Exception from label09 to label10 with label42;
        catch java.lang.Exception from label12 to label13 with label42;
        catch java.lang.Exception from label15 to label16 with label42;
        catch java.lang.Throwable from label09 to label10 with label40;
        catch java.lang.Throwable from label11 to label13 with label40;
        catch java.lang.Throwable from label14 to label16 with label40;
        catch java.lang.Exception from label17 to label19 with label20;
        catch java.lang.Exception from label22 to label24 with label25;
        catch java.lang.Throwable from label27 to label28 with label33;
        catch java.lang.Exception from label29 to label31 with label32;
        catch java.lang.Exception from label35 to label37 with label38;
    }

    public static void setAccessLogAvailable(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.common.android.analytics.AnalyticsUtils: boolean accessLogAvailable> = $z0;

        return;
    }

    public static void setAnalyticsUrl(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.common.android.analytics.AnalyticsUtils: java.lang.String analyticsUrl> = $r0;

        return;
    }

    public static void setTestUrl(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.common.android.analytics.AnalyticsUtils: java.lang.String testUrl> = $r0;

        return;
    }

    private static java.lang.String urlEncode(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\+");

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("%2B");

        return $r0;
    }
}
