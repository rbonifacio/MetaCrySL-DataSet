public class com.eipix.engine.android.Crypto extends java.lang.Object
{
    private java.lang.String algorithm;
    private int base64Mode;
    private java.lang.String charsetName;

    public void <init>()
    {
        com.eipix.engine.android.Crypto $r0;
        java.lang.String varReplacer141, varReplacer142;
        int varReplacer143;

        nop;

        $r0 := @this: com.eipix.engine.android.Crypto;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer141 = "UTF8";

        $r0.<com.eipix.engine.android.Crypto: java.lang.String charsetName> = varReplacer141;

        varReplacer142 = "DES";

        $r0.<com.eipix.engine.android.Crypto: java.lang.String algorithm> = varReplacer142;

        varReplacer143 = 0;

        $r0.<com.eipix.engine.android.Crypto: int base64Mode> = varReplacer143;

        return;
    }

    public java.lang.String decrypt(java.lang.String, java.lang.String)
    {
        com.eipix.engine.android.Crypto $r0;
        java.lang.String $r1, $r2;
        javax.crypto.spec.DESKeySpec $r3;
        java.lang.Exception $r4;
        int $i0, varReplacer2381;
        byte[] $r5, $r6;
        javax.crypto.SecretKeyFactory $r7;
        javax.crypto.SecretKey $r8;
        javax.crypto.Cipher $r9;
        null_type varReplacer2380, varReplacer2382;

        nop;

        $r0 := @this: com.eipix.engine.android.Crypto;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        varReplacer2380 = null;

        return varReplacer2380;

     label2:
        $i0 = $r0.<com.eipix.engine.android.Crypto: int base64Mode>;

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, $i0);

     label3:
        $r3 = new javax.crypto.spec.DESKeySpec;

     label4:
        $r2 = $r0.<com.eipix.engine.android.Crypto: java.lang.String charsetName>;

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        specialinvoke $r3.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r6);

        $r1 = $r0.<com.eipix.engine.android.Crypto: java.lang.String algorithm>;

        $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r1 = $r0.<com.eipix.engine.android.Crypto: java.lang.String algorithm>;

        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        varReplacer2381 = 2;

        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2381, $r8);

        $r5 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label5:
        $r1 = new java.lang.String;

     label6:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r5);

     label7:
        return $r1;

     label8:
        $r4 := @caughtexception;

        varReplacer2382 = null;

        return varReplacer2382;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public java.lang.String encrypt(java.lang.String, java.lang.String)
    {
        com.eipix.engine.android.Crypto $r0;
        java.lang.String $r1, $r2, $r5;
        javax.crypto.spec.DESKeySpec $r3;
        java.lang.Exception $r4;
        int $i0;
        byte[] $r6;
        javax.crypto.SecretKeyFactory $r7;
        javax.crypto.SecretKey $r8;
        javax.crypto.Cipher $r9;

        $r0 := @this: com.eipix.engine.android.Crypto;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label5;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new javax.crypto.spec.DESKeySpec;

     label2:
        $r5 = $r0.<com.eipix.engine.android.Crypto: java.lang.String charsetName>;

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);

        specialinvoke $r3.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r6);

        $r1 = $r0.<com.eipix.engine.android.Crypto: java.lang.String algorithm>;

        $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r1 = $r0.<com.eipix.engine.android.Crypto: java.lang.String charsetName>;

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r1);

        $r1 = $r0.<com.eipix.engine.android.Crypto: java.lang.String algorithm>;

        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r8);

        $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $i0 = $r0.<com.eipix.engine.android.Crypto: int base64Mode>;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r6, $i0);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

     label5:
        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.String generateID()
    {
        com.eipix.engine.android.Crypto $r0;
        com.eipix.engine.android.MainActivity $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.String $r4, $r5, $r6, varReplacer2375, varReplacer2378;
        boolean $z0;
        java.lang.Object $r7;
        android.telephony.TelephonyManager $r8;
        int varReplacer2376, varReplacer2377;

        nop;

        $r0 := @this: com.eipix.engine.android.Crypto;

        $r1 = <com.eipix.engine.android.MainActivity: com.eipix.engine.android.MainActivity _Instance>;

        $r2 = virtualinvoke $r1.<com.eipix.engine.android.MainActivity: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer2378 = "android_id";

        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, varReplacer2378);

        $r5 = $r4;

        $r6 = "9774d56d682e549c";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        if $r4 != null goto label2;

     label1:
        $r1 = <com.eipix.engine.android.MainActivity: com.eipix.engine.android.MainActivity _Instance>;

        $r2 = virtualinvoke $r1.<com.eipix.engine.android.MainActivity: android.content.Context getApplicationContext()>();

        varReplacer2375 = "phone";

        $r7 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer2375);

        $r8 = (android.telephony.TelephonyManager) $r7;

        $r4 = virtualinvoke $r8.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        $r5 = $r4;

        if $r4 != null goto label2;

        $r5 = "eipix329";

     label2:
        varReplacer2376 = 0;

        varReplacer2377 = 8;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2376, varReplacer2377);

        return $r5;
    }

    public java.lang.String getAlgorithm()
    {
        com.eipix.engine.android.Crypto $r0;
        java.lang.String r1;

        $r0 := @this: com.eipix.engine.android.Crypto;

        r1 = $r0.<com.eipix.engine.android.Crypto: java.lang.String algorithm>;

        return r1;
    }

    public int getBase64Mode()
    {
        com.eipix.engine.android.Crypto $r0;
        int i0;

        $r0 := @this: com.eipix.engine.android.Crypto;

        i0 = $r0.<com.eipix.engine.android.Crypto: int base64Mode>;

        return i0;
    }

    public java.lang.String getCharsetName()
    {
        com.eipix.engine.android.Crypto $r0;
        java.lang.String r1;

        $r0 := @this: com.eipix.engine.android.Crypto;

        r1 = $r0.<com.eipix.engine.android.Crypto: java.lang.String charsetName>;

        return r1;
    }

    public void setAlgorithm(java.lang.String)
    {
        com.eipix.engine.android.Crypto $r0;
        java.lang.String $r1;

        $r0 := @this: com.eipix.engine.android.Crypto;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.eipix.engine.android.Crypto: java.lang.String algorithm> = $r1;

        return;
    }

    public void setBase64Mode(int)
    {
        com.eipix.engine.android.Crypto $r0;
        int $i0;

        $r0 := @this: com.eipix.engine.android.Crypto;

        $i0 := @parameter0: int;

        $r0.<com.eipix.engine.android.Crypto: int base64Mode> = $i0;

        return;
    }

    public void setCharsetName(java.lang.String)
    {
        com.eipix.engine.android.Crypto $r0;
        java.lang.String $r1;

        $r0 := @this: com.eipix.engine.android.Crypto;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.eipix.engine.android.Crypto: java.lang.String charsetName> = $r1;

        return;
    }
}
