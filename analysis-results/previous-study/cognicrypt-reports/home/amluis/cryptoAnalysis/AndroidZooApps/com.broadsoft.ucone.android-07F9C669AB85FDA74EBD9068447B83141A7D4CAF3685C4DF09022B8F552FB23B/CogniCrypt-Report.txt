Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 14ae6927928ab37a5a5963ed3fe6b7b1fd57834d893578aaf9d81441f3b3f8e9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: 3e15c1bfd3601c8cdeba9ee67111e58b43122ece40c8b2416f86295231a37146
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer3249)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 6db8010c835a567a74b48e76cbc92d64beae87dfea60d90232f8c598324bb809
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer7506)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: add69841586e9afcafe1fd81ce5006e18c196479c5f15916fe6977bea2d47afd
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3247)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 257a4089d7570896488dd402c4104bf6930f1fa07b7cac147f305018302cce88
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3275, varReplacer3276)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: e662f7c74beb7192a2d6a4d967d28deadb07b802b24b4a7b42d46677928c35bb
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 881f32e58721878700841a3cc56af8ca5dbdadf35259f6b65f19a5df722c29e4
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: d44de015c0936c9d1fdfdd4e9dbd342f92bed011c7a26624fd806a1b4ed1df77
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: d42b59b2002448288977196c3e1488faf64960bf5f56942a8275adeba1b3346d
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer455)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: 5ce15d9fc066de736ad624d60f7568e94a0302ad165134cc1b8bbbe10a5b99d3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5029)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)>
		SHA-256: 98f0e0c8d3b473bc243bc54d2f9d448da54d826be73e147c3ffe8b380f8249c2
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r9)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: be5a7fd13e20b844eb558609a583ef5f8105d50743ebe32cfc6119bb18928986
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3278)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: cbe842a9d51a540001adbd5c2f30277cf1d73ea4e4a051f1210d132798a9f32c
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: ab3925dc9527d47d02367b8fad778b168cbe4814fd43010bb9d6573bd5205c91
		Secure: true
	Object:
		Variable: varReplacer3270
		Type: java.lang.String
		Statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3270)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 6d6a352866db31882fc092b81646fefd30198b5a46679b9d7bf864c695361218
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: 6f09f4a70112028e7919aec1ff0281157533d598dc94ebc202176cac908afc75
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4500)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: d998a2c2cd0b4b54e81cc000a865d9539e152939aa87fbcc812e680d0b2688c8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: b8d0f92b40d7acf197133bd0e9f1f9654be4a8e5f2c47e0c0fa59ebca9053c85
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7440)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: e4ab5c3097e5fe01f9caea84569f68de885c0bd4b964bd916456ec7930892980
		Secure: false
	Object:
		Variable: varReplacer3276
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3275, varReplacer3276)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: cafc8f3aaa6c8abf38673a56998271b08ba645328a27ee4482fa6dbe6c1f008b
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: af9233f686a066a755ade8f23647d33647dc22c82d743a73c43b1294476d21bc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r3.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)>
		SHA-256: 1787e3c4aad6b4501f536b9d39e4d1fc63cedfb1d4a005ba13c963528b9d4669
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: a5dfacf5fbc744197fb5bd7a789b65d2d801234cd696d7912b619c415a6758b2
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.SecretKeyFactory
		Statement: $r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3274)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 8726e18a50da1cc0f87de45f86aa67fc6f3b6ffa37b1a0109e95121d635a923d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer7295)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.PublicKey getRsaPublicKey(android.content.Context,java.lang.String)>
		SHA-256: 666ce704f26e7c488469b6d18db84934b802e4490b7b190c7187105a2504a70c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 824ba22683660c59575f402494a9b5aa5f91d72d9fe95dd6abdf94f6948ceab0
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8be624ac93d5f3c7d6c8c24d00c5423cc183c8f6c9ac2cc4d0e89ac93142d824
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: a5dfacf5fbc744197fb5bd7a789b65d2d801234cd696d7912b619c415a6758b2
		Secure: true
	Object:
		Variable: varReplacer449
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer449)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 561e20b51d8219c560bfb6bc2ee4de4575b665279a87cfb1ce5855bfd8256a4f
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: fedc6360aa8b1a08e982fd2e889072f2836f4ba1a74c342237603003dba27626
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3277)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 3f86b3e21caf731c926f636c55b7193510813a32394c5196a93552f77b2842a3
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: 3e15c1bfd3601c8cdeba9ee67111e58b43122ece40c8b2416f86295231a37146
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 954231d089fea2084e9bb2c9f137806e2fab130323a05a53cd60512611d9a38e
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPairGenerator
		Statement: $r10 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3286, varReplacer3287)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)>
		SHA-256: 93f86ac6fae75e687f3e9e7e1da37972afe54fc42faf62889082281ef84f06e
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3270)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: c750193864d22464c504312c692af000fc9f4067ffb92a541b8cc51912431911
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer456)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)>
		SHA-256: 2e2acf17c41bf5c97b5cff58d02e458d7b709b77a56601daff112d32ae33b568
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.SecretKey
		Statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: adfd25914b57e6c5186a6c5b5f999fa351da76c6f4982d0bd8d1afb7c2b2366
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: $r11 = virtualinvoke $r10.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)>
		SHA-256: 7a054836665fd20834bd98373ace3cc88132431dc2d6a6d6eccc200797af4985
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r10)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)>
		SHA-256: 7d49e7f8a172ebd749888a1a4d4a6bb9ef11a577623e5d09e0dde9c05786bb36
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5481)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)>
		SHA-256: 734bc1e96328132104b98952da18d3b230ad73b653cfb06ed1840efecef0b881
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3245)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 462cf0382b2d656cdfa5867df8f15283b7fa6addd0f10d43e4db4d17fdf22f59
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decrypt(java.lang.String,android.content.Context)>
		SHA-256: 63d507aaa1e0e967461ed1b6e09e4081da1b22a07c94628e676040af9093cbe0
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 888f004bf913285256e45e2b1573cc1058f35316800cc38f5ffed7511e5fb70
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer451)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 874017b8ace10e0e43cb5b8a753d92a2ac0a429e8d3e5ef53baaeec1251bfc6c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3253)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: f736c67877f8c61427d25a59a906814eb27361413cdb5ec6f5b100e5a92b8fb6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer449)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 637f5e0c88a86f9087ce2c69a737399fa7a1bc550aa6d923eed58e7444bba8da
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>
		SHA-256: b0ca51b0a92b88348fe08e17a9f827eba359c5358c6a60ce465718da926f1a95
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.broadsoft.xmpp.android.database.ChatDbAdapter: java.lang.String createAndSavePassword()>
		SHA-256: bcfaf5c44fd9a888857663a6c2adf53080af4cf1569a34884b32b2ebc4feaf6e
		Secure: true

Findings in Java Class: com.broadsoft.android.xsilibrary.util.CryptoUtils

	 in Method: java.lang.String decrypt(java.lang.String,android.content.Context)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #462cf0382b2d656cdfa5867df8f15283b7fa6addd0f10d43e4db4d17fdf22f59)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBKDF2WithHmacSHA224, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA512, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3245)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer3249)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #6db8010c835a567a74b48e76cbc92d64beae87dfea60d90232f8c598324bb809)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, varReplacer3249)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3250, $r7, $r9)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #257a4089d7570896488dd402c4104bf6930f1fa07b7cac147f305018302cce88)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3247)


	 in Method: byte[] decryptWithRSAToByteArray(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer459, $r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #2e2acf17c41bf5c97b5cff58d02e458d7b709b77a56601daff112d32ae33b568)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer458)


	 in Method: java.lang.String decryptWithAES(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3255, $r6, $r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f736c67877f8c61427d25a59a906814eb27361413cdb5ec6f5b100e5a92b8fb6)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r8 = staticinvoke <com.broadsoft.android.xsilibrary.util.CryptoUtils: javax.crypto.spec.IvParameterSpec generateIv(android.content.Context,java.lang.String,javax.crypto.Cipher)>($r0, $r2, $r7)


	 in Method: javax.crypto.spec.SecretKeySpec generateKey(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3275, varReplacer3276)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #8726e18a50da1cc0f87de45f86aa67fc6f3b6ffa37b1a0109e95121d635a923d)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBKDF2WithHmacSHA224, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA512, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r13 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3274)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e662f7c74beb7192a2d6a4d967d28deadb07b802b24b4a7b42d46677928c35bb)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3275, varReplacer3276)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e662f7c74beb7192a2d6a4d967d28deadb07b802b24b4a7b42d46677928c35bb)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r14, $r6, varReplacer3275, varReplacer3276)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e662f7c74beb7192a2d6a4d967d28deadb07b802b24b4a7b42d46677928c35bb)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r15 = virtualinvoke $r13.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3270)


	 in Method: java.lang.String encryptWithRSA(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3280, $r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #3f86b3e21caf731c926f636c55b7193510813a32394c5196a93552f77b2842a3)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r2, varReplacer3282)


	 in Method: java.lang.Object decryptStream(android.content.Context,java.lang.String,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #98f0e0c8d3b473bc243bc54d2f9d448da54d826be73e147c3ffe8b380f8249c2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r12 = virtualinvoke $r13.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>($r10)

		TypestateError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7d49e7f8a172ebd749888a1a4d4a6bb9ef11a577623e5d09e0dde9c05786bb36)
			Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read
			at statement: virtualinvoke $r2.<javax.crypto.CipherInputStream: void close()>()


	 in Method: void encryptStream(android.content.Context,java.lang.String,java.io.Serializable,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #734bc1e96328132104b98952da18d3b230ad73b653cfb06ed1840efecef0b881)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r3.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #1787e3c4aad6b4501f536b9d39e4d1fc63cedfb1d4a005ba13c963528b9d4669)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r5.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r3)


	 in Method: java.security.PublicKey getRsaPublicKey(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #666ce704f26e7c488469b6d18db84934b802e4490b7b190c7187105a2504a70c)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer7297)


	 in Method: java.lang.String decryptSSOToken(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer447, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer449)


	 in Method: java.security.KeyPair generateRsaPairWithGenerator(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r9)


	 in Method: java.lang.String encryptWithAES(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4501, $r7, $r11)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e4ab5c3097e5fe01f9caea84569f68de885c0bd4b964bd916456ec7930892980)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7440)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 54

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
	RequiredPredicateError: 16
	NeverTypeOfError: 1
	IncompleteOperationError: 8
	TypestateError: 1
	ConstraintError: 6
=====================================================================