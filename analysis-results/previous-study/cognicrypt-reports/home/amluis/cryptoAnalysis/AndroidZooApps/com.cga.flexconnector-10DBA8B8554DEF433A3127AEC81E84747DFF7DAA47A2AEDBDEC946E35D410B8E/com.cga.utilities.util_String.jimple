public class com.cga.utilities.util_String extends java.lang.Object
{
    private static final char[] HEX_DIGITS;

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String $r1;

        nop;

        $r1 = "0123456789ABCDEF";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <com.cga.utilities.util_String: char[] HEX_DIGITS> = $r0;

        return;
    }

    public void <init>()
    {
        com.cga.utilities.util_String $r0;

        $r0 := @this: com.cga.utilities.util_String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String cleanName(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <com.cga.utilities.L: void i(java.lang.String,java.lang.String)>("STRING", $r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&amp;", "&");

        return $r0;
    }

    public static java.lang.String implode(java.lang.String, java.lang.String[])
    {
        java.lang.String $r0, $r3, varReplacer1070;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r4;
        null_type varReplacer1069;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        varReplacer1069 = null;

        return varReplacer1069;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r1[0];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i1 = 1;

     label2:
        if $i1 < $i0 goto label3;

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label3:
        varReplacer1070 = ",";

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1070);

        $r3 = $r1[$i1];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i1 = $i1 + 1;

        goto label2;
    }

    public static boolean in_array(java.util.List, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 < $i1 goto label3;

        return 0;

     label3:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r2;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $i0 = $i0 + 1;

        goto label2;
    }

    public static boolean in_array(java.lang.String[], java.lang.String)
    {
        java.lang.String[] $r0;
        java.lang.String $r1, $r2, varReplacer1930;
        int $i0, $i1, varReplacer1927, varReplacer1928, varReplacer1929;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $i0 = lengthof $r0;

        if $i0 == 0 goto label4;

        varReplacer1930 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer1930);

        if $z0 == 0 goto label1;

        varReplacer1927 = 0;

        return varReplacer1927;

     label1:
        $i0 = lengthof $r0;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r2 = $r0[$i1];

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        varReplacer1928 = 1;

        return varReplacer1928;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        varReplacer1929 = 0;

        return varReplacer1929;
    }

    public static java.lang.String leftPad(java.lang.String, int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0, $r1, $r2;
        java.lang.StringBuilder $r3;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.String;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 < $i0 goto label1;

        return $r1;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        $r2 = "";

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        $r3 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i1 + 1;

        goto label2;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, r6, varReplacer4439, varReplacer4440;
        char[] $r1, $r5;
        java.lang.Throwable $r2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        int $i0, $i1, varReplacer4441;
        byte $b2;
        char $c3;
        java.security.NoSuchAlgorithmException r7;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer4440 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4440);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        varReplacer4441 = 0;

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[],int,int)>($r4, varReplacer4441, $i0);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label2:
        $i0 = lengthof $r4;

        $i0 = $i0 * 2;

        $r1 = newarray (char)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof $r4;

        if $i0 < $i1 goto label6;

        r6 = new java.lang.String;

     label4:
        specialinvoke r6.<java.lang.String: void <init>(char[])>($r1);

     label5:
        return r6;

     label6:
        $i1 = $i0 * 2;

        $r5 = <com.cga.utilities.util_String: char[] HEX_DIGITS>;

        $b2 = $r4[$i0];

        $b2 = $b2 >> 4;

        $b2 = $b2 & 15;

        $c3 = $r5[$b2];

        $r1[$i1] = $c3;

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $r5 = <com.cga.utilities.util_String: char[] HEX_DIGITS>;

        $b2 = $r4[$i0];

        $b2 = $b2 & 15;

        $c3 = $r5[$b2];

        $r1[$i1] = $c3;

        $i0 = $i0 + 1;

        goto label3;

     label7:
        $r2 := @caughtexception;

        r7 = (java.security.NoSuchAlgorithmException) $r2;

        virtualinvoke r7.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer4439 = "";

        return varReplacer4439;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label7;
        catch java.security.NoSuchAlgorithmException from label4 to label5 with label7;
    }

    public static java.lang.String[] repeat(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        java.lang.String[] $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = newarray (java.lang.String)[$i0];

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return $r1;

     label2:
        $r1[$i1] = $r0;

        $i1 = $i1 + 1;

        goto label1;
    }
}
