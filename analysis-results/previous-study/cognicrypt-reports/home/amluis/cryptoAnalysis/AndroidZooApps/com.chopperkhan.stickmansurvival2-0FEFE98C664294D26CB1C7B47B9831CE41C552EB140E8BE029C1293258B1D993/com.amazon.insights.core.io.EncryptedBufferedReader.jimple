public class com.amazon.insights.core.io.EncryptedBufferedReader extends java.io.BufferedReader
{
    private static final int BUFFER_SIZE;
    private javax.crypto.Cipher cipher;
    private final java.io.BufferedReader reader;

    public void <init>(java.io.BufferedReader, javax.crypto.SecretKey)
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.io.BufferedReader $r1;
        javax.crypto.SecretKey $r2;
        java.lang.String $r3;
        javax.crypto.Cipher $r4;
        java.lang.Throwable $r5, $r7, $r8;
        java.lang.IllegalArgumentException $r6;
        null_type varReplacer1092, varReplacer1093, varReplacer1095;
        int varReplacer1094;

        nop;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: java.io.BufferedReader;

        $r2 := @parameter1: javax.crypto.SecretKey;

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader> = $r1;

     label1:
        $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3);

     label2:
        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = $r4;

        $r4 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher>;

     label3:
        varReplacer1094 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1094, $r2);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        varReplacer1095 = null;

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = varReplacer1095;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer1092 = null;

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = varReplacer1092;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r6;

     label7:
        $r8 := @caughtexception;

        varReplacer1093 = null;

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = varReplacer1093;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r8);

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch javax.crypto.NoSuchPaddingException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
    }

    public void close() throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.io.BufferedReader $r1;

        nop;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        return;
    }

    public void mark(int) throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the mark(int) method");

        throw $r1;
    }

    public boolean markSupported()
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        return 0;
    }

    public int read() throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read() method");

        throw $r1;
    }

    public int read(java.nio.CharBuffer) throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.nio.CharBuffer $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: java.nio.CharBuffer;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read(CharBuffer) method");

        throw $r2;
    }

    public int read(char[]) throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        char[] $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: char[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read(char[]) method");

        throw $r2;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read(char[],int,int) method");

        throw $r2;
    }

    public java.lang.String readLine() throws java.io.IOException, com.amazon.insights.core.io.DecryptionException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        byte[] $r1;
        java.io.ByteArrayInputStream $r2, $r7, r20;
        java.io.ByteArrayOutputStream $r3, $r8, r21;
        java.util.zip.GZIPInputStream $r4, $r9, r22;
        javax.crypto.Cipher $r5;
        java.io.IOException $r6, r19;
        java.io.BufferedReader $r10;
        java.lang.String $r11, r24, varReplacer1940, varReplacer1941, varReplacer1943;
        int $i0, varReplacer1942;
        java.lang.Exception $r12, $r18, r25;
        com.amazon.insights.core.io.DecryptionException $r13, $r17, r23;
        java.lang.Throwable $r14, $r15, $r16;
        null_type varReplacer1944;

        nop;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r5 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher>;

        if $r5 != null goto label01;

        r19 = new java.io.IOException;

        varReplacer1941 = "Could not build a Cipher to decrpyt the underlying writer";

        specialinvoke r19.<java.io.IOException: void <init>(java.lang.String)>(varReplacer1941);

        throw r19;

     label01:
        $r7 = null;

        $r8 = null;

        $r9 = null;

     label02:
        $r10 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

     label03:
        $r11 = virtualinvoke $r10.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        if $r11 != null goto label08;

        goto label05;

     label05:
        goto label06;

     label06:
        goto label07;

     label07:
        varReplacer1944 = null;

        return varReplacer1944;

     label08:
        $r5 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher>;

     label09:
        varReplacer1943 = "UTF-8";

        $r1 = virtualinvoke $r11.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1943);

        $r1 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] decodeBase64(byte[])>($r1);

        $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label10:
        r20 = new java.io.ByteArrayInputStream;

     label11:
        $r2 = r20;

     label12:
        specialinvoke r20.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

     label13:
        r21 = new java.io.ByteArrayOutputStream;

     label14:
        $r3 = r21;

     label15:
        specialinvoke r21.<java.io.ByteArrayOutputStream: void <init>()>();

     label16:
        $r1 = newarray (byte)[1024];

     label17:
        r22 = new java.util.zip.GZIPInputStream;

     label18:
        $r4 = r22;

     label19:
        specialinvoke r22.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r2);

     label20:
        $i0 = virtualinvoke $r4.<java.util.zip.GZIPInputStream: int read(byte[])>($r1);

     label21:
        if $i0 <= 0 goto label38;

     label22:
        varReplacer1942 = 0;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, varReplacer1942, $i0);

     label23:
        goto label20;

     label24:
        $r12 := @caughtexception;

        $r9 = $r4;

     label25:
        r23 = new com.amazon.insights.core.io.DecryptionException;

     label26:
        $r13 = r23;

     label27:
        specialinvoke r23.<com.amazon.insights.core.io.DecryptionException: void <init>(java.lang.Exception)>($r12);

     label28:
        throw $r13;

     label29:
        $r14 := @caughtexception;

        $r8 = $r3;

        $r7 = $r2;

     label30:
        r23 = new com.amazon.insights.core.io.DecryptionException;

     label31:
        $r13 = r23;

     label32:
        r25 = (java.lang.Exception) $r14;

        specialinvoke r23.<com.amazon.insights.core.io.DecryptionException: void <init>(java.lang.Exception)>(r25);

        throw $r13;

     label33:
        $r15 := @caughtexception;

     label34:
        if $r9 == null goto label35;

        virtualinvoke $r9.<java.util.zip.GZIPInputStream: void close()>();

     label35:
        if $r7 == null goto label36;

        virtualinvoke $r7.<java.io.ByteArrayInputStream: void close()>();

     label36:
        if $r8 == null goto label37;

        virtualinvoke $r8.<java.io.ByteArrayOutputStream: void close()>();

     label37:
        throw $r15;

     label38:
        r24 = new java.lang.String;

     label39:
        $r11 = r24;

     label40:
        $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        varReplacer1940 = "UTF-8";

        specialinvoke r24.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, varReplacer1940);

     label41:
        if $r4 == null goto label42;

        virtualinvoke $r4.<java.util.zip.GZIPInputStream: void close()>();

     label42:
        if $r2 == null goto label43;

        virtualinvoke $r2.<java.io.ByteArrayInputStream: void close()>();

     label43:
        if $r3 == null goto label44;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

     label44:
        return $r11;

     label45:
        $r16 := @caughtexception;

     label46:
        r23 = new com.amazon.insights.core.io.DecryptionException;

     label47:
        $r13 = r23;

     label48:
        r25 = (java.lang.Exception) $r16;

        specialinvoke r23.<com.amazon.insights.core.io.DecryptionException: void <init>(java.lang.Exception)>(r25);

        throw $r13;

     label49:
        $r17 := @caughtexception;

     label50:
        throw $r17;

     label51:
        $r18 := @caughtexception;

     label52:
        r19 = new java.io.IOException;

     label53:
        $r6 = r19;

     label54:
        $r11 = virtualinvoke $r18.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke r19.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label55:
        $r15 := @caughtexception;

        $r7 = $r2;

        goto label34;

     label56:
        $r15 := @caughtexception;

        $r8 = $r3;

        $r7 = $r2;

        goto label34;

     label57:
        $r15 := @caughtexception;

        $r9 = $r4;

        $r8 = $r3;

        $r7 = $r2;

        goto label34;

     label58:
        $r18 := @caughtexception;

        $r7 = $r2;

        goto label52;

     label59:
        $r18 := @caughtexception;

        $r8 = $r3;

        $r7 = $r2;

        goto label52;

     label60:
        $r18 := @caughtexception;

        $r9 = $r4;

        $r8 = $r3;

        $r7 = $r2;

        goto label52;

     label61:
        $r17 := @caughtexception;

        $r7 = $r2;

        goto label50;

     label62:
        $r17 := @caughtexception;

        $r8 = $r3;

        $r7 = $r2;

        goto label50;

     label63:
        $r17 := @caughtexception;

        $r9 = $r4;

        $r8 = $r3;

        $r7 = $r2;

        goto label50;

     label64:
        $r16 := @caughtexception;

        $r7 = $r2;

        goto label46;

     label65:
        $r16 := @caughtexception;

        $r8 = $r3;

        $r7 = $r2;

        goto label46;

     label66:
        $r16 := @caughtexception;

        $r9 = $r4;

        $r8 = $r3;

        $r7 = $r2;

        goto label46;

     label67:
        $r14 := @caughtexception;

        goto label30;

     label68:
        $r14 := @caughtexception;

        $r7 = $r2;

        goto label30;

     label69:
        $r14 := @caughtexception;

        $r9 = $r4;

        $r8 = $r3;

        $r7 = $r2;

        goto label30;

     label70:
        $r12 := @caughtexception;

        goto label25;

        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label67;
        catch javax.crypto.BadPaddingException from label03 to label04 with label45;
        catch com.amazon.insights.core.io.DecryptionException from label03 to label04 with label49;
        catch java.lang.Exception from label02 to label04 with label51;
        catch java.lang.Throwable from label02 to label04 with label33;
        catch javax.crypto.IllegalBlockSizeException from label09 to label10 with label67;
        catch javax.crypto.IllegalBlockSizeException from label12 to label13 with label67;
        catch javax.crypto.BadPaddingException from label09 to label10 with label45;
        catch javax.crypto.BadPaddingException from label12 to label13 with label45;
        catch com.amazon.insights.core.io.DecryptionException from label09 to label10 with label49;
        catch com.amazon.insights.core.io.DecryptionException from label12 to label13 with label49;
        catch java.lang.Exception from label08 to label10 with label51;
        catch java.lang.Exception from label12 to label13 with label51;
        catch java.lang.Throwable from label08 to label11 with label33;
        catch java.lang.Throwable from label12 to label13 with label33;
        catch javax.crypto.IllegalBlockSizeException from label15 to label16 with label68;
        catch javax.crypto.BadPaddingException from label15 to label16 with label64;
        catch com.amazon.insights.core.io.DecryptionException from label15 to label16 with label61;
        catch java.lang.Exception from label15 to label16 with label58;
        catch java.lang.Throwable from label13 to label14 with label55;
        catch java.lang.Throwable from label15 to label16 with label55;
        catch java.lang.Exception from label16 to label17 with label59;
        catch java.lang.Exception from label19 to label20 with label70;
        catch java.lang.Throwable from label17 to label18 with label56;
        catch java.lang.Throwable from label19 to label20 with label56;
        catch java.lang.Exception from label20 to label21 with label24;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Throwable from label20 to label21 with label57;
        catch java.lang.Throwable from label22 to label23 with label57;
        catch javax.crypto.IllegalBlockSizeException from label27 to label28 with label29;
        catch javax.crypto.BadPaddingException from label27 to label28 with label65;
        catch com.amazon.insights.core.io.DecryptionException from label27 to label29 with label62;
        catch java.lang.Exception from label27 to label29 with label59;
        catch java.lang.Throwable from label25 to label26 with label56;
        catch java.lang.Throwable from label27 to label29 with label56;
        catch java.lang.Throwable from label30 to label31 with label33;
        catch java.lang.Throwable from label32 to label33 with label33;
        catch javax.crypto.IllegalBlockSizeException from label40 to label41 with label69;
        catch javax.crypto.BadPaddingException from label40 to label41 with label66;
        catch com.amazon.insights.core.io.DecryptionException from label40 to label41 with label63;
        catch java.lang.Exception from label40 to label41 with label60;
        catch java.lang.Throwable from label38 to label39 with label57;
        catch java.lang.Throwable from label40 to label41 with label57;
        catch java.lang.Throwable from label46 to label47 with label33;
        catch java.lang.Throwable from label48 to label49 with label33;
        catch java.lang.Throwable from label50 to label51 with label33;
        catch java.lang.Throwable from label52 to label53 with label33;
        catch java.lang.Throwable from label54 to label55 with label33;
    }

    public boolean ready() throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        boolean $z0;
        java.io.BufferedReader $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

        $z0 = virtualinvoke $r1.<java.io.BufferedReader: boolean ready()>();

        return $z0;
    }

    public void reset() throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.io.BufferedReader $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

        virtualinvoke $r1.<java.io.BufferedReader: void reset()>();

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        long $l0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $l0 := @parameter0: long;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the skip(long) method");

        throw $r1;
    }
}
