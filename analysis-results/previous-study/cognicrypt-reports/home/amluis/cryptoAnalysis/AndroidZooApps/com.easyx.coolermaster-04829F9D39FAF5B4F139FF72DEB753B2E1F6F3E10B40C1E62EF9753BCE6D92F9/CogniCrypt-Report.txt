Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8926)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: b7566f60868e842054b6581881d62d901cbdd5bca5e0674e3c4eb34ea7bcad25
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xinmei.adsdk.utils.a: byte[] a(byte[],java.security.Key)>
		SHA-256: defbc4b7fb5d3c71cbf4d8f2e717a32c0a66bc2b21ba0dd8b3d675ed5143a7a6
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 2f60181713d6f5ba9d7147e52d275fa1384e51fe31796c1e6effaa0e31708dfb
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: ca0bf1c97755bf745e72f10f87c4e24f8b7dce695ba5b7e758416d86fb7d9af9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8932)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 4bdddd1b9a69dafed9fbeff57218606a05630043165f50ebf59de9bb9f6eeef6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7911)
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: a03cf83d38a7612fab58d6ef1349f83e9e301432ce9e846e127dbeca819ce63c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 37f7cbbc0475c0bef73971e5b9ec7619051e1c7359fd4900ab8d1b0cfda7455e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: d03c4b5dde23467f8ab226b16bdfd736c32e8c7c65effcb3bc7906bfe80486ab
		Secure: false
	Object:
		Variable: varReplacer8927
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8927)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 8fb16ab79e12bd1f0d810e1828dbf61474d0afc775b3ea60e6311a1c86c05a37
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1601)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 290d7c5210e633a941ad544c0e1212030c2de00b2011b46767970fac633d9071
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 616dea5870abd7100e346a82870661e7e0d4aa0710c5ecda884c5c032ec0ae5f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: 9bec08917d8c17d6308fce1047325c6c7c3f151094e6e268fc8e7d3e89e5beab
		Secure: false
	Object:
		Variable: r5
		Type: java.security.SecureRandom
		Statement: specialinvoke r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 9f1c4ae5f4fdc8824f49a30e855726d5cf9a79f85f0407845e9f9b016c50d1fa
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8246)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: d188fb2b8ad2126d05a65707f7840780a2516f76ad903dcf5453fa7a37954091
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.easyxapp.common.http.a$a: void <init>(com.easyxapp.common.http.a,java.security.KeyStore)>
		SHA-256: 3908602dbae991d19161fd8be308ee4cfba4a7b835c124df0086cf9188dc05c6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: c9324f008248c2c970dbb485d485919e922bd7f99c929b778d6182bd5a8c3023
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xinmei.adsdk.utils.a: byte[] b()>
		SHA-256: 6c968a2ebbc994743debaa0f8ff4b55131f79d716707e0bf8bcc02401e1fb8a9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8927)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 7e4d7d768223de7c43ac911f261cbf9c30c0cfa20e38db3f82ab8849a9a4123e
		Secure: false
	Object:
		Variable: varReplacer8949
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8949)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: 2209f4bdc411ca1c23dc8271847270ce24dea3517abca4783d9a191ab9e36d4a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1598)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: f9112b696bb99b41decb37947737775d55fe019284240220d27e356b9ee58ae3
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 2f60181713d6f5ba9d7147e52d275fa1384e51fe31796c1e6effaa0e31708dfb
		Secure: true
	Object:
		Variable: varReplacer1615
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1615)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 919219a0f2e1ca623332b14fc1d0677ff85b8876e5037c4559b911141109b533
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1615)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 3709ed3e70bf661fd782518fdffafc6a81c6d8c4bb9c441680d28889e1779e68
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3843)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: 8494320ed3102f93f6ffe40cd2d431102bc7a622e52b073f8e2a4706245c87a7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8949)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: fce40b16d371fffe12115f402b4495ac750b0b42cdf3558235aeb2d1884755fe
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xinmei.adsdk.utils.t: java.lang.String d(java.lang.String)>
		SHA-256: 1595d0184eb2c81f1c4613dd10f1a2ccb77605c993df3bcb47a0c0048a5b5d19
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: cec1cae73ed5d071f0d6946e6489a03382b4cb2fad6bcba1f496013ecc632401
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.easyxapp.kr.d.f: java.lang.String a(byte[])>
		SHA-256: 52501fe926eb8ac3ce1c4362181abb3005d7ffaf0e91416e41c7bee2c69fc156
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8242)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: c0fcd051f69239f5d69f07f6144d803c500e2d4709d8001cc2a51ef81c12c860
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8950)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: 7810c2d7cd9bb863ed59d97679f8b11d2953dea38b9ac1e8a2be49bb6c68ec2f
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 616dea5870abd7100e346a82870661e7e0d4aa0710c5ecda884c5c032ec0ae5f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 5a58416d1a9068e8adc9791ca5ff18d0a284cda03b2d6fec148fdd3e77eb7f4e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 285b7cc6277f9df04e8584a4ae6095db72579ef07c82dcc337109710ad50a785
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r1 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xinmei.adsdk.utils.a: byte[] b()>
		SHA-256: f22521785f615dd0e4d1e83f1ba09a0ce0783a24c18e091d07c7c4134fab6156
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.easyxapp.xp.common.util.m: java.lang.String a(byte[])>
		SHA-256: f2fb31475b5db960dbc5b25fe6b2915e1e889d2ef9fa8fe5dccce814c32a2dc9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4229)
		Method: <com.xinmei.adsdk.utils.t: java.lang.String d(java.lang.String)>
		SHA-256: 2863872c347a6eac78fbbb8661f331f8c3dfe055446955704bc0b414018acde6
		Secure: false
	Object:
		Variable: r48
		Type: java.security.SecureRandom
		Statement: specialinvoke r48.<java.security.SecureRandom: void <init>()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: ae5ec3e880e484c2347a8bdd275050f73a5344dc7e5478fa3752317de601fd99
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 70afe47b024b63fe976daddfdc9e396708d342a20ebc3fba7e11727837415f3b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3842)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: 9596c5783238ddb94f2e58f73acd1eecdb6bd910f0450d498b8537e84e79e5e7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer8928, varReplacer8929)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 10f2b1758144be72be01f0ee3fcdb778d2095e54d366f7f90dcdae9c626d29a9
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7536)
		Method: <com.easyxapp.xp.common.util.m: java.lang.String a(byte[])>
		SHA-256: 2caddb591611b6b3aa0e43a2a25465097c46979f6edaa16a333dd7e3554dd7b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1599)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: ca5109c4706785f237943b773463e0d47e173c62e951ad64c05c4332ac0be03a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.easyxapp.common.http.a$a: void <init>(com.easyxapp.common.http.a,java.security.KeyStore)>
		SHA-256: a0cd75bbc95f44e6f95b698cce34ffc35e6f36f6104f218b81bf0328db3cc602
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 4c007d82661266b5817bbe92225f4b95e375d4009b399b6ad4a1c654005f0fd7
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8226)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 127b0aeec2bedc5dd28243462ba7aa1576b25c4fc71ac58c1113ccc601a41947
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1596, varReplacer1597)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: 8775840e22d5e1515a94e1d60b71d380d5c30d9680c6ac8ed5e54f94e3842ac7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3855)
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 7356a40538609179e2627b93bd1b55b0e1b6704619af42ff4b145aefcb1234b7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1613)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 27813f849737e8db573845718b9267ce790a35e5c7dde70c21a32fe59722814e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4259)
		Method: <com.xinmei.adsdk.utils.a: byte[] a(byte[],java.security.Key)>
		SHA-256: 46e0fca5e5cf86b83a9422c46a4d08207b25d67112068dff590d944a8f5e05ba
		Secure: false
	Object:
		Variable: varReplacer1601
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1601)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: addde237bbb24d8c1df9cb4b0b42d70185542124646076266cf3b60ce8e06bb
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3843)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: f249ae582e18b7c94d55da3f90c6b63072521250a1c1067150b8faa8a2f0447e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1602)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 8a7e47282395c4c56e4cdf4bfd1583587c154c81dc2b3cacd0eae506f88ce5fe
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2667)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 83594bfdafeadf2895a46914210958e20bdf20810928162a68f3fc1123aa2eaa
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer634)
		Method: <com.easyxapp.kr.d.f: java.lang.String a(byte[])>
		SHA-256: c100b78dddbaba82a68d369117d3bf6a445e49cc267d6c94e94332aaac816896
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8257)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 65addfe48b0b09adcf6516889f626d6a562305fd4487238a0f193cdb5f403ed8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8931)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 16b355a3a6b3fddc82d6fb65b9f52d16a7e33ce5d031151da2feba86d38a2af0
		Secure: true
	Object:
		Variable: r48
		Type: java.security.SecureRandom
		Statement: specialinvoke r48.<java.security.SecureRandom: void <init>()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: ae5ec3e880e484c2347a8bdd275050f73a5344dc7e5478fa3752317de601fd99
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 5ef8d28ab179e258311805f92969e46c2035be744d6c2feb40b4edb626054f36
		Secure: false

Findings in Java Class: com.easyxapp.kr.d.f

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c100b78dddbaba82a68d369117d3bf6a445e49cc267d6c94e94332aaac816896)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer634)


Findings in Java Class: com.easyx.coolermaster.c.a

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1601)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8a7e47282395c4c56e4cdf4bfd1583587c154c81dc2b3cacd0eae506f88ce5fe)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1602)


	 in Method: byte[] b(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #27813f849737e8db573845718b9267ce790a35e5c7dde70c21a32fe59722814e)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1613)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1615)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1614, $r2)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1595, $r2)


Findings in Java Class: com.facebook.ads.internal.util.s

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #83594bfdafeadf2895a46914210958e20bdf20810928162a68f3fc1123aa2eaa)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2667)


Findings in Java Class: com.xinmei.adsdk.utils.n

	 in Method: byte[] a(byte[],java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9596c5783238ddb94f2e58f73acd1eecdb6bd910f0450d498b8537e84e79e5e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9596c5783238ddb94f2e58f73acd1eecdb6bd910f0450d498b8537e84e79e5e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3843)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3841, $r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9596c5783238ddb94f2e58f73acd1eecdb6bd910f0450d498b8537e84e79e5e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9596c5783238ddb94f2e58f73acd1eecdb6bd910f0450d498b8537e84e79e5e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3843)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9596c5783238ddb94f2e58f73acd1eecdb6bd910f0450d498b8537e84e79e5e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3841, $r6)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)


Findings in Java Class: com.xinmei.adsdk.utils.a

	 in Method: void c()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #7356a40538609179e2627b93bd1b55b0e1b6704619af42ff4b145aefcb1234b7)
			First parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3855)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>($i0, $r1)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4256, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #46e0fca5e5cf86b83a9422c46a4d08207b25d67112068dff590d944a8f5e05ba)
			First parameter (with value "Blowfish/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256, RSA}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4259)


Findings in Java Class: com.xinmei.adsdk.utils.t

	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2863872c347a6eac78fbbb8661f331f8c3dfe055446955704bc0b414018acde6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4229)


Findings in Java Class: com.easyxapp.xp.common.util.m

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2caddb591611b6b3aa0e43a2a25465097c46979f6edaa16a333dd7e3554dd7b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7536)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.a

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a03cf83d38a7612fab58d6ef1349f83e9e301432ce9e846e127dbeca819ce63c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7911)


Findings in Java Class: com.easyxapp.common.http.a

	 in Method: void a()
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #d188fb2b8ad2126d05a65707f7840780a2516f76ad903dcf5453fa7a37954091)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8246)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #127b0aeec2bedc5dd28243462ba7aa1576b25c4fc71ac58c1113ccc601a41947)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8226)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c0fcd051f69239f5d69f07f6144d803c500e2d4709d8001cc2a51ef81c12c860)
			First parameter (with value "SSL") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8242)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #65addfe48b0b09adcf6516889f626d6a562305fd4487238a0f193cdb5f403ed8)
			First parameter (with value "SSL") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8257)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)


Findings in Java Class: com.easyxapp.common.d.b

	 in Method: byte[] b(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8925, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b7566f60868e842054b6581881d62d901cbdd5bca5e0674e3c4eb34ea7bcad25)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8926)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8927)


	 in Method: byte[] a(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7810c2d7cd9bb863ed59d97679f8b11d2953dea38b9ac1e8a2be49bb6c68ec2f)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8950)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8949)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8951, $r3)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer8930, $r2)


Findings in Java Class: com.easyxapp.common.http.a$a

	 in Method: void <init>(com.easyxapp.common.http.a,java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer8283)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 58

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 2
	RequiredPredicateError: 17
	ImpreciseValueExtractionError: 1
	IncompleteOperationError: 3
	ConstraintError: 15
=====================================================================