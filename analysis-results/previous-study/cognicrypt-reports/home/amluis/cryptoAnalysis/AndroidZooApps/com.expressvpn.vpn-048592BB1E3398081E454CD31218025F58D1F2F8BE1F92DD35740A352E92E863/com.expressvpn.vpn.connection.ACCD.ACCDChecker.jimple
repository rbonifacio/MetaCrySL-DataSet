public class com.expressvpn.vpn.connection.ACCD.ACCDChecker extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private com.expressvpn.vpn.EvpnContext evpnContext;
    private rx.Subscriber subs;

    static void <clinit>()
    {
        java.lang.String $r0;

        nop;

        $r0 = staticinvoke <com.expressvpn.utils.android.log.Logger: java.lang.String getLogTag(java.lang.Class)>(class "Lcom/expressvpn/vpn/connection/ACCD/ACCDChecker;");

        <com.expressvpn.vpn.connection.ACCD.ACCDChecker: java.lang.String LOG_TAG> = $r0;

        return;
    }

    public void <init>(com.expressvpn.vpn.EvpnContext)
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        com.expressvpn.vpn.EvpnContext $r1;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r1 := @parameter0: com.expressvpn.vpn.EvpnContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext> = $r1;

        return;
    }

    static void access$lambda$0(com.expressvpn.vpn.connection.ACCD.ACCDChecker, rx.Subscriber)
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        rx.Subscriber $r1;

        nop;

        $r0 := @parameter0: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r1 := @parameter1: rx.Subscriber;

        specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: void lambda$start$0(rx.Subscriber)>($r1);

        return;
    }

    private boolean addAccdLogToUploadQueue(com.expressvpn.vpn.connection.ACCD.ACCDLog)
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        com.expressvpn.vpn.connection.ACCD.ACCDLog $r1;
        java.util.ArrayList $r2;
        java.lang.Exception $r3;
        java.io.File $r4, $r9;
        java.io.FileOutputStream $r5;
        java.io.OutputStreamWriter $r6;
        com.expressvpn.vpn.EvpnContext $r7;
        android.content.Context $r8;
        java.lang.StringBuilder $r10;
        java.util.UUID $r11;
        java.lang.String $r12, varReplacer7378, varReplacer7379, varReplacer7380, varReplacer7383, varReplacer7384;
        com.google.gson.Gson $r13;
        int varReplacer7381, varReplacer7382, varReplacer7385;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r1 := @parameter0: com.expressvpn.vpn.connection.ACCD.ACCDLog;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label1:
        $r7 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r8 = interfaceinvoke $r7.<com.expressvpn.vpn.EvpnContext: android.content.Context getContext()>();

        varReplacer7380 = "xvcaDir";

        varReplacer7381 = 0;

        $r9 = virtualinvoke $r8.<android.content.Context: java.io.File getDir(java.lang.String,int)>(varReplacer7380, varReplacer7381);

     label2:
        $r4 = new java.io.File;

        $r10 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r12 = virtualinvoke $r11.<java.util.UUID: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer7384 = ".json";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7384);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r12);

     label4:
        $r5 = new java.io.FileOutputStream;

     label5:
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label6:
        $r6 = new java.io.OutputStreamWriter;

     label7:
        specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r5);

        $r7 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r13 = interfaceinvoke $r7.<com.expressvpn.vpn.EvpnContext: com.google.gson.Gson getGson()>();

        $r12 = virtualinvoke $r13.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r2);

        virtualinvoke $r6.<java.io.OutputStreamWriter: void write(java.lang.String)>($r12);

        virtualinvoke $r6.<java.io.OutputStreamWriter: void close()>();

     label8:
        $r7 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r13 = interfaceinvoke $r7.<com.expressvpn.vpn.EvpnContext: com.google.gson.Gson getGson()>();

        $r12 = virtualinvoke $r13.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r2);

        varReplacer7378 = "ACCD Dump";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7378, $r12);

        varReplacer7385 = 1;

        return varReplacer7385;

     label9:
        $r3 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer7379 = "File write failed: ";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7379);

        $r12 = virtualinvoke $r3.<java.lang.Exception: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer7383 = "Exception";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7383, $r12);

        varReplacer7382 = 0;

        return varReplacer7382;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    private void failedACCD(java.lang.String, com.expressvpn.vpn.connection.ACCD.ACCDObj)
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        java.lang.String $r1, $r7, varReplacer7374, varReplacer7375, varReplacer7376, varReplacer7377;
        com.expressvpn.vpn.connection.ACCD.ACCDObj $r2;
        com.expressvpn.vpn.EvpnContext $r3;
        android.content.SharedPreferences $r4;
        android.content.SharedPreferences$Editor $r5;
        com.expressvpn.vpn.location.LocationSelection $r6;
        int varReplacer7373;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.expressvpn.vpn.connection.ACCD.ACCDObj;

        $r3 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r4 = interfaceinvoke $r3.<com.expressvpn.vpn.EvpnContext: android.content.SharedPreferences getPref()>();

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer7374 = "pref_accd_diagnostics";

        varReplacer7375 = "failed";

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer7374, varReplacer7375);

        varReplacer7376 = "pref_accd_diagnostics_err_message";

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer7376, $r1);

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: void apply()>();

        varReplacer7373 = 0;

        virtualinvoke $r2.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setSuccess(boolean)>(varReplacer7373);

        $r3 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r6 = interfaceinvoke $r3.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.location.LocationSelection getLocationSelection()>();

        $r7 = virtualinvoke $r6.<com.expressvpn.vpn.location.LocationSelection: java.lang.String getLastConnectedCluster()>();

        virtualinvoke $r2.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setLocation(java.lang.String)>($r7);

        varReplacer7377 = "Failed ACCDChecker error message";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7377, $r1);

        return;
    }

    private boolean isSmartLocation(com.expressvpn.vpn.EvpnContext)
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        com.expressvpn.vpn.EvpnContext $r1;
        com.expressvpn.vpn.location.LocationSelection$LocationSelectionMode $r2, $r4;
        com.expressvpn.vpn.location.LocationSelection $r3;
        int varReplacer7456, varReplacer7457;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r1 := @parameter0: com.expressvpn.vpn.EvpnContext;

        $r3 = interfaceinvoke $r1.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.location.LocationSelection getLocationSelection()>();

        $r4 = virtualinvoke $r3.<com.expressvpn.vpn.location.LocationSelection: com.expressvpn.vpn.location.LocationSelection$LocationSelectionMode getLocationSelectionMode()>();

        $r2 = <com.expressvpn.vpn.location.LocationSelection$LocationSelectionMode: com.expressvpn.vpn.location.LocationSelection$LocationSelectionMode default_location>;

        if $r4 != $r2 goto label1;

        varReplacer7456 = 1;

        return varReplacer7456;

     label1:
        varReplacer7457 = 0;

        return varReplacer7457;
    }

    private void lambda$start$0(rx.Subscriber)
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        rx.Subscriber $r1;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r1 := @parameter0: rx.Subscriber;

        $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: rx.Subscriber subs> = $r1;

        specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: void performACCD()>();

        return;
    }

    private void performACCD()
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        long $l0, $l1, $l2, $l3, $l7;
        okhttp3.OkHttpClient$Builder $r1;
        float $f0, $f1;
        java.io.File $r2, $r29;
        java.io.FileOutputStream $r3, $r6;
        javax.net.ssl.TrustManager $r4;
        java.io.InputStream $r5, $r30;
        okhttp3.Response $r7, $r26;
        com.expressvpn.vpn.EvpnContext $r8;
        com.expressvpn.vpn.connection.ACCD.ACCDObj $r9;
        java.util.Date $r10;
        com.expressvpn.vpn.connection.ACCD.ACCDDns $r11;
        com.expressvpn.vpn.connection.ACCD.ACCDSocketFactory $r12;
        java.lang.String $r13, $r17, varReplacer7338, varReplacer7341, varReplacer7342, varReplacer7343, varReplacer7344, varReplacer7345, varReplacer7346, varReplacer7347, varReplacer7349, varReplacer7350, varReplacer7352;
        javax.net.ssl.TrustManagerFactory $r14;
        javax.net.ssl.X509TrustManager $r15, $r18;
        javax.net.ssl.TrustManager[] $r16;
        int $i4, $i5, $i6, varReplacer7339, varReplacer7348, varReplacer7351;
        boolean $z0;
        java.lang.StringBuilder $r19;
        java.security.cert.X509Certificate[] $r20;
        com.expressvpn.vpn.connection.ACCD.ACCDSslSocketFactory $r21;
        okhttp3.OkHttpClient $r22;
        okhttp3.Request$Builder $r23;
        okhttp3.Request $r24;
        okhttp3.Call $r25;
        okhttp3.ResponseBody $r27;
        android.content.Context $r28;
        java.lang.Long $r31;
        byte[] $r32;
        java.lang.Exception $r33;
        rx.Subscriber $r34;
        com.expressvpn.vpn.connection.ACCD.ACCDException $r35;
        com.expressvpn.vpn.connection.ACCD.ACCDLog $r36;
        com.expressvpn.vpn.connection.ACCD.DownloadSpeedInfo $r37;
        java.lang.Boolean $r38;
        java.lang.Throwable $r39, $r40, $r41, $r42;
        null_type varReplacer7340, varReplacer7353;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r5 = null;

        $r6 = null;

        $r7 = null;

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r9 = staticinvoke <com.expressvpn.vpn.connection.ACCD.ACCDObj: com.expressvpn.vpn.connection.ACCD.ACCDObj create(com.expressvpn.vpn.EvpnContext)>($r8);

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        $r10 = new java.util.Date;

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $l3 = interfaceinvoke $r8.<com.expressvpn.vpn.EvpnContext: long getCurrentTime()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l3);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setBeginTime(java.util.Date)>($r10);

        $r1 = new okhttp3.OkHttpClient$Builder;

        specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>();

        $r11 = new com.expressvpn.vpn.connection.ACCD.ACCDDns;

        specialinvoke $r11.<com.expressvpn.vpn.connection.ACCD.ACCDDns: void <init>(com.expressvpn.vpn.connection.ACCD.ACCDObj)>($r9);

        virtualinvoke $r1.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)>($r11);

        $r12 = new com.expressvpn.vpn.connection.ACCD.ACCDSocketFactory;

        specialinvoke $r12.<com.expressvpn.vpn.connection.ACCD.ACCDSocketFactory: void <init>(com.expressvpn.vpn.connection.ACCD.ACCDObj)>($r9);

        virtualinvoke $r1.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)>($r12);

        varReplacer7340 = null;

        virtualinvoke $r1.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)>(varReplacer7340);

     label01:
        $r13 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r14 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r13);

        varReplacer7353 = null;

        virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7353);

     label02:
        $r13 = <com.expressvpn.vpn.connection.ACCD.ACCDChecker: java.lang.String LOG_TAG>;

     label03:
        varReplacer7344 = "JVM Default Trust Managers:";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>($r13, varReplacer7344);

     label04:
        $r15 = null;

     label05:
        $r16 = virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label06:
        $i4 = lengthof $r16;

     label07:
        $i5 = 0;

     label08:
        if $i5 >= $i4 goto label21;

     label09:
        $r4 = $r16[$i5];

     label10:
        $r13 = <com.expressvpn.vpn.connection.ACCD.ACCDChecker: java.lang.String LOG_TAG>;

     label11:
        $r17 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>($r13, $r17);

     label12:
        $z0 = $r4 instanceof javax.net.ssl.X509TrustManager;

     label13:
        if $z0 == 0 goto label20;

     label14:
        $r18 = (javax.net.ssl.X509TrustManager) $r4;

     label15:
        $r15 = $r18;

     label16:
        $r13 = <com.expressvpn.vpn.connection.ACCD.ACCDChecker: java.lang.String LOG_TAG>;

        $r19 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        varReplacer7341 = "\tAccepted issuers count : ";

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7341);

        $r20 = interfaceinvoke $r18.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();

     label18:
        $i6 = lengthof $r20;

     label19:
        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>($r13, $r17);

     label20:
        $i5 = $i5 + 1;

        goto label08;

     label21:
        $r21 = new com.expressvpn.vpn.connection.ACCD.ACCDSslSocketFactory;

     label22:
        specialinvoke $r21.<com.expressvpn.vpn.connection.ACCD.ACCDSslSocketFactory: void <init>(com.expressvpn.vpn.connection.ACCD.ACCDObj)>($r9);

        virtualinvoke $r1.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)>($r21, $r15);

        $r22 = virtualinvoke $r1.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();

     label23:
        $r23 = new okhttp3.Request$Builder;

     label24:
        specialinvoke $r23.<okhttp3.Request$Builder: void <init>()>();

        varReplacer7343 = "https://speedtest.expressvpn.com/sample256k.bin";

        $r23 = virtualinvoke $r23.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)>(varReplacer7343);

        $r24 = virtualinvoke $r23.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r25 = virtualinvoke $r22.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r24);

        $r26 = interfaceinvoke $r25.<okhttp3.Call: okhttp3.Response execute()>();

     label25:
        $r7 = $r26;

     label26:
        $r27 = virtualinvoke $r26.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $l3 = virtualinvoke $r27.<okhttp3.ResponseBody: long contentLength()>();

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r28 = interfaceinvoke $r8.<com.expressvpn.vpn.EvpnContext: android.content.Context getContext()>();

        varReplacer7347 = "accdDir";

        varReplacer7348 = 0;

        $r29 = virtualinvoke $r28.<android.content.Context: java.io.File getDir(java.lang.String,int)>(varReplacer7347, varReplacer7348);

     label27:
        $r2 = new java.io.File;

     label28:
        varReplacer7349 = "transferTest";

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r29, varReplacer7349);

     label29:
        $r3 = new java.io.FileOutputStream;

     label30:
        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

     label31:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r27 = virtualinvoke $r26.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r30 = virtualinvoke $r27.<okhttp3.ResponseBody: java.io.InputStream byteStream()>();

     label32:
        $r5 = $r30;

     label33:
        $i4 = virtualinvoke $r30.<java.io.InputStream: int read()>();

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>($i4);

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

     label34:
        $l1 = $l1 - $l2;

     label35:
        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setTimeToFirstByte(java.lang.Long)>($r31);

     label36:
        $r32 = newarray (byte)[4096];

     label37:
        $i4 = virtualinvoke $r30.<java.io.InputStream: int read(byte[])>($r32);

     label38:
        if $i4 == -1 goto label49;

     label39:
        varReplacer7351 = 0;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r32, varReplacer7351, $i4);

     label40:
        goto label37;

     label41:
        $r33 := @caughtexception;

        $r6 = $r3;

     label42:
        $r13 = virtualinvoke $r33.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: void failedACCD(java.lang.String,com.expressvpn.vpn.connection.ACCD.ACCDObj)>($r13, $r9);

        $r13 = virtualinvoke $r33.<java.lang.Exception: java.lang.String getMessage()>();

        varReplacer7342 = "ACCDChecker exception";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7342, $r13);

        $r34 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: rx.Subscriber subs>;

        $r35 = new com.expressvpn.vpn.connection.ACCD.ACCDException;

        specialinvoke $r35.<com.expressvpn.vpn.connection.ACCD.ACCDException: void <init>(java.lang.Throwable)>($r33);

        virtualinvoke $r34.<rx.Subscriber: void onError(java.lang.Throwable)>($r35);

     label43:
        if $r6 == null goto label45;

     label44:
        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label45:
        if $r5 == null goto label47;

     label46:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label47:
        if $r7 == null goto label48;

        virtualinvoke $r7.<okhttp3.Response: void close()>();

     label48:
        $r10 = new java.util.Date;

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $l3 = interfaceinvoke $r8.<com.expressvpn.vpn.EvpnContext: long getCurrentTime()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l3);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setEndTime(java.util.Date)>($r10);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = $l3 - $l2;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setDuration(java.lang.Long)>($r31);

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        varReplacer7350 = "accd";

        $r36 = staticinvoke <com.expressvpn.vpn.connection.ACCD.ACCDLog: com.expressvpn.vpn.connection.ACCD.ACCDLog create(com.expressvpn.vpn.EvpnContext,com.expressvpn.vpn.connection.ACCD.ACCDObj,java.lang.String)>($r8, $r9, varReplacer7350);

        specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: boolean addAccdLogToUploadQueue(com.expressvpn.vpn.connection.ACCD.ACCDLog)>($r36);

        return;

     label49:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

     label50:
        $l0 = $l1 - $l0;

        $l1 = $l1 - $l2;

     label51:
        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        varReplacer7352 = "ACCDChecker transferTime";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7352, $r13);

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        varReplacer7345 = "ACCDChecker downloadTime";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7345, $r13);

     label52:
        $l7 = 8L * $l3;

        $l7 = $l7 / 1000L;

        $f0 = (float) $l7;

        $f1 = (float) $l0;

        $f1 = $f1 / 1.0E9F;

        $f0 = $f0 / $f1;

     label53:
        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setTransferSpeed(float)>($f0);

     label54:
        $l3 = 8L * $l3;

        $l3 = $l3 / 1000L;

        $f0 = (float) $l3;

        $f1 = (float) $l1;

        $f1 = $f1 / 1.0E9F;

        $f0 = $f0 / $f1;

     label55:
        $r37 = new com.expressvpn.vpn.connection.ACCD.DownloadSpeedInfo;

     label56:
        specialinvoke $r37.<com.expressvpn.vpn.connection.ACCD.DownloadSpeedInfo: void <init>(float)>($f0);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setDownloadSpeed(com.expressvpn.vpn.connection.ACCD.DownloadSpeedInfo)>($r37);

     label57:
        $r37 = new com.expressvpn.vpn.connection.ACCD.DownloadSpeedInfo;

     label58:
        specialinvoke $r37.<com.expressvpn.vpn.connection.ACCD.DownloadSpeedInfo: void <init>(float)>($f0);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setDownloadSpeed_256k(com.expressvpn.vpn.connection.ACCD.DownloadSpeedInfo)>($r37);

        specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: void successACCD(long,long,com.expressvpn.vpn.connection.ACCD.ACCDObj)>($l0, $l1, $r9);

        $r34 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: rx.Subscriber subs>;

        varReplacer7339 = 1;

        $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer7339);

        virtualinvoke $r34.<rx.Subscriber: void onNext(java.lang.Object)>($r38);

        $r34 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: rx.Subscriber subs>;

        virtualinvoke $r34.<rx.Subscriber: void onCompleted()>();

     label59:
        if $r3 == null goto label61;

     label60:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label61:
        if $r30 == null goto label63;

     label62:
        virtualinvoke $r30.<java.io.InputStream: void close()>();

     label63:
        if $r26 == null goto label64;

        virtualinvoke $r26.<okhttp3.Response: void close()>();

     label64:
        $r10 = new java.util.Date;

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $l3 = interfaceinvoke $r8.<com.expressvpn.vpn.EvpnContext: long getCurrentTime()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l3);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setEndTime(java.util.Date)>($r10);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = $l3 - $l2;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setDuration(java.lang.Long)>($r31);

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        varReplacer7346 = "accd";

        $r36 = staticinvoke <com.expressvpn.vpn.connection.ACCD.ACCDLog: com.expressvpn.vpn.connection.ACCD.ACCDLog create(com.expressvpn.vpn.EvpnContext,com.expressvpn.vpn.connection.ACCD.ACCDObj,java.lang.String)>($r8, $r9, varReplacer7346);

        specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: boolean addAccdLogToUploadQueue(com.expressvpn.vpn.connection.ACCD.ACCDLog)>($r36);

        return;

     label65:
        $r39 := @caughtexception;

     label66:
        if $r6 == null goto label68;

     label67:
        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label68:
        if $r5 == null goto label70;

     label69:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label70:
        if $r7 == null goto label71;

        virtualinvoke $r7.<okhttp3.Response: void close()>();

     label71:
        $r10 = new java.util.Date;

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $l3 = interfaceinvoke $r8.<com.expressvpn.vpn.EvpnContext: long getCurrentTime()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l3);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setEndTime(java.util.Date)>($r10);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = $l3 - $l2;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r9.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setDuration(java.lang.Long)>($r31);

        $r8 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        varReplacer7338 = "accd";

        $r36 = staticinvoke <com.expressvpn.vpn.connection.ACCD.ACCDLog: com.expressvpn.vpn.connection.ACCD.ACCDLog create(com.expressvpn.vpn.EvpnContext,com.expressvpn.vpn.connection.ACCD.ACCDObj,java.lang.String)>($r8, $r9, varReplacer7338);

        specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: boolean addAccdLogToUploadQueue(com.expressvpn.vpn.connection.ACCD.ACCDLog)>($r36);

        throw $r39;

     label72:
        $r40 := @caughtexception;

        goto label70;

     label73:
        $r39 := @caughtexception;

        $r6 = $r3;

        goto label66;

     label74:
        $r41 := @caughtexception;

        goto label47;

     label75:
        $r33 := @caughtexception;

        goto label42;

     label76:
        $r42 := @caughtexception;

        goto label63;

        catch java.lang.Exception from label01 to label02 with label75;
        catch java.lang.Exception from label03 to label04 with label75;
        catch java.lang.Exception from label05 to label07 with label75;
        catch java.lang.Exception from label09 to label10 with label75;
        catch java.lang.Exception from label11 to label12 with label75;
        catch java.lang.Exception from label14 to label15 with label75;
        catch java.lang.Exception from label17 to label20 with label75;
        catch java.lang.Exception from label22 to label23 with label75;
        catch java.lang.Exception from label24 to label25 with label75;
        catch java.lang.Exception from label26 to label27 with label75;
        catch java.lang.Exception from label28 to label29 with label75;
        catch java.lang.Exception from label30 to label31 with label75;
        catch java.lang.Throwable from label01 to label04 with label65;
        catch java.lang.Throwable from label05 to label06 with label65;
        catch java.lang.Throwable from label10 to label13 with label65;
        catch java.lang.Throwable from label14 to label15 with label65;
        catch java.lang.Throwable from label16 to label18 with label65;
        catch java.lang.Throwable from label19 to label20 with label65;
        catch java.lang.Throwable from label21 to label25 with label65;
        catch java.lang.Throwable from label26 to label31 with label65;
        catch java.lang.Exception from label31 to label32 with label41;
        catch java.lang.Exception from label33 to label34 with label41;
        catch java.lang.Exception from label35 to label38 with label41;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.lang.Throwable from label31 to label32 with label73;
        catch java.lang.Throwable from label33 to label34 with label73;
        catch java.lang.Throwable from label35 to label36 with label73;
        catch java.lang.Throwable from label37 to label38 with label73;
        catch java.lang.Throwable from label39 to label40 with label73;
        catch java.lang.Throwable from label42 to label43 with label65;
        catch java.io.IOException from label44 to label45 with label74;
        catch java.io.IOException from label46 to label47 with label74;
        catch java.lang.Exception from label49 to label50 with label41;
        catch java.lang.Exception from label51 to label52 with label41;
        catch java.lang.Exception from label53 to label54 with label41;
        catch java.lang.Exception from label56 to label57 with label41;
        catch java.lang.Exception from label58 to label59 with label41;
        catch java.lang.Throwable from label49 to label50 with label73;
        catch java.lang.Throwable from label51 to label52 with label73;
        catch java.lang.Throwable from label53 to label54 with label73;
        catch java.lang.Throwable from label55 to label59 with label73;
        catch java.io.IOException from label60 to label61 with label76;
        catch java.io.IOException from label62 to label63 with label76;
        catch java.io.IOException from label67 to label68 with label72;
        catch java.io.IOException from label69 to label70 with label72;
    }

    private void successACCD(long, long, com.expressvpn.vpn.connection.ACCD.ACCDObj)
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        long $l0, $l1;
        com.expressvpn.vpn.connection.ACCD.ACCDObj $r1;
        int $i2, $i3, varReplacer7386, varReplacer7387;
        com.expressvpn.vpn.EvpnContext $r2;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;
        com.expressvpn.vpn.location.LocationSelection $r5;
        java.lang.String $r6, varReplacer7388, varReplacer7389, varReplacer7390, varReplacer7391, varReplacer7392, varReplacer7393;
        com.expressvpn.vpn.xvca.model.info.ClientInfo $r7;
        com.expressvpn.vpn.EvpnAppCtx $r8;
        com.expressvpn.vpn.xvca.XvcaManager $r9;
        com.expressvpn.vpn.xvca.model.Session $r10;
        java.util.ArrayList $r11;
        java.lang.Object $r12;
        com.expressvpn.vpn.xvca.model.Connection $r13;
        com.expressvpn.vpn.xvca.model.event.ConnectionAttemptObj $r14;
        com.expressvpn.vpn.xvca.model.info.ServerInfo $r15;
        boolean $z0;
        com.expressvpn.vpn.apis.SmartLocationsManager $r16;
        com.expressvpn.vpn.apis.SmartLocationsResult $r17;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 := @parameter2: com.expressvpn.vpn.connection.ACCD.ACCDObj;

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r3 = interfaceinvoke $r2.<com.expressvpn.vpn.EvpnContext: android.content.SharedPreferences getPref()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer7392 = "pref_accd_diagnostics";

        varReplacer7393 = "success";

        $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer7392, varReplacer7393);

        varReplacer7388 = "pref_accd_diagnostics_transfer_time";

        $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>(varReplacer7388, $l0);

        varReplacer7390 = "pref_accd_diagnostics_transfer_time";

        $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>(varReplacer7390, $l1);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: void apply()>();

        varReplacer7386 = 1;

        virtualinvoke $r1.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setSuccess(boolean)>(varReplacer7386);

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r5 = interfaceinvoke $r2.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.location.LocationSelection getLocationSelection()>();

        $r6 = virtualinvoke $r5.<com.expressvpn.vpn.location.LocationSelection: java.lang.String getLastConnectedCluster()>();

        virtualinvoke $r1.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setLocation(java.lang.String)>($r6);

        $r7 = new com.expressvpn.vpn.xvca.model.info.ClientInfo;

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        varReplacer7387 = 1;

        specialinvoke $r7.<com.expressvpn.vpn.xvca.model.info.ClientInfo: void <init>(com.expressvpn.vpn.EvpnContext,boolean)>($r2, varReplacer7387);

        virtualinvoke $r1.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setClientInfo(com.expressvpn.vpn.xvca.model.info.ClientInfo)>($r7);

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r8 = interfaceinvoke $r2.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.EvpnAppCtx getAppCtx()>();

        $r9 = virtualinvoke $r8.<com.expressvpn.vpn.EvpnAppCtx: com.expressvpn.vpn.xvca.XvcaManager getXvcaManager()>();

        $r10 = $r9.<com.expressvpn.vpn.xvca.XvcaManager: com.expressvpn.vpn.xvca.model.Session currentSession>;

        $r11 = virtualinvoke $r10.<com.expressvpn.vpn.xvca.model.Session: java.util.ArrayList getConnectionList()>();

        $i3 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i3 = $i3 + -1;

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r8 = interfaceinvoke $r2.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.EvpnAppCtx getAppCtx()>();

        $r9 = virtualinvoke $r8.<com.expressvpn.vpn.EvpnAppCtx: com.expressvpn.vpn.xvca.XvcaManager getXvcaManager()>();

        $r10 = $r9.<com.expressvpn.vpn.xvca.XvcaManager: com.expressvpn.vpn.xvca.model.Session currentSession>;

        $r11 = virtualinvoke $r10.<com.expressvpn.vpn.xvca.model.Session: java.util.ArrayList getConnectionList()>();

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r13 = (com.expressvpn.vpn.xvca.model.Connection) $r12;

        $r11 = virtualinvoke $r13.<com.expressvpn.vpn.xvca.model.Connection: java.util.ArrayList getConnAttemptList()>();

        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i2 = $i2 + -1;

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r8 = interfaceinvoke $r2.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.EvpnAppCtx getAppCtx()>();

        $r9 = virtualinvoke $r8.<com.expressvpn.vpn.EvpnAppCtx: com.expressvpn.vpn.xvca.XvcaManager getXvcaManager()>();

        $r10 = $r9.<com.expressvpn.vpn.xvca.XvcaManager: com.expressvpn.vpn.xvca.model.Session currentSession>;

        $r11 = virtualinvoke $r10.<com.expressvpn.vpn.xvca.model.Session: java.util.ArrayList getConnectionList()>();

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r13 = (com.expressvpn.vpn.xvca.model.Connection) $r12;

        $r11 = virtualinvoke $r13.<com.expressvpn.vpn.xvca.model.Connection: java.util.ArrayList getConnAttemptList()>();

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r14 = (com.expressvpn.vpn.xvca.model.event.ConnectionAttemptObj) $r12;

        $r15 = virtualinvoke $r14.<com.expressvpn.vpn.xvca.model.event.ConnectionAttemptObj: com.expressvpn.vpn.xvca.model.info.ServerInfo getServerInfo()>();

        virtualinvoke $r1.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setServerInfo(com.expressvpn.vpn.xvca.model.info.ServerInfo)>($r15);

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $z0 = specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: boolean isSmartLocation(com.expressvpn.vpn.EvpnContext)>($r2);

        if $z0 == 0 goto label3;

        $r6 = "smart location";

     label1:
        virtualinvoke $r1.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setLocationPickingMethod(java.lang.String)>($r6);

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $z0 = specialinvoke $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: boolean isSmartLocation(com.expressvpn.vpn.EvpnContext)>($r2);

        if $z0 == 0 goto label2;

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r16 = interfaceinvoke $r2.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.apis.SmartLocationsManager getSmartLocationsManager()>();

        $r17 = virtualinvoke $r16.<com.expressvpn.vpn.apis.SmartLocationsManager: com.expressvpn.vpn.apis.SmartLocationsResult getLastSmartLocationsResult()>();

        $i3 = virtualinvoke $r17.<com.expressvpn.vpn.apis.SmartLocationsResult: int getAlgorithmId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke $r1.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setAlgorithmId(java.lang.String)>($r6);

        $r2 = $r0.<com.expressvpn.vpn.connection.ACCD.ACCDChecker: com.expressvpn.vpn.EvpnContext evpnContext>;

        $r16 = interfaceinvoke $r2.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.apis.SmartLocationsManager getSmartLocationsManager()>();

        $r17 = virtualinvoke $r16.<com.expressvpn.vpn.apis.SmartLocationsManager: com.expressvpn.vpn.apis.SmartLocationsResult getLastSmartLocationsResult()>();

        $i3 = virtualinvoke $r17.<com.expressvpn.vpn.apis.SmartLocationsResult: int getAlgorithmVersion()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke $r1.<com.expressvpn.vpn.connection.ACCD.ACCDObj: void setAlgorithmVersion(java.lang.String)>($r6);

     label2:
        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        varReplacer7391 = "Success ACCDChecker transfer time";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7391, $r6);

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        varReplacer7389 = "Success ACCDChecker download time";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String)>(varReplacer7389, $r6);

        return;

     label3:
        $r6 = "user picked";

        goto label1;
    }

    public rx.Observable start()
    {
        com.expressvpn.vpn.connection.ACCD.ACCDChecker $r0;
        rx.Observable$OnSubscribe $r1;
        rx.Observable $r2;

        nop;

        $r0 := @this: com.expressvpn.vpn.connection.ACCD.ACCDChecker;

        $r1 = staticinvoke <com.expressvpn.vpn.connection.ACCD.ACCDChecker$$Lambda$1: rx.Observable$OnSubscribe lambdaFactory$(com.expressvpn.vpn.connection.ACCD.ACCDChecker)>($r0);

        $r2 = staticinvoke <rx.Observable: rx.Observable create(rx.Observable$OnSubscribe)>($r1);

        return $r2;
    }
}
