class b.a.o extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
    javax.net.ssl.X509TrustManager a;

    public void <init>()
    {
        b.a.o $r0;
        java.lang.String $r1;
        javax.net.ssl.TrustManagerFactory $r2;
        javax.net.ssl.TrustManager[] $r3;
        int $i0, $i1;
        javax.net.ssl.TrustManager $r4;
        boolean $z0;
        javax.net.ssl.X509TrustManager $r5;
        java.lang.Throwable $r6;
        null_type varReplacer6965;

        nop;

        $r0 := @this: b.a.o;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1);

        varReplacer6965 = null;

        virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer6965);

        $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r3;

     label04:
        if $i0 >= $i1 goto label11;

     label05:
        $r4 = $r3[$i0];

        $z0 = $r4 instanceof javax.net.ssl.X509TrustManager;

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r4 = $r3[$i0];

        $r5 = (javax.net.ssl.X509TrustManager) $r4;

        $r0.<b.a.o: javax.net.ssl.X509TrustManager a> = $r5;

     label08:
        return;

     label09:
        $i0 = $i0 + 1;

        goto label03;

     label10:
        $r6 := @caughtexception;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)
    {
        b.a.o $r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;

        $r0 := @this: b.a.o;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)
    {
        b.a.o $r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;
        javax.net.ssl.X509TrustManager $r3;
        java.lang.Throwable $r4;

        $r0 := @this: b.a.o;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<b.a.o: javax.net.ssl.X509TrustManager a>;

     label1:
        interfaceinvoke $r3.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r1, $r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        b.a.o $r0;
        java.security.cert.X509Certificate[] $r1;
        javax.net.ssl.X509TrustManager $r2;

        $r0 := @this: b.a.o;

        $r2 = $r0.<b.a.o: javax.net.ssl.X509TrustManager a>;

        $r1 = interfaceinvoke $r2.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();

        return $r1;
    }
}
