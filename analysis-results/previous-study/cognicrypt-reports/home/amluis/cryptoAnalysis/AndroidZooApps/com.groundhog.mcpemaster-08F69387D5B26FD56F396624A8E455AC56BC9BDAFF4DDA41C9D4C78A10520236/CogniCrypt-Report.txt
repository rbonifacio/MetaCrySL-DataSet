Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c628812986aa0803ebeb428bf3cb6c4e0ffeec807a375948f2bd267392ca2e50
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7120)
		Method: <com.fyber.utils.r: java.lang.String a(java.lang.String)>
		SHA-256: 127e70f847bc7fd8a2e7d7b17a35281cb1bbdc8ddaddde3081938e5cf555ef9f
		Secure: false
	Object:
		Variable: r29
		Type: java.security.SecureRandom
		Statement: specialinvoke r29.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jpush.android.util.s: int a(android.content.Context,org.json.JSONObject,boolean)>
		SHA-256: ff9b1eed2d849b52192baa2468b82f6f5e76b39094a5aabef8dc6734fbc7dffd
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 83800ab520dfbf96375afce1af57d177a62869f0256e2d4fa8475e3f03ac6dde
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.u: void <init>()>
		SHA-256: c258573ac3819a70380e7bea0746299054be7c98e3a5d07bb2c37d9ae53de3ef
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 3f5b7ea2761505c4243638277dab672f1824c5a3ce2b162aeb17ed438b0345a2
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.aq: java.lang.String b(java.lang.String)>
		SHA-256: e03b2d32bb5049454f325917bf7839b59c4e0e0070acaaf2a7cce2f3446c599
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.TrustManager[]
		Statement: $r12 = virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <cn.jpush.android.util.u: void <init>()>
		SHA-256: 8dbc8ffcdc47e1f6194291e2162f1aadb368c496273dcf6bd908e92cabf86803
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c8b8edeb084b423f81d7a0d57970247bbc398d800e6083a5bf891e70d459c550
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: bd6f140a409b2b8eea4c643222d309349b5be56c53e649cd4f35ecf7db68f749
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: ff71dc46c695623c670c8240acd12d816d6ab87408538525e2231bf86013b15f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c89c52a35213273fab58ed00b4ede4a7d35bfa3a9666dfaac9c015c5e897e09b
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.s: int a(android.content.Context,org.json.JSONObject,boolean)>
		SHA-256: 97613f67656a5de1afd5e171d109dcc81c153113626be1e4199b6c0948479ccf
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jpush.android.util.s: javax.net.ssl.SSLContext a()>
		SHA-256: 5e573cc5212631be3712bbb7d64117b15fe85cc6b60be4fc0d23524b86c9157
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 8bd01f1b13cea1ee8aa7b22593d126b95c382be3720f2aa7242a6d10f9579e18
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 2dd4888322a471b8f76ac18dc66756736304ba06184ce0a981df36dbcde06d84
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.fyber.utils.r: java.lang.String a(java.lang.String)>
		SHA-256: d27a9d5758e9d0742157a0d58cdce1734ac70af89e55ba70cb30f06eee2afcb1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 588587d694ec45e0e1a875a0176b4380a9d5faa5cea08af2231614568eac49d1
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d4ee72875b7bf463710251b50b5a7d1fc255565e41a8f450fef64e40d8bf7aea
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e08d1cb2a337a72390b00629a9822529204c43915aa5fa11084d68a3f66f2e3a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.aq: java.lang.String b(java.lang.String)>
		SHA-256: d0b9e5f889dcde3f1dbc99f55cb52ab33423002c1ae89ca2252e693adb6b8ac2
		Secure: true
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 51b85c2e92f8e2060c908f8ee508af6780142ca4b7716a081768d372523396a7
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: f4d7c55029da89fb4a614390eefcb44ebfbc25ddf5a4e8739894a432c9e4eaef
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.s: javax.net.ssl.SSLContext a()>
		SHA-256: 726da6d00779c575fcd988fbdeb9859e1097ce3f50b55ba80cab91bbefcb5fd5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: 432a600c2d8de042b03291ce9b2032c06ba1fd3b5c962d7da8ef56372a7beb53
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 98215ece6f6a60ce0739e1b9a0ef278f9806b9bc5c5215dc8b7f4f137f5edc6e
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.u: void <init>()>
		SHA-256: 29c02ae112f7c44d62fcf5db77899628efa67faca410206bfa986e31a8497f06
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: cf97a861c5e3ae97cdd2e650024174ec10a08d9c7f6897fb894fc99150b49b1e
		Secure: false

Findings in Java Class: cn.jpush.android.util.u

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #29c02ae112f7c44d62fcf5db77899628efa67faca410206bfa986e31a8497f06)
			Operation on object of type java.security.KeyStore object not completed. Expected call to store
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r10)


Findings in Java Class: cn.jpush.android.util.k

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.fyber.utils.r

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #127e70f847bc7fd8a2e7d7b17a35281cb1bbdc8ddaddde3081938e5cf555ef9f)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7120)


Findings in Java Class: cn.jpush.android.util.s

	 in Method: int a(android.content.Context,org.json.JSONObject,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1572, varReplacer1572, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1572, varReplacer1572, $r8)


	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1619, r9, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1619, r9, $r5)


Findings in Java Class: cn.jpush.android.util.a

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11728, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11728, $r5, $r7)


Findings in Java Class: cn.jpush.android.util.i

	 in Method: java.lang.String o(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11741, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11741, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11741, $r4, $r7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 29

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 14
	ConstraintError: 1
	IncompleteOperationError: 1
	TypestateError: 1
=====================================================================