public class com.cimb.plugin.SSLConection extends java.lang.Object
{
    private static javax.net.ssl.TrustManager[] trustManagers;

    public void <init>()
    {
        com.cimb.plugin.SSLConection $r0;

        $r0 := @this: com.cimb.plugin.SSLConection;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void allowAllSSL()
    {
        javax.net.ssl.TrustManager[] $r0;
        java.lang.Object[] $r1;
        javax.net.ssl.SSLContext $r2;
        java.security.SecureRandom $r3, r9;
        javax.net.ssl.SSLSocketFactory $r4;
        java.lang.Throwable $r5, $r6;
        com.cimb.plugin.SSLConection$1 r7;
        com.cimb.plugin.SSLConection$_FakeX509TrustManager r8;
        java.security.NoSuchAlgorithmException r10;
        java.security.KeyManagementException r11;
        null_type varReplacer1872;
        java.lang.String varReplacer1873;

        nop;

        r7 = new com.cimb.plugin.SSLConection$1;

        specialinvoke r7.<com.cimb.plugin.SSLConection$1: void <init>()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)>(r7);

        $r0 = <com.cimb.plugin.SSLConection: javax.net.ssl.TrustManager[] trustManagers>;

        if $r0 != null goto label1;

        $r1 = newarray (javax.net.ssl.TrustManager)[1];

        r8 = new com.cimb.plugin.SSLConection$_FakeX509TrustManager;

        specialinvoke r8.<com.cimb.plugin.SSLConection$_FakeX509TrustManager: void <init>()>();

        $r1[0] = r8;

        $r0 = (javax.net.ssl.TrustManager[]) $r1;

        <com.cimb.plugin.SSLConection: javax.net.ssl.TrustManager[] trustManagers> = $r0;

     label1:
        varReplacer1873 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1873);

     label2:
        $r0 = <com.cimb.plugin.SSLConection: javax.net.ssl.TrustManager[] trustManagers>;

        r9 = new java.security.SecureRandom;

        $r3 = r9;

     label3:
        specialinvoke r9.<java.security.SecureRandom: void <init>()>();

        varReplacer1872 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1872, $r0, $r3);

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r4);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        r10 = (java.security.NoSuchAlgorithmException) $r5;

        virtualinvoke r10.<java.security.NoSuchAlgorithmException: java.lang.String toString()>();

        return;

     label6:
        $r6 := @caughtexception;

        r11 = (java.security.KeyManagementException) $r6;

        virtualinvoke r11.<java.security.KeyManagementException: java.lang.String toString()>();

        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.KeyManagementException from label1 to label2 with label6;
        catch java.security.KeyManagementException from label3 to label4 with label6;
    }
}
