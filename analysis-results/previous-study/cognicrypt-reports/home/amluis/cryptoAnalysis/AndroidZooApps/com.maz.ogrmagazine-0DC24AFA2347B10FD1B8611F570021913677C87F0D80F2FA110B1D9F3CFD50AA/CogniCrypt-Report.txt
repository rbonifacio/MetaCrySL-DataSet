Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4253)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 7608bffe1466b852669303b2d6a3c1c5ff53ffe64829073641710167a7cdc4fa
		Secure: false
	Object:
		Variable: varReplacer4250
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4250)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 4c7d90b2e929f48b7f19bdac53d0ea917f37e14119b8107507362aedb5dc0cce
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.mparticle.internal.n: java.lang.String a()>
		SHA-256: dce625ec6a2a8ca9bf84e9a8c240fb643aed8d96f966de28f9bbd7e1038d881d
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r10)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: a1c5710c24dc81a6f9480b1893d8dc24a8f8395b7ec03734ba415bd3b41464e0
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 909c9be208b5de558dd460505e071fd5538daa1dad981e4386470d779b744154
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7576)
		Method: <com.evernote.clients.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: cf2cf10355cbca18448536a07918d53f4afee8c93782a57fb124a8db9196ff4c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer8478)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 686dd8349fea399e52a1846b72ae150aaca31d6e2397ed1aee4fda45586ab9e2
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2490)
		Method: <com.google.ads.conversiontracking.a: java.lang.String a(android.content.Context)>
		SHA-256: f33c265cdec5ac22a3b8ab4b04adb7386f1b84d1a83216adb1800eda68ca35ee
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.conversiontracking.a: java.lang.String a(android.content.Context)>
		SHA-256: bd6e8124add6e4635d892f43581b08341b21b261205ec0e1e3ee57d9a1c2bed9
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: 488b88b3f688420287b7604652189a59811a12f76fd341846335258d549bee3a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4908)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: byte[] computeMD5Hash(byte[])>
		SHA-256: 3f195e198317da56276dcf4e42c6edd506defe1dc6c2e309d89c25841ec9113c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 92352f365af81b6cd93aec5685485ef79e11ee652b7e2f3af45cc5e33bb8d7b9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8438)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 278be4931e366f1237fd9b1dac4ea12a6fd6e4b244d54e12c79a0b74a468e423
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.evernote.clients.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: 9cb79236a130da63ec31076c909321853fc0ee1c32fbfeb3c0e2486a7553453d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4250)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: a458df5c78c0567e1dabead864f47bd3e867f3df24f82e64769274507c2b5496
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mazdigital.mazsdk.AmazonClientManager: byte[] computeMD5Hash(byte[])>
		SHA-256: a8cb464c86a204401b04f54280e9fc5967c279b70ebd163b988cc267953315b6
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: ba800de4ee400f0d8212c55c8fba85bbea2ad894911c956996d81af351be7fa0
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.Mac
		Statement: $r16 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4886)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: 83dfcc9af0792b706bc3b1434b295a6fe43f33368a72c9bfbfd8e1ad4e5d4a15
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeP(java.lang.String)>
		SHA-256: a53a10fcbcfb3290d3008d5842f3a3c3487fccb65b6ab868a632b08b7a6f832f
		Secure: true

Findings in Java Class: com.google.ads.conversiontracking.a

	 in Method: java.lang.String a(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f33c265cdec5ac22a3b8ab4b04adb7386f1b84d1a83216adb1800eda68ca35ee)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2490)


Findings in Java Class: com.mazdigital.mazsdk.StreamUtils

	 in Method: java.lang.String decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7608bffe1466b852669303b2d6a3c1c5ff53ffe64829073641710167a7cdc4fa)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4253)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4251, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4250)


Findings in Java Class: com.mazdigital.mazsdk.AmazonClientManager

	 in Method: byte[] computeMD5Hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3f195e198317da56276dcf4e42c6edd506defe1dc6c2e309d89c25841ec9113c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4908)


	 in Method: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)


Findings in Java Class: com.evernote.clients.EvernoteUtil

	 in Method: byte[] hash(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cf2cf10355cbca18448536a07918d53f4afee8c93782a57fb124a8db9196ff4c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7576)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #cf2cf10355cbca18448536a07918d53f4afee8c93782a57fb124a8db9196ff4c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #278be4931e366f1237fd9b1dac4ea12a6fd6e4b244d54e12c79a0b74a468e423)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8438)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	RequiredPredicateError: 4
	TypestateError: 1
=====================================================================