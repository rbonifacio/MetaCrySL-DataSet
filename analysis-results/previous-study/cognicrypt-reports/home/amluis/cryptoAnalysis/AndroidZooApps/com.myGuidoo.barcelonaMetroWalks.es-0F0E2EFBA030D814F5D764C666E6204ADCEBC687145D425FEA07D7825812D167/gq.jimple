public class gq extends java.lang.Object
{
    private static byte[] a;

    static void <clinit>()
    {
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[16];

        <gq: byte[] a> = $r0;

        return;
    }

    private static java.lang.String a()
    {
        long[] $r0;
        java.lang.String $r1, $r3;
        int $i0, $i1, varReplacer1571;
        boolean $z0;
        long $l2;
        java.lang.StringBuilder $r2;
        char $c3;

        nop;

        varReplacer1571 = 255;

        $r0 = staticinvoke <gn: long[] a(int)>(varReplacer1571);

        $r1 = "";

        $i0 = 0;

     label1:
        if $i0 < 255 goto label2;

        return $r1;

     label2:
        $z0 = staticinvoke <gn: boolean b(int)>($i0);

        if $z0 == 0 goto label3;

        $i1 = $i0 + -1;

        $l2 = $r0[$i1];

        $l2 = $l2 % 255L;

        $i1 = (int) $l2;

        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $c3 = (char) $i1;

        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = $r3;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 > 30 goto label4;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return $r3;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0;
        int varReplacer1556;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer1556 = 0;

        $r0 = staticinvoke <gq: java.lang.String a(java.lang.String,boolean)>($r0, varReplacer1556);

        return $r0;
    }

    public static java.lang.String a(java.lang.String, boolean)
    {
        java.lang.String $r0, $r3, $r4, varReplacer1557, varReplacer1559, varReplacer1560, varReplacer1563, varReplacer1564, varReplacer1565, varReplacer1568, varReplacer1570;
        boolean $z0;
        javax.crypto.Cipher $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        byte[] $r5;
        javax.crypto.spec.IvParameterSpec $r6;
        java.lang.Exception $r7;
        int varReplacer1558, varReplacer1561, varReplacer1562, varReplacer1566, varReplacer1567, varReplacer1569;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

     label01:
        varReplacer1559 = "AES/CBC/PKCS5Padding";

        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1559);

     label02:
        $r2 = new javax.crypto.spec.SecretKeySpec;

        if $z0 == 0 goto label10;

     label03:
        $r3 = staticinvoke <gq: java.lang.String a()>();

     label04:
        varReplacer1561 = 0;

        varReplacer1562 = 1;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1561, varReplacer1562);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>($r4);

        varReplacer1565 = "ISO-8859-1";

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1565);

        varReplacer1570 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1570);

     label05:
        $r6 = new javax.crypto.spec.IvParameterSpec;

        $r5 = <gq: byte[] a>;

     label06:
        specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer1566 = 2;

        virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1566, $r2, $r6);

     label07:
        $r3 = new java.lang.String;

     label08:
        varReplacer1569 = 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(varReplacer1569);

        varReplacer1563 = " ";

        varReplacer1564 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1563, varReplacer1564);

        varReplacer1567 = 0;

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer1567);

        $r5 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        varReplacer1568 = "UTF-8";

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, varReplacer1568);

     label09:
        return $r3;

     label10:
        varReplacer1557 = "0+pvuSDiErqyyWw0NBVemmylym8Jdz+6wP1eZ8oRam5o";

        varReplacer1558 = 1;

        $r3 = staticinvoke <gq: java.lang.String a(java.lang.String,boolean)>(varReplacer1557, varReplacer1558);

     label11:
        goto label04;

     label12:
        $r7 := @caughtexception;

        varReplacer1560 = "";

        return varReplacer1560;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0;
        int varReplacer1793;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer1793 = 0;

        $r0 = staticinvoke <gq: java.lang.String b(java.lang.String,boolean)>($r0, varReplacer1793);

        return $r0;
    }

    public static java.lang.String b(java.lang.String, boolean)
    {
        java.lang.String $r0, $r3, $r4, $r6, varReplacer1794, varReplacer1795, varReplacer1796, varReplacer1798, varReplacer1800, varReplacer1801, varReplacer1802;
        boolean $z0;
        javax.crypto.spec.SecretKeySpec $r1;
        java.util.Random $r2;
        long $l0;
        int $i1, $i2, varReplacer1797, varReplacer1799, varReplacer1803, varReplacer1804;
        javax.crypto.Cipher $r5;
        byte[] $r7;
        javax.crypto.spec.IvParameterSpec $r8;
        java.lang.StringBuilder $r9;
        java.lang.Exception $r10;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = new java.util.Random;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r2.<java.util.Random: void <init>(long)>($l0);

        $r3 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i1);

        $r3 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

        $i2 = $i1 + 1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $r3 = "";

     label01:
        varReplacer1798 = "AES/CBC/PKCS5Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1798);

     label02:
        $r1 = new javax.crypto.spec.SecretKeySpec;

        goto label08;

     label03:
        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String concat(java.lang.String)>($r4);

        varReplacer1795 = "ISO-8859-1";

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1795);

        varReplacer1794 = "AES";

        specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1794);

     label04:
        $r8 = new javax.crypto.spec.IvParameterSpec;

        $r7 = <gq: byte[] a>;

     label05:
        specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7);

        varReplacer1804 = 1;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1804, $r1, $r8);

        varReplacer1802 = "UTF-8";

        $r7 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1802);

        $r7 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7);

        varReplacer1803 = 0;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r7, varReplacer1803);

     label06:
        $r3 = $r0;

     label07:
        $r9 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        varReplacer1799 = 0;

        $r0 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1799, $i1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1800 = "\n";

        varReplacer1801 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1800, varReplacer1801);

        return $r0;

     label08:
        varReplacer1796 = "0+pvuSDiErqyyWw0NBVemmylym8Jdz+6wP1eZ8oRam5o";

        varReplacer1797 = 1;

        $r6 = staticinvoke <gq: java.lang.String a(java.lang.String,boolean)>(varReplacer1796, varReplacer1797);

     label09:
        goto label03;

     label10:
        $r10 := @caughtexception;

        goto label07;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label03 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
}
