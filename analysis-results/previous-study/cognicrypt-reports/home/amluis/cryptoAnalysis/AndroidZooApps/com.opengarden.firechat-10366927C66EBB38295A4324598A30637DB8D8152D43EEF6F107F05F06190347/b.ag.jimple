public class b.ag extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.util.List A;
    private static final java.util.List z;
    final b.t a;
    final java.net.Proxy b;
    final java.util.List c;
    final java.util.List d;
    final java.util.List e;
    final java.util.List f;
    final java.net.ProxySelector g;
    final b.r h;
    final b.d i;
    final b.a.e j;
    final javax.net.SocketFactory k;
    final javax.net.ssl.SSLSocketFactory l;
    final b.a.d.f m;
    final javax.net.ssl.HostnameVerifier n;
    final b.i o;
    final b.b p;
    final b.b q;
    final b.m r;
    final b.u s;
    final boolean t;
    final boolean u;
    final boolean v;
    final int w;
    final int x;
    final int y;

    static void <clinit>()
    {
        b.ai[] $r0;
        b.ai $r1;
        java.util.List $r2;
        b.o[] $r3;
        b.o $r4;
        b.ah $r5;

        nop;

        $r0 = newarray (b.ai)[3];

        $r1 = <b.ai: b.ai d>;

        $r0[0] = $r1;

        $r1 = <b.ai: b.ai c>;

        $r0[1] = $r1;

        $r1 = <b.ai: b.ai b>;

        $r0[2] = $r1;

        $r2 = staticinvoke <b.a.j: java.util.List a(java.lang.Object[])>($r0);

        <b.ag: java.util.List z> = $r2;

        $r3 = newarray (b.o)[3];

        $r4 = <b.o: b.o a>;

        $r3[0] = $r4;

        $r4 = <b.o: b.o b>;

        $r3[1] = $r4;

        $r4 = <b.o: b.o c>;

        $r3[2] = $r4;

        $r2 = staticinvoke <b.a.j: java.util.List a(java.lang.Object[])>($r3);

        <b.ag: java.util.List A> = $r2;

        $r5 = new b.ah;

        specialinvoke $r5.<b.ah: void <init>()>();

        <b.a.d: b.a.d b> = $r5;

        return;
    }

    public void <init>()
    {
        b.ag $r0;
        b.ag$a $r1;

        nop;

        $r0 := @this: b.ag;

        $r1 = new b.ag$a;

        specialinvoke $r1.<b.ag$a: void <init>()>();

        specialinvoke $r0.<b.ag: void <init>(b.ag$a)>($r1);

        return;
    }

    private void <init>(b.ag$a)
    {
        b.ag $r0;
        b.ag$a $r1;
        b.t $r2;
        java.net.Proxy $r3;
        java.util.List $r4;
        java.net.ProxySelector $r5;
        b.r $r6;
        b.d $r7;
        b.a.e $r8;
        javax.net.SocketFactory $r9;
        java.util.Iterator $r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        b.o $r12;
        javax.net.ssl.SSLSocketFactory $r13;
        b.a.d.f $r14;
        b.a.h $r15;
        javax.net.ssl.X509TrustManager $r16;
        java.lang.IllegalStateException $r17;
        java.lang.StringBuilder $r18;
        java.lang.Class $r19;
        java.lang.String $r20, varReplacer6537, varReplacer6541, varReplacer6542;
        javax.net.ssl.SSLContext $r21;
        java.lang.Throwable $r22;
        java.lang.AssertionError $r23;
        b.i $r24;
        b.i$a $r25;
        javax.net.ssl.HostnameVerifier $r26;
        b.b $r27;
        b.m $r28;
        b.u $r29;
        int $i0;
        null_type varReplacer6538, varReplacer6539, varReplacer6540;

        nop;

        $r0 := @this: b.ag;

        $r1 := @parameter0: b.ag$a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<b.ag$a: b.t a>;

        $r0.<b.ag: b.t a> = $r2;

        $r3 = $r1.<b.ag$a: java.net.Proxy b>;

        $r0.<b.ag: java.net.Proxy b> = $r3;

        $r4 = $r1.<b.ag$a: java.util.List c>;

        $r0.<b.ag: java.util.List c> = $r4;

        $r4 = $r1.<b.ag$a: java.util.List d>;

        $r0.<b.ag: java.util.List d> = $r4;

        $r4 = $r1.<b.ag$a: java.util.List e>;

        $r4 = staticinvoke <b.a.j: java.util.List a(java.util.List)>($r4);

        $r0.<b.ag: java.util.List e> = $r4;

        $r4 = $r1.<b.ag$a: java.util.List f>;

        $r4 = staticinvoke <b.a.j: java.util.List a(java.util.List)>($r4);

        $r0.<b.ag: java.util.List f> = $r4;

        $r5 = $r1.<b.ag$a: java.net.ProxySelector g>;

        $r0.<b.ag: java.net.ProxySelector g> = $r5;

        $r6 = $r1.<b.ag$a: b.r h>;

        $r0.<b.ag: b.r h> = $r6;

        $r7 = $r1.<b.ag$a: b.d i>;

        $r0.<b.ag: b.d i> = $r7;

        $r8 = $r1.<b.ag$a: b.a.e j>;

        $r0.<b.ag: b.a.e j> = $r8;

        $r9 = $r1.<b.ag$a: javax.net.SocketFactory k>;

        $r0.<b.ag: javax.net.SocketFactory k> = $r9;

        $r4 = $r0.<b.ag: java.util.List d>;

        $r10 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 0;

     label01:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (b.o) $r11;

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke $r12.<b.o: boolean a()>();

        if $z0 == 0 goto label04;

     label02:
        $z0 = 1;

     label03:
        goto label01;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        $r13 = $r1.<b.ag$a: javax.net.ssl.SSLSocketFactory l>;

        if $r13 != null goto label06;

        if $z0 != 0 goto label08;

     label06:
        $r13 = $r1.<b.ag$a: javax.net.ssl.SSLSocketFactory l>;

        $r0.<b.ag: javax.net.ssl.SSLSocketFactory l> = $r13;

     label07:
        $r13 = $r0.<b.ag: javax.net.ssl.SSLSocketFactory l>;

        if $r13 == null goto label13;

        $r14 = $r1.<b.ag$a: b.a.d.f m>;

        if $r14 != null goto label13;

        $r15 = staticinvoke <b.a.h: b.a.h a()>();

        $r13 = $r0.<b.ag: javax.net.ssl.SSLSocketFactory l>;

        $r16 = virtualinvoke $r15.<b.a.h: javax.net.ssl.X509TrustManager a(javax.net.ssl.SSLSocketFactory)>($r13);

        if $r16 != null goto label11;

        $r17 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        varReplacer6541 = "Unable to extract the trust manager on ";

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6541);

        $r15 = staticinvoke <b.a.h: b.a.h a()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        varReplacer6537 = ", sslSocketFactory is ";

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6537);

        $r13 = $r0.<b.ag: javax.net.ssl.SSLSocketFactory l>;

        $r19 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label08:
        varReplacer6542 = "TLS";

        $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6542);

        varReplacer6538 = null;

        varReplacer6539 = null;

        varReplacer6540 = null;

        virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6538, varReplacer6538, varReplacer6538);

        $r13 = virtualinvoke $r21.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label09:
        $r0.<b.ag: javax.net.ssl.SSLSocketFactory l> = $r13;

        goto label07;

     label10:
        $r22 := @caughtexception;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label11:
        $r15 = staticinvoke <b.a.h: b.a.h a()>();

        $r14 = virtualinvoke $r15.<b.a.h: b.a.d.f a(javax.net.ssl.X509TrustManager)>($r16);

        $r0.<b.ag: b.a.d.f m> = $r14;

        $r24 = $r1.<b.ag$a: b.i o>;

        $r25 = virtualinvoke $r24.<b.i: b.i$a a()>();

        $r14 = $r0.<b.ag: b.a.d.f m>;

        $r25 = virtualinvoke $r25.<b.i$a: b.i$a a(b.a.d.f)>($r14);

        $r24 = virtualinvoke $r25.<b.i$a: b.i a()>();

        $r0.<b.ag: b.i o> = $r24;

     label12:
        $r26 = $r1.<b.ag$a: javax.net.ssl.HostnameVerifier n>;

        $r0.<b.ag: javax.net.ssl.HostnameVerifier n> = $r26;

        $r27 = $r1.<b.ag$a: b.b p>;

        $r0.<b.ag: b.b p> = $r27;

        $r27 = $r1.<b.ag$a: b.b q>;

        $r0.<b.ag: b.b q> = $r27;

        $r28 = $r1.<b.ag$a: b.m r>;

        $r0.<b.ag: b.m r> = $r28;

        $r29 = $r1.<b.ag$a: b.u s>;

        $r0.<b.ag: b.u s> = $r29;

        $z0 = $r1.<b.ag$a: boolean t>;

        $r0.<b.ag: boolean t> = $z0;

        $z0 = $r1.<b.ag$a: boolean u>;

        $r0.<b.ag: boolean u> = $z0;

        $z0 = $r1.<b.ag$a: boolean v>;

        $r0.<b.ag: boolean v> = $z0;

        $i0 = $r1.<b.ag$a: int w>;

        $r0.<b.ag: int w> = $i0;

        $i0 = $r1.<b.ag$a: int x>;

        $r0.<b.ag: int x> = $i0;

        $i0 = $r1.<b.ag$a: int y>;

        $r0.<b.ag: int y> = $i0;

        return;

     label13:
        $r14 = $r1.<b.ag$a: b.a.d.f m>;

        $r0.<b.ag: b.a.d.f m> = $r14;

        $r24 = $r1.<b.ag$a: b.i o>;

        $r0.<b.ag: b.i o> = $r24;

        goto label12;

        catch java.security.GeneralSecurityException from label08 to label09 with label10;
    }

    void <init>(b.ag$a, b.ah)
    {
        b.ag $r0;
        b.ag$a $r1;
        b.ah $r2;

        nop;

        $r0 := @this: b.ag;

        $r1 := @parameter0: b.ag$a;

        $r2 := @parameter1: b.ah;

        specialinvoke $r0.<b.ag: void <init>(b.ag$a)>($r1);

        return;
    }

    static java.util.List x()
    {
        java.util.List r0;

        nop;

        r0 = <b.ag: java.util.List z>;

        return r0;
    }

    static java.util.List y()
    {
        java.util.List r0;

        nop;

        r0 = <b.ag: java.util.List A>;

        return r0;
    }

    public int a()
    {
        b.ag $r0;
        int i0;

        nop;

        $r0 := @this: b.ag;

        i0 = $r0.<b.ag: int w>;

        return i0;
    }

    public b.g a(b.al)
    {
        b.ag $r0;
        b.al $r1;
        b.aj $r2;

        nop;

        $r0 := @this: b.ag;

        $r1 := @parameter0: b.al;

        $r2 = new b.aj;

        specialinvoke $r2.<b.aj: void <init>(b.ag,b.al)>($r0, $r1);

        return $r2;
    }

    public int b()
    {
        b.ag $r0;
        int i0;

        nop;

        $r0 := @this: b.ag;

        i0 = $r0.<b.ag: int x>;

        return i0;
    }

    public int c()
    {
        b.ag $r0;
        int i0;

        nop;

        $r0 := @this: b.ag;

        i0 = $r0.<b.ag: int y>;

        return i0;
    }

    public java.net.Proxy d()
    {
        b.ag $r0;
        java.net.Proxy r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: java.net.Proxy b>;

        return r1;
    }

    public java.net.ProxySelector e()
    {
        b.ag $r0;
        java.net.ProxySelector r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: java.net.ProxySelector g>;

        return r1;
    }

    public b.r f()
    {
        b.ag $r0;
        b.r r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: b.r h>;

        return r1;
    }

    b.a.e g()
    {
        b.ag $r0;
        b.d $r1;
        b.a.e r2;

        nop;

        $r0 := @this: b.ag;

        $r1 = $r0.<b.ag: b.d i>;

        if $r1 == null goto label1;

        $r1 = $r0.<b.ag: b.d i>;

        r2 = $r1.<b.d: b.a.e a>;

        return r2;

     label1:
        r2 = $r0.<b.ag: b.a.e j>;

        return r2;
    }

    public b.u h()
    {
        b.ag $r0;
        b.u r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: b.u s>;

        return r1;
    }

    public javax.net.SocketFactory i()
    {
        b.ag $r0;
        javax.net.SocketFactory r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: javax.net.SocketFactory k>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory j()
    {
        b.ag $r0;
        javax.net.ssl.SSLSocketFactory r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: javax.net.ssl.SSLSocketFactory l>;

        return r1;
    }

    public javax.net.ssl.HostnameVerifier k()
    {
        b.ag $r0;
        javax.net.ssl.HostnameVerifier r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: javax.net.ssl.HostnameVerifier n>;

        return r1;
    }

    public b.i l()
    {
        b.ag $r0;
        b.i r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: b.i o>;

        return r1;
    }

    public b.b m()
    {
        b.ag $r0;
        b.b r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: b.b q>;

        return r1;
    }

    public b.b n()
    {
        b.ag $r0;
        b.b r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: b.b p>;

        return r1;
    }

    public b.m o()
    {
        b.ag $r0;
        b.m r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: b.m r>;

        return r1;
    }

    public boolean p()
    {
        b.ag $r0;
        boolean z0;

        nop;

        $r0 := @this: b.ag;

        z0 = $r0.<b.ag: boolean t>;

        return z0;
    }

    public boolean q()
    {
        b.ag $r0;
        boolean z0;

        nop;

        $r0 := @this: b.ag;

        z0 = $r0.<b.ag: boolean u>;

        return z0;
    }

    public boolean r()
    {
        b.ag $r0;
        boolean z0;

        nop;

        $r0 := @this: b.ag;

        z0 = $r0.<b.ag: boolean v>;

        return z0;
    }

    public b.t s()
    {
        b.ag $r0;
        b.t r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: b.t a>;

        return r1;
    }

    public java.util.List t()
    {
        b.ag $r0;
        java.util.List r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: java.util.List c>;

        return r1;
    }

    public java.util.List u()
    {
        b.ag $r0;
        java.util.List r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: java.util.List d>;

        return r1;
    }

    public java.util.List v()
    {
        b.ag $r0;
        java.util.List r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: java.util.List e>;

        return r1;
    }

    public java.util.List w()
    {
        b.ag $r0;
        java.util.List r1;

        nop;

        $r0 := @this: b.ag;

        r1 = $r0.<b.ag: java.util.List f>;

        return r1;
    }
}
