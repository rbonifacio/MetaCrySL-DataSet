public class com.picto.defender.CryptoManager extends java.lang.Object
{
    private static final java.lang.String HEX;

    public void <init>()
    {
        com.picto.defender.CryptoManager $r0;

        $r0 := @this: com.picto.defender.CryptoManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void appendHex(java.lang.StringBuffer, byte)
    {
        java.lang.StringBuffer $r0;
        byte $b0, $b1;
        java.lang.String $r1;
        char $c2;

        $r0 := @parameter0: java.lang.StringBuffer;

        $b0 := @parameter1: byte;

        $r1 = "0123456789ABCDEF";

        $b1 = $b0 >> 4;

        $b1 = $b1 & 15;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($b1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r1 = "0123456789ABCDEF";

        $b0 = $b0 & 15;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($b0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        return;
    }

    public static byte[] decript(byte[], byte[], byte[])
    {
        byte[] $r0, $r1, $r2;
        java.lang.Exception $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        javax.crypto.Cipher $r6;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

     label1:
        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

     label2:
        $r5 = new javax.crypto.spec.SecretKeySpec;

     label3:
        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, "AES");

     label4:
        $r4 = new javax.crypto.spec.IvParameterSpec;

     label5:
        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r5, $r4);

        $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label6:
        return $r0;

     label7:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String decrypt(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        java.lang.Exception $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = staticinvoke <com.picto.defender.CryptoManager: java.lang.String generateDefaultKey(android.content.Context)>($r0);

        $r1 = staticinvoke <com.picto.defender.CryptoManager: java.lang.String decrypt(java.lang.String,java.lang.String)>($r3, $r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String decrypt(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Exception $r2;
        byte[] $r3, $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = staticinvoke <com.picto.defender.CryptoManager: byte[] toByte(java.lang.String)>($r1);

        $r3 = staticinvoke <com.picto.defender.CryptoManager: byte[] decrypt(byte[],byte[])>($r3, $r4);

     label2:
        $r0 = new java.lang.String;

     label3:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r3);

     label4:
        return $r0;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static byte[] decrypt(byte[], byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    public static byte[] encript(byte[], byte[], byte[])
    {
        byte[] $r0, $r1, $r2;
        java.lang.Exception $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        javax.crypto.Cipher $r6;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

     label1:
        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

     label2:
        $r5 = new javax.crypto.spec.SecretKeySpec;

     label3:
        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, "AES");

     label4:
        $r4 = new javax.crypto.spec.IvParameterSpec;

     label5:
        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r5, $r4);

        $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label6:
        return $r0;

     label7:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String encrypt(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        java.lang.Exception $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = staticinvoke <com.picto.defender.CryptoManager: java.lang.String generateDefaultKey(android.content.Context)>($r0);

        $r1 = staticinvoke <com.picto.defender.CryptoManager: java.lang.String encrypt(java.lang.String,java.lang.String)>($r3, $r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String encrypt(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Exception $r2;
        byte[] $r3, $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.picto.defender.CryptoManager: byte[] encrypt(byte[],byte[])>($r3, $r4);

        $r0 = staticinvoke <com.picto.defender.CryptoManager: java.lang.String toHex(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] encrypt(byte[], byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String encrypt_md5(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer3624;
        byte $b0, $b1;
        java.lang.Exception $r2;
        byte[] $r3, $r4, $r6;
        java.lang.StringBuilder $r5;
        int $i2, $i3, $i4, $i5, varReplacer3623, varReplacer3625;
        java.security.MessageDigest $r7;
        char $c6;
        short $s7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r5 = new java.lang.StringBuilder;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i2 * 2;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i2);

     label01:
        varReplacer3624 = "MD5";

        $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3624);

        $r3 = newarray (byte)[16];

        $r4 = newarray (byte)[16];

        staticinvoke <com.picto.defender.CryptoManager: void md5(java.security.MessageDigest,byte[],byte[])>($r7, $r3, $r6);

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label02:
        $i3 = 0;

     label03:
        if $i3 < $i2 goto label05;

     label04:
        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label05:
        $i4 = 0;

     label06:
        if $i4 >= 16 goto label07;

        $i5 = $i3 + $i4;

        if $i5 < $i2 goto label09;

     label07:
        staticinvoke <com.picto.defender.CryptoManager: void md5(java.security.MessageDigest,byte[],byte[],byte[],byte[])>($r7, $r3, $r6, $r3, $r4);

     label08:
        $i3 = $i3 + 16;

        goto label03;

     label09:
        $i5 = $i3 + $i4;

     label10:
        $c6 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i5);

     label11:
        $b0 = (byte) $c6;

     label12:
        $b1 = $r3[$i4];

     label13:
        $b1 = $b1 ^ $b0;

        $s7 = $b1 & 240;

        $s7 = $s7 >> 4;

     label14:
        varReplacer3625 = 16;

        $c6 = staticinvoke <java.lang.Character: char forDigit(int,int)>($s7, varReplacer3625);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

     label15:
        $b1 = $b1 & 15;

     label16:
        varReplacer3623 = 16;

        $c6 = staticinvoke <java.lang.Character: char forDigit(int,int)>($b1, varReplacer3623);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $r4[$i4] = $b0;

     label17:
        $i4 = $i4 + 1;

        goto label06;

     label18:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        goto label04;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.lang.Exception from label12 to label13 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
    }

    public static java.lang.String fromHex(java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        $r2 = staticinvoke <com.picto.defender.CryptoManager: byte[] toByte(java.lang.String)>($r0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }

    private static java.lang.String generateDefaultKey(android.content.Context)
    {
        android.content.Context $r0;
        byte[] $r1, $r3;
        int $i0, $i1, $i3;
        java.lang.String $r2;
        byte $b2;

        $r0 := @parameter0: android.content.Context;

        $r1 = newarray (byte)[16];

        $r2 = staticinvoke <com.picto.Utils: java.lang.String CreatePMID(android.content.Context)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if $i0 < $i1 goto label4;

     label2:
        $i0 = lengthof $r1;

        $i1 = lengthof $r3;

        $i0 = $i0 - $i1;

        $i1 = 0;

     label3:
        if $i1 < $i0 goto label5;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r1);

        return $r2;

     label4:
        $i1 = lengthof $r1;

        if $i0 == $i1 goto label2;

        $b2 = $r3[$i0];

        $r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;

     label5:
        $i3 = lengthof $r3;

        $i3 = $i3 + $i1;

        $r1[$i3] = 97;

        $i1 = $i1 + 1;

        goto label3;
    }

    private static byte[] getRawKey(byte[]) throws java.lang.Exception
    {
        byte[] $r0;
        javax.crypto.KeyGenerator $r1;
        java.security.SecureRandom $r2;
        javax.crypto.SecretKey $r3;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>("SHA1PRNG");

        virtualinvoke $r2.<java.security.SecureRandom: void setSeed(byte[])>($r0);

        virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(128, $r2);

        $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r0 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return $r0;
    }

    private static void md5(java.security.MessageDigest, byte[], byte[]) throws java.security.DigestException
    {
        java.security.MessageDigest $r0;
        byte[] $r1, $r2;
        int $i0, varReplacer3628;

        nop;

        $r0 := @parameter0: java.security.MessageDigest;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        virtualinvoke $r0.<java.security.MessageDigest: void reset()>();

        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>($r2);

        $i0 = lengthof $r1;

        varReplacer3628 = 0;

        virtualinvoke $r0.<java.security.MessageDigest: int digest(byte[],int,int)>($r1, varReplacer3628, $i0);

        return;
    }

    private static void md5(java.security.MessageDigest, byte[], byte[], byte[], byte[]) throws java.security.DigestException
    {
        java.security.MessageDigest $r0;
        byte[] $r1, $r2, $r3, $r4;
        int $i0, varReplacer3627;

        nop;

        $r0 := @parameter0: java.security.MessageDigest;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

        virtualinvoke $r0.<java.security.MessageDigest: void reset()>();

        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>($r2);

        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>($r3);

        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>($r4);

        $i0 = lengthof $r1;

        varReplacer3627 = 0;

        virtualinvoke $r0.<java.security.MessageDigest: int digest(byte[],int,int)>($r1, varReplacer3627, $i0);

        return;
    }

    public static byte[] toByte(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        java.lang.Integer $r3;
        byte $b4;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return $r1;

     label2:
        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r2, 16);

        $b4 = virtualinvoke $r3.<java.lang.Integer: byte byteValue()>();

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label1;
    }

    public static java.lang.String toHex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <com.picto.defender.CryptoManager: java.lang.String toHex(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String toHex(byte[])
    {
        byte[] $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        int $i0, $i1;
        byte $b2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        $r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label3;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        $b2 = $r0[$i0];

        staticinvoke <com.picto.defender.CryptoManager: void appendHex(java.lang.StringBuffer,byte)>($r1, $b2);

        $i0 = $i0 + 1;

        goto label2;
    }
}
