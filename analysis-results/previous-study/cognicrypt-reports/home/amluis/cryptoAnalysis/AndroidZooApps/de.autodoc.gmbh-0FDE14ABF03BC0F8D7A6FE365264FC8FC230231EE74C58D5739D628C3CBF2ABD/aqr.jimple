public class aqr extends java.lang.Object
{
    private static final java.lang.String a;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        nop;

        $r1 = class "Laqr;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <aqr: java.lang.String a> = $r0;

        return;
    }

    public void <init>()
    {
        aqr $r0;

        $r0 := @this: aqr;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static okhttp3.OkHttpClient$Builder a(int, boolean, boolean, java.lang.String, java.lang.String)
    {
        int $i0, varReplacer21401, varReplacer21402, varReplacer21404;
        boolean $z0, $z1;
        java.lang.String $r0, $r1, varReplacer21396, varReplacer21397, varReplacer21398, varReplacer21399, varReplacer21400;
        okhttp3.ConnectionSpec $r2;
        java.lang.StringBuilder $r3;
        okhttp3.OkHttpClient$Builder $r4;
        okhttp3.ConnectionSpec[] $r5;
        java.util.List $r6;
        java.lang.Integer $r7;
        long $l1;
        java.util.concurrent.TimeUnit $r8;
        aqu $r9;
        javax.net.ssl.TrustManagerFactory $r10;
        javax.net.ssl.TrustManager[] $r11;
        java.lang.Throwable $r12;
        java.lang.RuntimeException $r13;
        null_type varReplacer21403;

        nop;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r0 := @parameter3: java.lang.String;

        $r1 := @parameter4: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        varReplacer21398 = "Creating okhttp client.  networkTimeout=";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer21398);

        varReplacer21404 = 90;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(varReplacer21404);

        varReplacer21396 = ", isTrustAll=";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer21396);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer21399 = ", useSslPinning=";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer21399);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        varReplacer21400 = ", userAgent=";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer21400);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer21397 = ", baseUrl=";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer21397);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = new okhttp3.OkHttpClient$Builder;

        specialinvoke $r4.<okhttp3.OkHttpClient$Builder: void <init>()>();

        $r5 = newarray (okhttp3.ConnectionSpec)[1];

        $r2 = <okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS>;

        $r5[0] = $r2;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        $r4 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)>($r6);

        varReplacer21401 = 90;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer21401);

        $l1 = virtualinvoke $r7.<java.lang.Integer: long longValue()>();

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)>($l1, $r8);

        varReplacer21402 = 90;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer21402);

        $l1 = virtualinvoke $r7.<java.lang.Integer: long longValue()>();

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)>($l1, $r8);

        $r6 = virtualinvoke $r4.<okhttp3.OkHttpClient$Builder: java.util.List interceptors()>();

        $r9 = new aqu;

        specialinvoke $r9.<aqu: void <init>(java.lang.String)>($r0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        if $z0 != 0 goto label11;

        if $z1 == 0 goto label03;

     label01:
        staticinvoke <aqr: void a(okhttp3.OkHttpClient$Builder)>($r4);

     label02:
        return $r4;

     label03:
        $r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r10 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0);

        varReplacer21403 = null;

        virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer21403);

        $r11 = virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        staticinvoke <aqr: void a(okhttp3.OkHttpClient$Builder,javax.net.ssl.TrustManager[])>($r4, $r11);

     label04:
        return $r4;

     label05:
        $r12 := @caughtexception;

     label06:
        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label07:
        $r12 := @caughtexception;

        goto label06;

     label08:
        $r12 := @caughtexception;

        goto label06;

     label09:
        $r12 := @caughtexception;

        goto label06;

     label10:
        $r12 := @caughtexception;

        goto label06;

     label11:
        return $r4;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch java.security.KeyManagementException from label01 to label02 with label10;
        catch java.security.KeyManagementException from label03 to label04 with label10;
        catch java.security.KeyStoreException from label01 to label02 with label07;
        catch java.security.KeyStoreException from label03 to label04 with label07;
        catch java.security.cert.CertificateException from label01 to label02 with label08;
        catch java.security.cert.CertificateException from label03 to label04 with label08;
        catch java.io.IOException from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label09;
    }

    private static void a(okhttp3.OkHttpClient$Builder)
    {
        okhttp3.OkHttpClient$Builder $r0;
        java.lang.String $r1, varReplacer21413;
        java.security.KeyStore $r2;
        java.security.cert.CertificateFactory $r3;
        java.io.InputStream $r4, $r5;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        java.security.cert.Certificate $r9;
        java.security.cert.X509Certificate $r10;
        java.security.Principal $r11;
        java.lang.Throwable $r12, $r15, $r17;
        javax.net.ssl.TrustManagerFactory $r13;
        javax.net.ssl.TrustManager[] $r14;
        java.lang.NullPointerException $r16, $r18;
        null_type varReplacer21411, varReplacer21412;

        nop;

        $r0 := @parameter0: okhttp3.OkHttpClient$Builder;

        $r1 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1);

        varReplacer21411 = null;

        varReplacer21412 = null;

        virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer21411, varReplacer21411);

        varReplacer21413 = "X.509";

        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer21413);

        $r4 = staticinvoke <aqs: java.io.InputStream a()>();

     label01:
        $r5 = staticinvoke <aqs: java.io.InputStream a()>();

        $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label11;

     label04:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.security.cert.Certificate) $r8;

        $z0 = $r9 instanceof java.security.cert.X509Certificate;

     label05:
        if $z0 == 0 goto label02;

     label06:
        $r10 = (java.security.cert.X509Certificate) $r9;

        $r11 = virtualinvoke $r10.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r1 = interfaceinvoke $r11.<java.security.Principal: java.lang.String getName()>();

        virtualinvoke $r2.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>($r1, $r9);

     label07:
        goto label02;

     label08:
        $r12 := @caughtexception;

     label09:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label10:
        throw $r12;

     label11:
        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r13 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1);

        virtualinvoke $r13.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2);

        $r14 = virtualinvoke $r13.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        staticinvoke <aqr: void a(okhttp3.OkHttpClient$Builder,javax.net.ssl.TrustManager[])>($r0, $r14);

     label12:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label13:
        return;

     label14:
        $r15 := @caughtexception;

        return;

     label15:
        $r16 := @caughtexception;

        return;

     label16:
        $r17 := @caughtexception;

        goto label10;

     label17:
        $r18 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.lang.NullPointerException from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.NullPointerException from label12 to label13 with label15;
    }

    private static void a(okhttp3.OkHttpClient$Builder, javax.net.ssl.TrustManager[])
    {
        okhttp3.OkHttpClient$Builder $r0;
        javax.net.ssl.TrustManager[] $r1;
        int $i0;
        javax.net.ssl.TrustManager $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, varReplacer21410;
        javax.net.ssl.X509TrustManager $r6;
        aqt $r7;

        nop;

        $r0 := @parameter0: okhttp3.OkHttpClient$Builder;

        $r1 := @parameter1: javax.net.ssl.TrustManager[];

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $r2 = $r1[0];

        $z0 = $r2 instanceof javax.net.ssl.X509TrustManager;

        if $z0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        varReplacer21410 = "Unexpected number of trust managers:";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer21410);

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $r2 = $r1[0];

        $r6 = (javax.net.ssl.X509TrustManager) $r2;

        $r7 = new aqt;

        specialinvoke $r7.<aqt: void <init>(javax.net.ssl.TrustManager)>($r6);

        virtualinvoke $r0.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)>($r7, $r6);

        return;
    }
}
