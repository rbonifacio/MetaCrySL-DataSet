public class com.google.bitcoin.script.Script extends java.lang.Object
{
    private static final com.google.bitcoin.script.ScriptChunk[] INTERN_TABLE;
    public static final long MAX_SCRIPT_ELEMENT_SIZE;
    private static final org.slf4j.Logger log;
    protected java.util.List chunks;
    private long creationTimeSeconds;
    protected byte[] program;

    static void <clinit>()
    {
        com.google.bitcoin.script.Script $r0, $r5;
        org.slf4j.Logger $r1;
        com.google.bitcoin.core.Address $r2;
        com.google.bitcoin.params.MainNetParams $r3;
        byte[] $r4;
        com.google.bitcoin.script.ScriptChunk[] $r6;
        java.util.List $r7;
        java.lang.Object $r8;
        com.google.bitcoin.script.ScriptChunk $r9;
        int varReplacer718, varReplacer719, varReplacer720, varReplacer721;

        nop;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/google/bitcoin/script/Script;");

        <com.google.bitcoin.script.Script: org.slf4j.Logger log> = $r1;

        $r2 = new com.google.bitcoin.core.Address;

        $r3 = staticinvoke <com.google.bitcoin.params.MainNetParams: com.google.bitcoin.params.MainNetParams get()>();

        $r4 = newarray (byte)[20];

        specialinvoke $r2.<com.google.bitcoin.core.Address: void <init>(com.google.bitcoin.core.NetworkParameters,byte[])>($r3, $r4);

        $r5 = staticinvoke <com.google.bitcoin.script.ScriptBuilder: com.google.bitcoin.script.Script createOutputScript(com.google.bitcoin.core.Address)>($r2);

        $r0 = new com.google.bitcoin.script.Script;

        $r4 = virtualinvoke $r5.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        specialinvoke $r0.<com.google.bitcoin.script.Script: void <init>(byte[])>($r4);

        $r6 = newarray (com.google.bitcoin.script.ScriptChunk)[4];

        $r7 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer718 = 0;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(varReplacer718);

        $r9 = (com.google.bitcoin.script.ScriptChunk) $r8;

        $r6[0] = $r9;

        $r7 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer720 = 1;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(varReplacer720);

        $r9 = (com.google.bitcoin.script.ScriptChunk) $r8;

        $r6[1] = $r9;

        $r7 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer721 = 3;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(varReplacer721);

        $r9 = (com.google.bitcoin.script.ScriptChunk) $r8;

        $r6[2] = $r9;

        $r7 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer719 = 4;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(varReplacer719);

        $r9 = (com.google.bitcoin.script.ScriptChunk) $r8;

        $r6[3] = $r9;

        <com.google.bitcoin.script.Script: com.google.bitcoin.script.ScriptChunk[] INTERN_TABLE> = $r6;

        return;
    }

    private void <init>()
    {
        com.google.bitcoin.script.Script $r0;
        java.util.ArrayList $r1;

        $r0 := @this: com.google.bitcoin.script.Script;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r0.<com.google.bitcoin.script.Script: java.util.List chunks> = $r1;

        return;
    }

    void <init>(java.util.List)
    {
        com.google.bitcoin.script.Script $r0;
        java.util.List $r1;
        java.util.ArrayList $r2;
        long $l0;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: java.util.List;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        $r0.<com.google.bitcoin.script.Script: java.util.List chunks> = $r1;

        $l0 = staticinvoke <com.google.bitcoin.core.Utils: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $r0.<com.google.bitcoin.script.Script: long creationTimeSeconds> = $l0;

        return;
    }

    public void <init>(byte[]) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0;
        byte[] $r1;
        long $l0;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.bitcoin.script.Script: byte[] program> = $r1;

        specialinvoke $r0.<com.google.bitcoin.script.Script: void parse(byte[])>($r1);

        $l0 = staticinvoke <com.google.bitcoin.core.Utils: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $r0.<com.google.bitcoin.script.Script: long creationTimeSeconds> = $l0;

        return;
    }

    public void <init>(byte[], long) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0;
        byte[] $r1;
        long $l0;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: byte[];

        $l0 := @parameter1: long;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.bitcoin.script.Script: byte[] program> = $r1;

        specialinvoke $r0.<com.google.bitcoin.script.Script: void parse(byte[])>($r1);

        $r0.<com.google.bitcoin.script.Script: long creationTimeSeconds> = $l0;

        return;
    }

    private static java.math.BigInteger castToBigInteger(byte[]) throws com.google.bitcoin.core.ScriptException
    {
        byte[] $r0;
        int $i0, varReplacer4968;
        com.google.bitcoin.core.ScriptException $r1;
        java.math.BigInteger $r2;
        java.lang.String varReplacer4969;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        if $i0 <= 4 goto label1;

        $r1 = new com.google.bitcoin.core.ScriptException;

        varReplacer4969 = "Script attempted to use an integer larger than 4 bytes";

        specialinvoke $r1.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4969);

        throw $r1;

     label1:
        $r0 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r0);

        varReplacer4968 = 0;

        $r2 = staticinvoke <com.google.bitcoin.core.Utils: java.math.BigInteger decodeMPI(byte[],boolean)>($r0, varReplacer4968);

        return $r2;
    }

    private static boolean castToBool(byte[])
    {
        byte[] $r0;
        int $i0, $i1, varReplacer4885, varReplacer4886;
        byte $b2;
        short $s3;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        $b2 = $r0[$i0];

        if $b2 == 0 goto label3;

        $i1 = lengthof $r0;

        $i1 = $i1 + -1;

        if $i0 != $i1 goto label2;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        if $s3 == 128 goto label4;

     label2:
        varReplacer4886 = 1;

        return varReplacer4886;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        varReplacer4885 = 0;

        return varReplacer4885;
    }

    public static byte[] createInputScript(byte[])
    {
        byte[] $r0;
        com.google.bitcoin.core.UnsafeByteArrayOutputStream $r1;
        java.lang.Throwable $r2;
        int $i0;
        java.lang.RuntimeException $r3;

        $r0 := @parameter0: byte[];

        $r1 = new com.google.bitcoin.core.UnsafeByteArrayOutputStream;

        $i0 = lengthof $r0;

        $i0 = $i0 + 2;

     label1:
        specialinvoke $r1.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: void <init>(int)>($i0);

        staticinvoke <com.google.bitcoin.script.Script: void writeBytes(java.io.OutputStream,byte[])>($r1, $r0);

        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static byte[] createInputScript(byte[], byte[])
    {
        byte[] $r0, $r1;
        com.google.bitcoin.core.UnsafeByteArrayOutputStream $r2;
        java.lang.Throwable $r3;
        int $i0, $i1;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new com.google.bitcoin.core.UnsafeByteArrayOutputStream;

        $i1 = lengthof $r0;

        $i0 = lengthof $r1;

        $i0 = $i1 + $i0;

        $i0 = $i0 + 2;

     label1:
        specialinvoke $r2.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: void <init>(int)>($i0);

        staticinvoke <com.google.bitcoin.script.Script: void writeBytes(java.io.OutputStream,byte[])>($r2, $r0);

        staticinvoke <com.google.bitcoin.script.Script: void writeBytes(java.io.OutputStream,byte[])>($r2, $r1);

        $r0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static byte[] createMultiSigOutputScript(int, java.util.List)
    {
        int $i0, $i1;
        java.util.List $r0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.Throwable $r2;
        boolean $z0, $z1;
        org.slf4j.Logger $r3;
        java.lang.Integer $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        com.google.bitcoin.core.ECKey $r7;
        byte[] $r8;
        java.lang.RuntimeException $r9;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.util.List;

        $z0 = 1;

        if $i0 <= 0 goto label13;

        $z1 = 1;

     label01:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 > $i1 goto label14;

        $z1 = 1;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 > 16 goto label15;

     label03:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 3 goto label04;

        $r3 = <com.google.bitcoin.script.Script: org.slf4j.Logger log>;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Creating a multi-signature output that is non-standard: {} pubkeys, should be <= 3", $r4);

     label04:
        $r1 = new java.io.ByteArrayOutputStream;

     label05:
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $i0 = staticinvoke <com.google.bitcoin.script.Script: int encodeToOpN(int)>($i0);

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        $r5 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label07:
        if $z0 == 0 goto label16;

     label08:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label09:
        $r7 = (com.google.bitcoin.core.ECKey) $r6;

     label10:
        $r8 = virtualinvoke $r7.<com.google.bitcoin.core.ECKey: byte[] getPubKey()>();

        staticinvoke <com.google.bitcoin.script.Script: void writeBytes(java.io.OutputStream,byte[])>($r1, $r8);

     label11:
        goto label06;

     label12:
        $r2 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r9;

     label13:
        $z1 = 0;

        goto label01;

     label14:
        $z1 = 0;

        goto label02;

     label15:
        $z0 = 0;

        goto label03;

     label16:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = staticinvoke <com.google.bitcoin.script.Script: int encodeToOpN(int)>($i0);

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(174);

        $r8 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label17:
        return $r8;

        catch java.io.IOException from label05 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label16 to label17 with label12;
    }

    public static int decodeFromOpN(byte) throws java.lang.IllegalArgumentException
    {
        byte $b0;
        int $i1;

        $b0 := @parameter0: byte;

        $i1 = staticinvoke <com.google.bitcoin.script.Script: int decodeFromOpN(int)>($b0);

        return $i1;
    }

    static int decodeFromOpN(int)
    {
        int $i0, varReplacer4971, varReplacer4972;
        boolean $z0;
        java.lang.String varReplacer4970;

        nop;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        if $i0 == 79 goto label1;

        if $i0 < 81 goto label3;

        if $i0 > 96 goto label3;

     label1:
        $z0 = 1;

     label2:
        varReplacer4970 = "decodeFromOpN called on non OP_N opcode";

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, varReplacer4970);

        if $i0 != 0 goto label4;

        varReplacer4971 = 0;

        return varReplacer4971;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        if $i0 != 79 goto label5;

        varReplacer4972 = -1;

        return varReplacer4972;

     label5:
        $i0 = $i0 + 1;

        $i0 = $i0 + -81;

        return $i0;
    }

    static int encodeToOpN(int)
    {
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        if $i0 < -1 goto label2;

        if $i0 > 16 goto label2;

        $z0 = 1;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encodeToOpN called for ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which we cannot encode in an opcode.");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r1);

        if $i0 != 0 goto label3;

        return 0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        if $i0 != -1 goto label4;

        return 79;

     label4:
        $i0 = $i0 + -1;

        $i0 = $i0 + 81;

        return $i0;
    }

    private static boolean equalsRange(byte[], int, byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i1, $i2, varReplacer4990, varReplacer4991, varReplacer4992;
        byte $b3, $b4;

        nop;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        $i1 = lengthof $r1;

        $i1 = $i1 + $i0;

        $i2 = lengthof $r0;

        if $i1 <= $i2 goto label1;

        varReplacer4991 = 0;

        return varReplacer4991;

     label1:
        $i1 = 0;

     label2:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label3;

        $i2 = $i1 + $i0;

        $b3 = $r0[$i2];

        $b4 = $r1[$i1];

        if $b3 != $b4 goto label4;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        varReplacer4992 = 1;

        return varReplacer4992;

     label4:
        varReplacer4990 = 0;

        return varReplacer4990;
    }

    private static void executeCheckSig(com.google.bitcoin.core.Transaction, int, com.google.bitcoin.script.Script, java.util.LinkedList, int, int) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.core.Transaction $r0;
        int $i0, $i1, $i2, $i3, varReplacer4962;
        com.google.bitcoin.script.Script $r1;
        java.util.LinkedList $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;
        com.google.bitcoin.core.UnsafeByteArrayOutputStream $r5;
        com.google.bitcoin.core.ScriptException $r6;
        java.lang.Object $r7;
        byte[] $r8, $r9, $r10, $r11;
        boolean $z0, $z1;
        com.google.bitcoin.crypto.TransactionSignature $r12;
        byte $b4;
        com.google.bitcoin.core.Sha256Hash $r13;
        java.lang.RuntimeException $r14;
        org.slf4j.Logger $r15;
        java.lang.String $r16, varReplacer4961, varReplacer4963;

        nop;

        $r0 := @parameter0: com.google.bitcoin.core.Transaction;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.google.bitcoin.script.Script;

        $r2 := @parameter3: java.util.LinkedList;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        $i3 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i3 >= 2 goto label01;

        $r6 = new com.google.bitcoin.core.ScriptException;

        varReplacer4961 = "Attempted OP_CHECKSIG(VERIFY) on a stack with size < 2";

        specialinvoke $r6.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4961);

        throw $r6;

     label01:
        $r7 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r8 = (byte[]) $r7;

        $r7 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r9 = (byte[]) $r7;

        $r10 = virtualinvoke $r1.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        $i3 = lengthof $r10;

        $r10 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r10, $i1, $i3);

        $r5 = new com.google.bitcoin.core.UnsafeByteArrayOutputStream;

        $i1 = lengthof $r9;

        $i1 = $i1 + 1;

        specialinvoke $r5.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: void <init>(int)>($i1);

     label02:
        staticinvoke <com.google.bitcoin.script.Script: void writeBytes(java.io.OutputStream,byte[])>($r5, $r9);

     label03:
        $r11 = virtualinvoke $r5.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: byte[] toByteArray()>();

        $r10 = staticinvoke <com.google.bitcoin.script.Script: byte[] removeAllInstancesOf(byte[],byte[])>($r10, $r11);

        $z0 = 0;

     label04:
        varReplacer4962 = 0;

        $r12 = staticinvoke <com.google.bitcoin.crypto.TransactionSignature: com.google.bitcoin.crypto.TransactionSignature decodeFromBitcoin(byte[],boolean)>($r9, varReplacer4962);

        $i1 = $r12.<com.google.bitcoin.crypto.TransactionSignature: int sighashFlags>;

     label05:
        $b4 = (byte) $i1;

     label06:
        $r13 = virtualinvoke $r0.<com.google.bitcoin.core.Transaction: com.google.bitcoin.core.Sha256Hash hashForSignature(int,byte[],byte)>($i0, $r10, $b4);

        $r9 = virtualinvoke $r13.<com.google.bitcoin.core.Sha256Hash: byte[] getBytes()>();

        $z1 = staticinvoke <com.google.bitcoin.core.ECKey: boolean verify(byte[],com.google.bitcoin.core.ECKey$ECDSASignature,byte[])>($r9, $r12, $r8);

     label07:
        $z0 = $z1;

     label08:
        if $i2 != 172 goto label13;

        if $z0 == 0 goto label12;

        $r8 = newarray (byte)[1];

        $r8[0] = 1;

     label09:
        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        return;

     label10:
        $r3 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r14;

     label11:
        $r4 := @caughtexception;

        $r15 = <com.google.bitcoin.script.Script: org.slf4j.Logger log>;

        $r16 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String)>($r16);

        goto label08;

     label12:
        $r8 = newarray (byte)[1];

        $r8[0] = 0;

        goto label09;

     label13:
        if $i2 != 173 goto label14;

        if $z0 != 0 goto label14;

        $r6 = new com.google.bitcoin.core.ScriptException;

        varReplacer4963 = "Script failed OP_CHECKSIGVERIFY";

        specialinvoke $r6.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4963);

        throw $r6;

     label14:
        return;

        catch java.io.IOException from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
    }

    private static int executeMultiSig(com.google.bitcoin.core.Transaction, int, com.google.bitcoin.script.Script, java.util.LinkedList, int, int, int) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.core.Transaction $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, varReplacer4959;
        com.google.bitcoin.script.Script $r1;
        java.util.LinkedList $r2, $r5, $r6;
        java.lang.Throwable $r3;
        com.google.bitcoin.core.UnsafeByteArrayOutputStream $r4;
        com.google.bitcoin.core.ScriptException $r7;
        java.lang.Object $r8;
        byte[] $r9, $r12, $r14;
        java.math.BigInteger $r10;
        java.util.Iterator $r11;
        boolean $z0, $z1;
        java.lang.RuntimeException $r13;
        com.google.bitcoin.crypto.TransactionSignature $r15;
        byte $b7;
        com.google.bitcoin.core.Sha256Hash $r16;
        java.lang.Exception $r17;
        java.lang.String varReplacer4953, varReplacer4954, varReplacer4955, varReplacer4956, varReplacer4957, varReplacer4958, varReplacer4960;

        nop;

        $r0 := @parameter0: com.google.bitcoin.core.Transaction;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.google.bitcoin.script.Script;

        $r2 := @parameter3: java.util.LinkedList;

        $i3 := @parameter4: int;

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        $i4 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i4 >= 2 goto label01;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer4953 = "Attempted OP_CHECKMULTISIG(VERIFY) on a stack with size < 2";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4953);

        throw $r7;

     label01:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r9 = (byte[]) $r8;

        $r10 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r9);

        $i4 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>();

        if $i4 < 0 goto label02;

        if $i4 <= 20 goto label03;

     label02:
        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer4957 = "OP_CHECKMULTISIG(VERIFY) with pubkey count out of range";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4957);

        throw $r7;

     label03:
        $i3 = $i3 + $i4;

        if $i3 <= 201 goto label04;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer4955 = "Total op count > 201 during OP_CHECKMULTISIG(VERIFY)";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4955);

        throw $r7;

     label04:
        $i5 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $i6 = $i4 + 1;

        if $i5 >= $i6 goto label05;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer4958 = "Attempted OP_CHECKMULTISIG(VERIFY) on a stack with size < num_of_pubkeys + 2";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4958);

        throw $r7;

     label05:
        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        $i5 = 0;

     label06:
        if $i5 >= $i4 goto label07;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r9 = (byte[]) $r8;

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

        $i5 = $i5 + 1;

        goto label06;

     label07:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r9 = (byte[]) $r8;

        $r10 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r9);

        $i5 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>();

        if $i5 < 0 goto label08;

        if $i5 <= $i4 goto label09;

     label08:
        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer4956 = "OP_CHECKMULTISIG(VERIFY) with sig count out of range";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4956);

        throw $r7;

     label09:
        $i4 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $i6 = $i5 + 1;

        if $i4 >= $i6 goto label10;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer4954 = "Attempted OP_CHECKMULTISIG(VERIFY) on a stack with size < num_of_pubkeys + num_of_signatures + 3";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4954);

        throw $r7;

     label10:
        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        $i4 = 0;

     label11:
        if $i4 >= $i5 goto label12;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r9 = (byte[]) $r8;

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

        $i4 = $i4 + 1;

        goto label11;

     label12:
        $r9 = virtualinvoke $r1.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        $i4 = lengthof $r9;

        $r9 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r9, $i1, $i4);

        $r11 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r8 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (byte[]) $r8;

        $r4 = new com.google.bitcoin.core.UnsafeByteArrayOutputStream;

        $i1 = lengthof $r12;

        $i1 = $i1 + 1;

        specialinvoke $r4.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: void <init>(int)>($i1);

     label14:
        staticinvoke <com.google.bitcoin.script.Script: void writeBytes(java.io.OutputStream,byte[])>($r4, $r12);

     label15:
        $r12 = virtualinvoke $r4.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: byte[] toByteArray()>();

        $r9 = staticinvoke <com.google.bitcoin.script.Script: byte[] removeAllInstancesOf(byte[],byte[])>($r9, $r12);

        goto label13;

     label16:
        $r3 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r13;

     label17:
        $z0 = 1;

     label18:
        $i1 = virtualinvoke $r6.<java.util.LinkedList: int size()>();

        if $i1 <= 0 goto label25;

        $r8 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object pollFirst()>();

        $r12 = (byte[]) $r8;

     label19:
        $r8 = virtualinvoke $r6.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r14 = (byte[]) $r8;

        varReplacer4959 = 0;

        $r15 = staticinvoke <com.google.bitcoin.crypto.TransactionSignature: com.google.bitcoin.crypto.TransactionSignature decodeFromBitcoin(byte[],boolean)>($r14, varReplacer4959);

        $i1 = $r15.<com.google.bitcoin.crypto.TransactionSignature: int sighashFlags>;

     label20:
        $b7 = (byte) $i1;

     label21:
        $r16 = virtualinvoke $r0.<com.google.bitcoin.core.Transaction: com.google.bitcoin.core.Sha256Hash hashForSignature(int,byte[],byte)>($i0, $r9, $b7);

        $r14 = virtualinvoke $r16.<com.google.bitcoin.core.Sha256Hash: byte[] getBytes()>();

        $z1 = staticinvoke <com.google.bitcoin.core.ECKey: boolean verify(byte[],com.google.bitcoin.core.ECKey$ECDSASignature,byte[])>($r14, $r15, $r12);

     label22:
        if $z1 == 0 goto label24;

     label23:
        virtualinvoke $r6.<java.util.LinkedList: java.lang.Object pollFirst()>();

     label24:
        $i1 = virtualinvoke $r6.<java.util.LinkedList: int size()>();

        $i4 = virtualinvoke $r5.<java.util.LinkedList: int size()>();

        if $i1 <= $i4 goto label18;

        $z0 = 0;

     label25:
        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        if $i2 != 174 goto label28;

        if $z0 == 0 goto label27;

        $r9 = newarray (byte)[1];

        $r9[0] = 1;

     label26:
        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

        return $i3;

     label27:
        $r9 = newarray (byte)[1];

        $r9[0] = 0;

        goto label26;

     label28:
        if $i2 != 175 goto label30;

        if $z0 != 0 goto label30;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer4960 = "Script failed OP_CHECKMULTISIGVERIFY";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4960);

        throw $r7;

     label29:
        $r17 := @caughtexception;

        goto label24;

     label30:
        return $i3;

        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Exception from label19 to label20 with label29;
        catch java.lang.Exception from label21 to label22 with label29;
        catch java.lang.Exception from label23 to label24 with label29;
    }

    private static void executeScript(com.google.bitcoin.core.Transaction, long, com.google.bitcoin.script.Script, java.util.LinkedList) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.core.Transaction $r0;
        long $l0, $l5, $l8;
        com.google.bitcoin.script.Script $r1;
        java.util.LinkedList $r2, $r3, $r5;
        short $s1;
        int $i2, $i3, $i4, $i7, varReplacer4889, varReplacer4892, varReplacer4902, varReplacer4903, varReplacer4906, varReplacer4909, varReplacer4916, varReplacer4926, varReplacer4928, varReplacer4935, varReplacer4944, varReplacer4945, varReplacer4950;
        org.spongycastle.crypto.digests.RIPEMD160Digest $r4;
        java.util.List $r6;
        java.util.Iterator $r7, $r16;
        boolean $z0, $z1;
        java.lang.Object $r8;
        com.google.bitcoin.script.ScriptChunk $r9;
        java.lang.Boolean $r10;
        byte[] $r11, $r17, $r18, $r19, $r20, $r21;
        byte $b6;
        com.google.bitcoin.core.ScriptException $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14, varReplacer4887, varReplacer4888, varReplacer4890, varReplacer4891, varReplacer4893, varReplacer4894, varReplacer4895, varReplacer4896, varReplacer4897, varReplacer4898, varReplacer4899, varReplacer4900, varReplacer4901, varReplacer4904, varReplacer4905, varReplacer4907, varReplacer4908, varReplacer4910, varReplacer4911, varReplacer4912, varReplacer4913, varReplacer4914, varReplacer4915, varReplacer4917, varReplacer4918, varReplacer4919, varReplacer4920, varReplacer4921, varReplacer4922, varReplacer4923, varReplacer4924, varReplacer4925, varReplacer4927, varReplacer4929, varReplacer4930, varReplacer4931, varReplacer4932, varReplacer4933, varReplacer4934, varReplacer4936, varReplacer4937, varReplacer4938, varReplacer4939, varReplacer4940, varReplacer4941, varReplacer4942, varReplacer4943, varReplacer4946, varReplacer4947, varReplacer4948, varReplacer4949, varReplacer4951, varReplacer4952;
        java.math.BigInteger $r15, $r22, $r25;
        java.lang.AssertionError $r23;
        java.lang.RuntimeException $r24;
        java.security.MessageDigest $r26;
        java.lang.Throwable $r27, $r28;

        nop;

        $r0 := @parameter0: com.google.bitcoin.core.Transaction;

        $l0 := @parameter1: long;

        $r1 := @parameter2: com.google.bitcoin.script.Script;

        $r2 := @parameter3: java.util.LinkedList;

        $i3 = 0;

        $i4 = 0;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        $r6 = $r1.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label001:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label149;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.google.bitcoin.script.ScriptChunk) $r8;

        varReplacer4928 = 0;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer4928);

        $z0 = virtualinvoke $r5.<java.util.LinkedList: boolean contains(java.lang.Object)>($r10);

        if $z0 != 0 goto label003;

        $z0 = 1;

     label002:
        $z1 = virtualinvoke $r9.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

        if $z1 != 0 goto label007;

        $r11 = $r9.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i2 = lengthof $r11;

        $l5 = (long) $i2;

        $b6 = $l5 cmp 520L;

        if $b6 <= 0 goto label004;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4952 = "Attempted to push a data string larger than 520 bytes";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4952);

        throw $r12;

     label003:
        $z0 = 0;

        goto label002;

     label004:
        if $z0 == 0 goto label001;

        $r11 = $r9.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

     label005:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $i7 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        $i2 = $i2 + $i7;

        if $i2 > 1000 goto label006;

        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $i7 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        $i2 = $i2 + $i7;

        if $i2 >= 0 goto label001;

     label006:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4933 = "Stack size exceeded range";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4933);

        throw $r12;

     label007:
        $r11 = $r9.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $b6 = $r11[0];

        $s1 = $b6 & 255;

        if $s1 <= 96 goto label008;

        $i3 = $i3 + 1;

        if $i3 <= 201 goto label008;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4941 = "More script operations than is allowed";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4941);

        throw $r12;

     label008:
        if $s1 == 101 goto label009;

        if $s1 != 102 goto label010;

     label009:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4891 = "Script included OP_VERIF or OP_VERNOTIF";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4891);

        throw $r12;

     label010:
        if $s1 == 126 goto label011;

        if $s1 == 127 goto label011;

        if $s1 == 128 goto label011;

        if $s1 == 129 goto label011;

        if $s1 == 131 goto label011;

        if $s1 == 132 goto label011;

        if $s1 == 133 goto label011;

        if $s1 == 134 goto label011;

        if $s1 == 141 goto label011;

        if $s1 == 142 goto label011;

        if $s1 == 149 goto label011;

        if $s1 == 150 goto label011;

        if $s1 == 151 goto label011;

        if $s1 == 152 goto label011;

        if $s1 != 153 goto label012;

     label011:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4914 = "Script included a disabled Script Op.";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4914);

        throw $r12;

     label012:
        lookupswitch($s1)
        {
            case 99: goto label015;
            case 100: goto label018;
            case 101: goto label013;
            case 102: goto label013;
            case 103: goto label023;
            case 104: goto label027;
            default: goto label013;
        };

     label013:
        if $z0 == 0 goto label001;

        lookupswitch($s1)
        {
            case 79: goto label029;
            case 80: goto label014;
            case 81: goto label030;
            case 82: goto label030;
            case 83: goto label030;
            case 84: goto label030;
            case 85: goto label030;
            case 86: goto label030;
            case 87: goto label030;
            case 88: goto label030;
            case 89: goto label030;
            case 90: goto label030;
            case 91: goto label030;
            case 92: goto label030;
            case 93: goto label030;
            case 94: goto label030;
            case 95: goto label030;
            case 96: goto label030;
            case 97: goto label005;
            case 98: goto label014;
            case 99: goto label014;
            case 100: goto label014;
            case 101: goto label014;
            case 102: goto label014;
            case 103: goto label014;
            case 104: goto label014;
            case 105: goto label031;
            case 106: goto label033;
            case 107: goto label034;
            case 108: goto label036;
            case 109: goto label038;
            case 110: goto label040;
            case 111: goto label042;
            case 112: goto label044;
            case 113: goto label046;
            case 114: goto label048;
            case 115: goto label050;
            case 116: goto label052;
            case 117: goto label053;
            case 118: goto label055;
            case 119: goto label057;
            case 120: goto label059;
            case 121: goto label061;
            case 122: goto label061;
            case 123: goto label068;
            case 124: goto label070;
            case 125: goto label070;
            case 126: goto label072;
            case 127: goto label072;
            case 128: goto label072;
            case 129: goto label072;
            case 130: goto label073;
            case 131: goto label075;
            case 132: goto label075;
            case 133: goto label075;
            case 134: goto label075;
            case 135: goto label076;
            case 136: goto label080;
            case 137: goto label014;
            case 138: goto label014;
            case 139: goto label082;
            case 140: goto label082;
            case 141: goto label094;
            case 142: goto label094;
            case 143: goto label082;
            case 144: goto label082;
            case 145: goto label082;
            case 146: goto label082;
            case 147: goto label095;
            case 148: goto label095;
            case 149: goto label122;
            case 150: goto label122;
            case 151: goto label122;
            case 152: goto label122;
            case 153: goto label122;
            case 154: goto label095;
            case 155: goto label095;
            case 156: goto label095;
            case 157: goto label123;
            case 158: goto label095;
            case 159: goto label095;
            case 160: goto label095;
            case 161: goto label095;
            case 162: goto label095;
            case 163: goto label095;
            case 164: goto label095;
            case 165: goto label125;
            case 166: goto label128;
            case 167: goto label130;
            case 168: goto label136;
            case 169: goto label142;
            case 170: goto label144;
            case 171: goto label146;
            case 172: goto label147;
            case 173: goto label147;
            case 174: goto label148;
            case 175: goto label148;
            case 176: goto label005;
            case 177: goto label005;
            case 178: goto label005;
            case 179: goto label005;
            case 180: goto label005;
            case 181: goto label005;
            case 182: goto label005;
            case 183: goto label005;
            case 184: goto label005;
            case 185: goto label005;
            default: goto label014;
        };

     label014:
        $r12 = new com.google.bitcoin.core.ScriptException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer4888 = "Script used a reserved opcode ";

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4888);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>($r14);

        throw $r12;

     label015:
        if $z0 != 0 goto label016;

        varReplacer4902 = 0;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer4902);

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label001;

     label016:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label017;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4921 = "Attempted OP_IF on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4921);

        throw $r12;

     label017:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $z0 = staticinvoke <com.google.bitcoin.script.Script: boolean castToBool(byte[])>($r11);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label001;

     label018:
        if $z0 != 0 goto label019;

        varReplacer4906 = 0;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer4906);

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label001;

     label019:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label020;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4908 = "Attempted OP_NOTIF on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4908);

        throw $r12;

     label020:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $z0 = staticinvoke <com.google.bitcoin.script.Script: boolean castToBool(byte[])>($r11);

        if $z0 != 0 goto label022;

        $z0 = 1;

     label021:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label001;

     label022:
        $z0 = 0;

        goto label021;

     label023:
        $z0 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label024;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4930 = "Attempted OP_ELSE without OP_IF/NOTIF";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4930);

        throw $r12;

     label024:
        $r8 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r10 = (java.lang.Boolean) $r8;

        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label026;

        $z0 = 1;

     label025:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label001;

     label026:
        $z0 = 0;

        goto label025;

     label027:
        $z0 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label028;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4895 = "Attempted OP_ENDIF without OP_IF/NOTIF";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4895);

        throw $r12;

     label028:
        virtualinvoke $r5.<java.util.LinkedList: java.lang.Object pollLast()>();

        goto label001;

     label029:
        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger negate()>();

        varReplacer4889 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r15, varReplacer4889);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label030:
        $i2 = staticinvoke <com.google.bitcoin.script.Script: int decodeFromOpN(int)>($s1);

        $l5 = (long) $i2;

        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);

        varReplacer4945 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r15, varReplacer4945);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label031:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label032;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4927 = "Attempted OP_VERIFY on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4927);

        throw $r12;

     label032:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $z0 = staticinvoke <com.google.bitcoin.script.Script: boolean castToBool(byte[])>($r11);

        if $z0 != 0 goto label005;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4904 = "OP_VERIFY failed";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4904);

        throw $r12;

     label033:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4887 = "Script called OP_RETURN";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4887);

        throw $r12;

     label034:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label035;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4922 = "Attempted OP_TOALTSTACK on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4922);

        throw $r12;

     label035:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label005;

     label036:
        $i2 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label037;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4898 = "Attempted OP_TOALTSTACK on an empty altstack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4898);

        throw $r12;

     label037:
        $r8 = virtualinvoke $r3.<java.util.LinkedList: java.lang.Object pollLast()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label005;

     label038:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label039;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4942 = "Attempted OP_2DROP on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4942);

        throw $r12;

     label039:
        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        goto label005;

     label040:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label041;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4900 = "Attempted OP_2DUP on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4900);

        throw $r12;

     label041:
        $r16 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator descendingIterator()>();

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (byte[]) $r8;

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label042:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 3 goto label043;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4907 = "Attempted OP_3DUP on a stack with size < 3";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4907);

        throw $r12;

     label043:
        $r16 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator descendingIterator()>();

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (byte[]) $r8;

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (byte[]) $r8;

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label044:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 4 goto label045;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4910 = "Attempted OP_2OVER on a stack with size < 4";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4910);

        throw $r12;

     label045:
        $r16 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator descendingIterator()>();

        interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (byte[]) $r8;

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label046:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 6 goto label047;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4929 = "Attempted OP_2ROT on a stack with size < 6";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4929);

        throw $r12;

     label047:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r17 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r18 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r19 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r20 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r21 = (byte[]) $r8;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r19);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r18);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r21);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r20);

        goto label005;

     label048:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 4 goto label049;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4890 = "Attempted OP_2SWAP on a stack with size < 4";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4890);

        throw $r12;

     label049:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r17 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r18 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r19 = (byte[]) $r8;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r19);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r18);

        goto label005;

     label050:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label051;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4893 = "Attempted OP_IFDUP on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4893);

        throw $r12;

     label051:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getLast()>();

        $r11 = (byte[]) $r8;

        $z0 = staticinvoke <com.google.bitcoin.script.Script: boolean castToBool(byte[])>($r11);

        if $z0 == 0 goto label005;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getLast()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label005;

     label052:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $l5 = (long) $i2;

        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);

        varReplacer4950 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r15, varReplacer4950);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label053:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label054;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4915 = "Attempted OP_DROP on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4915);

        throw $r12;

     label054:
        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        goto label005;

     label055:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label056;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4931 = "Attempted OP_DUP on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4931);

        throw $r12;

     label056:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getLast()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label005;

     label057:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label058;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4949 = "Attempted OP_NIP on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4949);

        throw $r12;

     label058:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label059:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label060;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4936 = "Attempted OP_OVER on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4936);

        throw $r12;

     label060:
        $r16 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator descendingIterator()>();

        interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label005;

     label061:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label062;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4925 = "Attempted OP_PICK/OP_ROLL on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4925);

        throw $r12;

     label062:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r15 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $l5 = virtualinvoke $r15.<java.math.BigInteger: long longValue()>();

        $b6 = $l5 cmp 0L;

        if $b6 < 0 goto label063;

        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $l8 = (long) $i2;

        $b6 = $l5 cmp $l8;

        if $b6 < 0 goto label064;

     label063:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4913 = "OP_PICK/OP_ROLL attempted to get data deeper than stack size";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4913);

        throw $r12;

     label064:
        $r16 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator descendingIterator()>();

        $l8 = 0L;

     label065:
        $b6 = $l8 cmp $l5;

        if $b6 >= 0 goto label066;

        interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $l8 = $l8 + 1L;

        goto label065;

     label066:
        $r8 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (byte[]) $r8;

        if $s1 != 122 goto label067;

        interfaceinvoke $r16.<java.util.Iterator: void remove()>();

     label067:
        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label068:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 3 goto label069;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4912 = "Attempted OP_ROT on a stack with size < 3";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4912);

        throw $r12;

     label069:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r17 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r18 = (byte[]) $r8;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r17);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r18);

        goto label005;

     label070:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label071;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4940 = "Attempted OP_SWAP on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4940);

        throw $r12;

     label071:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r17 = (byte[]) $r8;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r17);

        if $s1 != 125 goto label005;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label072:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4948 = "Attempted to use disabled Script Op.";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4948);

        throw $r12;

     label073:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label074;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4901 = "Attempted OP_SIZE on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4901);

        throw $r12;

     label074:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getLast()>();

        $r11 = (byte[]) $r8;

        $i2 = lengthof $r11;

        $l5 = (long) $i2;

        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);

        varReplacer4916 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r15, varReplacer4916);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label075:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4896 = "Attempted to use disabled Script Op.";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4896);

        throw $r12;

     label076:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label077;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4943 = "Attempted OP_EQUALVERIFY on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4943);

        throw $r12;

     label077:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r17 = (byte[]) $r8;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r11, $r17);

        if $z0 == 0 goto label079;

        $r11 = newarray (byte)[1];

        $r11[0] = 1;

     label078:
        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label079:
        $r11 = newarray (byte)[1];

        $r11[0] = 0;

        goto label078;

     label080:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label081;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4951 = "Attempted OP_EQUALVERIFY on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4951);

        throw $r12;

     label081:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r17 = (byte[]) $r8;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r11, $r17);

        if $z0 != 0 goto label005;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4905 = "OP_EQUALVERIFY: non-equal data";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4905);

        throw $r12;

     label082:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label083;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4911 = "Attempted a numeric op on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4911);

        throw $r12;

     label083:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r15 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $r22 = $r15;

        lookupswitch($s1)
        {
            case 139: goto label085;
            case 140: goto label087;
            case 141: goto label084;
            case 142: goto label084;
            case 143: goto label088;
            case 144: goto label089;
            case 145: goto label090;
            case 146: goto label092;
            default: goto label084;
        };

     label084:
        $r23 = new java.lang.AssertionError;

        varReplacer4897 = "Unreachable";

        specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>(varReplacer4897);

        throw $r23;

     label085:
        $r22 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r22 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r22);

     label086:
        varReplacer4944 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r22, varReplacer4944);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label087:
        $r22 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r22 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r22);

        goto label086;

     label088:
        $r22 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger negate()>();

        goto label086;

     label089:
        $i2 = virtualinvoke $r15.<java.math.BigInteger: int signum()>();

        if $i2 >= 0 goto label086;

        $r22 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger negate()>();

        goto label086;

     label090:
        $r22 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r15.<java.math.BigInteger: boolean equals(java.lang.Object)>($r22);

        if $z0 == 0 goto label091;

        $r22 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label086;

     label091:
        $r22 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label086;

     label092:
        $r22 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r15.<java.math.BigInteger: boolean equals(java.lang.Object)>($r22);

        if $z0 == 0 goto label093;

        $r22 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label086;

     label093:
        $r22 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label086;

     label094:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4899 = "Attempted to use disabled Script Op.";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4899);

        throw $r12;

     label095:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label096;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4934 = "Attempted a numeric op on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4934);

        throw $r12;

     label096:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r15 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r22 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        lookupswitch($s1)
        {
            case 147: goto label098;
            case 148: goto label100;
            case 149: goto label097;
            case 150: goto label097;
            case 151: goto label097;
            case 152: goto label097;
            case 153: goto label097;
            case 154: goto label101;
            case 155: goto label103;
            case 156: goto label106;
            case 157: goto label097;
            case 158: goto label108;
            case 159: goto label110;
            case 160: goto label112;
            case 161: goto label114;
            case 162: goto label116;
            case 163: goto label118;
            case 164: goto label120;
            default: goto label097;
        };

     label097:
        $r24 = new java.lang.RuntimeException;

        varReplacer4917 = "Opcode switched at runtime?";

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer4917);

        throw $r24;

     label098:
        $r15 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

     label099:
        varReplacer4935 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r15, varReplacer4935);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label100:
        $r15 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r15);

        goto label099;

     label101:
        $r25 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r25);

        if $z0 != 0 goto label102;

        $r22 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r15.<java.math.BigInteger: boolean equals(java.lang.Object)>($r22);

        if $z0 != 0 goto label102;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label102:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label103:
        $r25 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r25);

        if $z0 == 0 goto label104;

        $r22 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r15.<java.math.BigInteger: boolean equals(java.lang.Object)>($r22);

        if $z0 != 0 goto label105;

     label104:
        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label105:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label106:
        $z0 = virtualinvoke $r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15);

        if $z0 == 0 goto label107;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label107:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label108:
        $z0 = virtualinvoke $r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label109;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label109:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label110:
        $i2 = virtualinvoke $r22.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i2 >= 0 goto label111;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label111:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label112:
        $i2 = virtualinvoke $r22.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i2 <= 0 goto label113;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label113:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label114:
        $i2 = virtualinvoke $r22.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i2 > 0 goto label115;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label115:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label116:
        $i2 = virtualinvoke $r22.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i2 < 0 goto label117;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        goto label099;

     label117:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        goto label099;

     label118:
        $i2 = virtualinvoke $r22.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i2 >= 0 goto label119;

        $r15 = $r22;

        goto label099;

     label119:
        goto label099;

     label120:
        $i2 = virtualinvoke $r22.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i2 <= 0 goto label121;

        $r15 = $r22;

        goto label099;

     label121:
        goto label099;

     label122:
        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4946 = "Attempted to use disabled Script Op.";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4946);

        throw $r12;

     label123:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 2 goto label124;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4938 = "Attempted OP_NUMEQUALVERIFY on a stack with size < 2";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4938);

        throw $r12;

     label124:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r15 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r22 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $z0 = virtualinvoke $r22.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label005;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4947 = "OP_NUMEQUALVERIFY failed";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4947);

        throw $r12;

     label125:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 3 goto label126;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4920 = "Attempted OP_WITHIN on a stack with size < 3";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4920);

        throw $r12;

     label126:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r15 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r22 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r25 = staticinvoke <com.google.bitcoin.script.Script: java.math.BigInteger castToBigInteger(byte[])>($r11);

        $i2 = virtualinvoke $r22.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r25);

        if $i2 > 0 goto label127;

        $i2 = virtualinvoke $r25.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i2 >= 0 goto label127;

        $r15 = <java.math.BigInteger: java.math.BigInteger ONE>;

        varReplacer4892 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r15, varReplacer4892);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label127:
        $r15 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        varReplacer4909 = 0;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] encodeMPI(java.math.BigInteger,boolean)>($r15, varReplacer4909);

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] reverseBytes(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label128:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label129;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4918 = "Attempted OP_RIPEMD160 on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4918);

        throw $r12;

     label129:
        $r4 = new org.spongycastle.crypto.digests.RIPEMD160Digest;

        specialinvoke $r4.<org.spongycastle.crypto.digests.RIPEMD160Digest: void <init>()>();

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $i2 = lengthof $r11;

        varReplacer4903 = 0;

        virtualinvoke $r4.<org.spongycastle.crypto.digests.RIPEMD160Digest: void update(byte[],int,int)>($r11, varReplacer4903, $i2);

        $r11 = newarray (byte)[20];

        varReplacer4926 = 0;

        virtualinvoke $r4.<org.spongycastle.crypto.digests.RIPEMD160Digest: int doFinal(byte[],int)>($r11, varReplacer4926);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label130:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label131;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4923 = "Attempted OP_SHA1 on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4923);

        throw $r12;

     label131:
        varReplacer4937 = "SHA-1";

        $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4937);

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

     label132:
        $r11 = (byte[]) $r8;

     label133:
        $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

     label134:
        goto label005;

     label135:
        $r27 := @caughtexception;

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r27);

        throw $r24;

     label136:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label137;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4932 = "Attempted OP_SHA256 on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4932);

        throw $r12;

     label137:
        varReplacer4894 = "SHA-256";

        $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4894);

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

     label138:
        $r11 = (byte[]) $r8;

     label139:
        $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

     label140:
        goto label005;

     label141:
        $r28 := @caughtexception;

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r28);

        throw $r24;

     label142:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label143;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4924 = "Attempted OP_HASH160 on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4924);

        throw $r12;

     label143:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label144:
        $i2 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i2 >= 1 goto label145;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4919 = "Attempted OP_SHA256 on an empty stack";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4919);

        throw $r12;

     label145:
        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r11 = (byte[]) $r8;

        $r11 = staticinvoke <com.google.bitcoin.core.Utils: byte[] doubleDigest(byte[])>($r11);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

        goto label005;

     label146:
        $i4 = virtualinvoke $r9.<com.google.bitcoin.script.ScriptChunk: int getStartLocationInProgram()>();

        $i4 = $i4 + 1;

        goto label005;

     label147:
        $i2 = (int) $l0;

        staticinvoke <com.google.bitcoin.script.Script: void executeCheckSig(com.google.bitcoin.core.Transaction,int,com.google.bitcoin.script.Script,java.util.LinkedList,int,int)>($r0, $i2, $r1, $r2, $i4, $s1);

        goto label005;

     label148:
        $i2 = (int) $l0;

        $i3 = staticinvoke <com.google.bitcoin.script.Script: int executeMultiSig(com.google.bitcoin.core.Transaction,int,com.google.bitcoin.script.Script,java.util.LinkedList,int,int,int)>($r0, $i2, $r1, $r2, $i3, $i4, $s1);

        goto label005;

     label149:
        $z0 = virtualinvoke $r5.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label150;

        $r12 = new com.google.bitcoin.core.ScriptException;

        varReplacer4939 = "OP_IF/OP_NOTIF without OP_ENDIF";

        specialinvoke $r12.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4939);

        throw $r12;

     label150:
        return;

        catch java.security.NoSuchAlgorithmException from label131 to label132 with label135;
        catch java.security.NoSuchAlgorithmException from label133 to label134 with label135;
        catch java.security.NoSuchAlgorithmException from label137 to label138 with label141;
        catch java.security.NoSuchAlgorithmException from label139 to label140 with label141;
    }

    public static long getP2SHSigOpCount(byte[]) throws com.google.bitcoin.core.ScriptException
    {
        byte[] $r0;
        com.google.bitcoin.script.Script $r1, $r2;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r4;
        com.google.bitcoin.script.ScriptChunk $r5;
        boolean $z0;
        long $l1;
        com.google.bitcoin.core.ScriptException $r6;

        $r0 := @parameter0: byte[];

        $r1 = new com.google.bitcoin.script.Script;

        specialinvoke $r1.<com.google.bitcoin.script.Script: void <init>()>();

     label1:
        specialinvoke $r1.<com.google.bitcoin.script.Script: void parse(byte[])>($r0);

     label2:
        $r3 = $r1.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label3:
        if $i0 < 0 goto label5;

        $r3 = $r1.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.bitcoin.script.ScriptChunk) $r4;

        $z0 = virtualinvoke $r5.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

        if $z0 != 0 goto label4;

        $r2 = new com.google.bitcoin.script.Script;

        specialinvoke $r2.<com.google.bitcoin.script.Script: void <init>()>();

        $r3 = $r1.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.bitcoin.script.ScriptChunk) $r4;

        $r0 = $r5.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        specialinvoke $r2.<com.google.bitcoin.script.Script: void parse(byte[])>($r0);

        $r3 = $r2.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = staticinvoke <com.google.bitcoin.script.Script: int getSigOpCount(java.util.List,boolean)>($r3, 1);

        $l1 = (long) $i0;

        return $l1;

     label4:
        $i0 = $i0 + -1;

        goto label3;

     label5:
        return 0L;

     label6:
        $r6 := @caughtexception;

        goto label2;

        catch com.google.bitcoin.core.ScriptException from label1 to label2 with label6;
    }

    private byte[] getQuickProgram()
    {
        com.google.bitcoin.script.Script $r0;
        byte[] $r1;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = $r0.<com.google.bitcoin.script.Script: byte[] program>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: byte[] program>;

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        return $r1;
    }

    private static int getSigOpCount(java.util.List, boolean) throws com.google.bitcoin.core.ScriptException
    {
        java.util.List $r0;
        boolean $z0, $z1;
        short $s0, $s2;
        int $i1, $i4;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.google.bitcoin.script.ScriptChunk $r3;
        byte[] $r4;
        byte $b3;

        $r0 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $i1 = 0;

        $s2 = 255;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        $z1 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

        if $z1 == 0 goto label1;

        $r4 = $r3.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $b3 = $r4[0];

        $s0 = $b3 & 255;

        lookupswitch($s0)
        {
            case 172: goto label3;
            case 173: goto label3;
            case 174: goto label4;
            case 175: goto label4;
            default: goto label2;
        };

     label2:
        $s2 = $s0;

        goto label1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        if $z0 == 0 goto label5;

        if $s2 < 81 goto label5;

        if $s2 > 96 goto label5;

        $i4 = staticinvoke <com.google.bitcoin.script.Script: int decodeFromOpN(int)>($s2);

        $i1 = $i1 + $i4;

        goto label2;

     label5:
        $i1 = $i1 + 20;

        goto label2;

     label6:
        return $i1;
    }

    public static int getSigOpCount(byte[]) throws com.google.bitcoin.core.ScriptException
    {
        byte[] $r0;
        com.google.bitcoin.script.Script $r1;
        int $i0;
        java.util.List $r2;
        com.google.bitcoin.core.ScriptException $r3;

        $r0 := @parameter0: byte[];

        $r1 = new com.google.bitcoin.script.Script;

        specialinvoke $r1.<com.google.bitcoin.script.Script: void <init>()>();

     label1:
        specialinvoke $r1.<com.google.bitcoin.script.Script: void parse(byte[])>($r0);

     label2:
        $r2 = $r1.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = staticinvoke <com.google.bitcoin.script.Script: int getSigOpCount(java.util.List,boolean)>($r2, 0);

        return $i0;

     label3:
        $r3 := @caughtexception;

        goto label2;

        catch com.google.bitcoin.core.ScriptException from label1 to label2 with label3;
    }

    private void parse(byte[]) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0;
        byte[] $r1;
        java.io.ByteArrayInputStream $r2;
        com.google.bitcoin.script.ScriptChunk $r3, $r5;
        int $i0, $i1, $i2, $i5, $i6, varReplacer737, varReplacer738, varReplacer739, varReplacer743;
        java.util.ArrayList $r4;
        long $l3, $l7;
        byte $b4;
        com.google.bitcoin.script.ScriptChunk[] $r6;
        boolean $z0;
        com.google.bitcoin.core.ScriptException $r7;
        java.util.List $r8;
        java.lang.String varReplacer736, varReplacer740, varReplacer741, varReplacer742;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: byte[];

        $r4 = new java.util.ArrayList;

        varReplacer739 = 5;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(varReplacer739);

        $r0.<com.google.bitcoin.script.Script: java.util.List chunks> = $r4;

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        $i1 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int available()>();

     label01:
        $i0 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int available()>();

        if $i0 <= 0 goto label18;

        $i0 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int available()>();

        $i0 = $i1 - $i0;

        $i2 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $l3 = -1L;

        if $i2 < 0 goto label06;

        if $i2 >= 76 goto label06;

        $l3 = (long) $i2;

     label02:
        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label12;

        $r5 = new com.google.bitcoin.script.ScriptChunk;

        $r1 = newarray (byte)[1];

        $b4 = (byte) $i2;

        $r1[0] = $b4;

        varReplacer743 = 1;

        specialinvoke $r5.<com.google.bitcoin.script.ScriptChunk: void <init>(boolean,byte[],int)>(varReplacer743, $r1, $i0);

     label03:
        $r6 = <com.google.bitcoin.script.Script: com.google.bitcoin.script.ScriptChunk[] INTERN_TABLE>;

        if $r6 == null goto label17;

        $r6 = <com.google.bitcoin.script.Script: com.google.bitcoin.script.ScriptChunk[] INTERN_TABLE>;

        $i0 = lengthof $r6;

        $i2 = 0;

     label04:
        if $i2 >= $i0 goto label17;

        $r3 = $r6[$i2];

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label05;

        $r5 = $r3;

     label05:
        $i2 = $i2 + 1;

        goto label04;

     label06:
        if $i2 != 76 goto label08;

        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int available()>();

        if $i5 >= 1 goto label07;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer740 = "Unexpected end of script";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer740);

        throw $r7;

     label07:
        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $l3 = (long) $i5;

        goto label02;

     label08:
        if $i2 != 77 goto label10;

        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int available()>();

        if $i5 >= 2 goto label09;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer736 = "Unexpected end of script";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer736);

        throw $r7;

     label09:
        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $i6 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $i6 = $i6 << 8;

        $i5 = $i5 | $i6;

        $l3 = (long) $i5;

        goto label02;

     label10:
        if $i2 != 78 goto label02;

        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int available()>();

        if $i5 >= 4 goto label11;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer741 = "Unexpected end of script";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer741);

        throw $r7;

     label11:
        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $l3 = (long) $i5;

        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $l7 = (long) $i5;

        $l7 = $l7 << 8;

        $l3 = $l3 | $l7;

        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $l7 = (long) $i5;

        $l7 = $l7 << 16;

        $l3 = $l3 | $l7;

        $i5 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read()>();

        $l7 = (long) $i5;

        $l7 = $l7 << 24;

        $l3 = $l3 | $l7;

        goto label02;

     label12:
        $i2 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int available()>();

        $l7 = (long) $i2;

        $b4 = $l3 cmp $l7;

        if $b4 <= 0 goto label13;

        $r7 = new com.google.bitcoin.core.ScriptException;

        varReplacer742 = "Push of data element that is larger than remaining data";

        specialinvoke $r7.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer742);

        throw $r7;

     label13:
        $i2 = (int) $l3;

        $r1 = newarray (byte)[$i2];

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label14;

        $i2 = (int) $l3;

        varReplacer737 = 0;

        $i2 = virtualinvoke $r2.<java.io.ByteArrayInputStream: int read(byte[],int,int)>($r1, varReplacer737, $i2);

        $l7 = (long) $i2;

        $b4 = $l7 cmp $l3;

        if $b4 != 0 goto label16;

     label14:
        $z0 = 1;

     label15:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r5 = new com.google.bitcoin.script.ScriptChunk;

        varReplacer738 = 0;

        specialinvoke $r5.<com.google.bitcoin.script.ScriptChunk: void <init>(boolean,byte[],int)>(varReplacer738, $r1, $i0);

        goto label03;

     label16:
        $z0 = 0;

        goto label15;

     label17:
        $r8 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label01;

     label18:
        return;
    }

    public static byte[] removeAllInstancesOf(byte[], byte[])
    {
        byte[] $r0, $r1, $r4;
        com.google.bitcoin.core.UnsafeByteArrayOutputStream $r2;
        int $i0, $i2, $i4;
        java.lang.Throwable $r3;
        short $s1, $s5, $s6;
        boolean $z0;
        byte $b3;
        java.lang.RuntimeException $r5;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new com.google.bitcoin.core.UnsafeByteArrayOutputStream;

        $i0 = lengthof $r0;

        specialinvoke $r2.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: void <init>(int)>($i0);

        $i2 = 0;

     label01:
        $i0 = lengthof $r0;

        if $i2 >= $i0 goto label11;

        $z0 = staticinvoke <com.google.bitcoin.script.Script: boolean equalsRange(byte[],int,byte[])>($r0, $i2, $r1);

        $i0 = $i2 + 1;

        $b3 = $r0[$i2];

        $s1 = $b3 & 255;

        $i2 = 0;

        if $s1 < 0 goto label07;

        if $s1 >= 76 goto label07;

        $i2 = $s1;

     label02:
        if $z0 != 0 goto label06;

     label03:
        virtualinvoke $r2.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: void write(int)>($s1);

     label04:
        $i4 = $i0 + $i2;

     label05:
        $r4 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r0, $i0, $i4);

        virtualinvoke $r2.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: void write(byte[])>($r4);

     label06:
        $i2 = $i0 + $i2;

        goto label01;

     label07:
        if $s1 != 76 goto label08;

        $b3 = $r0[$i0];

        $s5 = $b3 & 255;

        $i2 = $s5 + 1;

        goto label02;

     label08:
        if $s1 != 77 goto label09;

        $b3 = $r0[$i0];

        $s5 = $b3 & 255;

        $i2 = $i0 + 1;

        $b3 = $r0[$i2];

        $s6 = $b3 & 255;

        $i2 = $s6 << 8;

        $i2 = $s5 | $i2;

        $i2 = $i2 + 2;

        goto label02;

     label09:
        if $s1 != 78 goto label02;

        $b3 = $r0[$i0];

        $s5 = $b3 & 255;

        $i2 = $i0 + 1;

        $b3 = $r0[$i2];

        $s6 = $b3 & 255;

        $i2 = $s6 << 8;

        $i2 = $s5 | $i2;

        $i4 = $i0 + 1;

        $b3 = $r0[$i4];

        $s5 = $b3 & 255;

        $i4 = $s5 << 16;

        $i2 = $i2 | $i4;

        $i4 = $i0 + 1;

        $b3 = $r0[$i4];

        $s5 = $b3 & 255;

        $i4 = $s5 << 24;

        $i2 = $i2 | $i4;

        $i2 = $i2 + 4;

        goto label02;

     label10:
        $r3 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r5;

     label11:
        $r0 = virtualinvoke $r2.<com.google.bitcoin.core.UnsafeByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
    }

    public static byte[] removeAllInstancesOfOp(byte[], int)
    {
        byte[] $r0, $r1;
        int $i0;
        byte $b1;

        nop;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 = newarray (byte)[1];

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        $r0 = staticinvoke <com.google.bitcoin.script.Script: byte[] removeAllInstancesOf(byte[],byte[])>($r0, $r1);

        return $r0;
    }

    public static void writeBytes(java.io.OutputStream, byte[]) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        byte[] $r1;
        int $i0, varReplacer715, varReplacer716;
        java.lang.RuntimeException $r2;
        java.lang.String varReplacer717;

        nop;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r1;

        if $i0 >= 76 goto label1;

        $i0 = lengthof $r1;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[])>($r1);

        return;

     label1:
        $i0 = lengthof $r1;

        if $i0 >= 256 goto label2;

        varReplacer715 = 76;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>(varReplacer715);

        $i0 = lengthof $r1;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[])>($r1);

        return;

     label2:
        $i0 = lengthof $r1;

        if $i0 >= 65536 goto label3;

        varReplacer716 = 77;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>(varReplacer716);

        $i0 = lengthof $r1;

        $i0 = $i0 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        $i0 = lengthof $r1;

        $i0 = $i0 >> 8;

        $i0 = $i0 & 255;

        virtualinvoke $r0.<java.io.OutputStream: void write(int)>($i0);

        virtualinvoke $r0.<java.io.OutputStream: void write(byte[])>($r1);

        return;

     label3:
        $r2 = new java.lang.RuntimeException;

        varReplacer717 = "Unimplemented";

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer717);

        throw $r2;
    }

    public void correctlySpends(com.google.bitcoin.core.Transaction, long, com.google.bitcoin.script.Script, boolean) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0, $r2;
        com.google.bitcoin.core.Transaction $r1, $r5;
        long $l0;
        boolean $z0, $z1;
        com.google.bitcoin.core.ProtocolException $r3;
        java.util.LinkedList $r4, $r10;
        com.google.bitcoin.core.NetworkParameters $r6;
        byte[] $r7;
        int $i1;
        com.google.bitcoin.core.ScriptException $r8;
        java.lang.RuntimeException $r9;
        java.lang.Object $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13, varReplacer4862, varReplacer4863, varReplacer4864, varReplacer4865, varReplacer4866, varReplacer4867;
        java.util.List $r14;
        java.util.Iterator $r15;
        com.google.bitcoin.script.ScriptChunk $r16;
        byte $b2;
        short $s3;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: com.google.bitcoin.core.Transaction;

        $l0 := @parameter1: long;

        $r2 := @parameter2: com.google.bitcoin.script.Script;

        $z0 := @parameter3: boolean;

        $r5 = new com.google.bitcoin.core.Transaction;

     label01:
        $r6 = virtualinvoke $r1.<com.google.bitcoin.core.Transaction: com.google.bitcoin.core.NetworkParameters getParams()>();

        $r7 = virtualinvoke $r1.<com.google.bitcoin.core.Transaction: byte[] bitcoinSerialize()>();

        specialinvoke $r5.<com.google.bitcoin.core.Transaction: void <init>(com.google.bitcoin.core.NetworkParameters,byte[])>($r6, $r7);

     label02:
        $r7 = virtualinvoke $r0.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        $i1 = lengthof $r7;

        if $i1 > 10000 goto label03;

        $r7 = virtualinvoke $r2.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        $i1 = lengthof $r7;

        if $i1 <= 10000 goto label05;

     label03:
        $r8 = new com.google.bitcoin.core.ScriptException;

        varReplacer4864 = "Script larger than 10,000 bytes";

        specialinvoke $r8.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4864);

        throw $r8;

     label04:
        $r3 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r9;

     label05:
        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r10 = null;

        staticinvoke <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>($r5, $l0, $r0, $r4);

        if $z0 == 0 goto label06;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>(java.util.Collection)>($r4);

     label06:
        staticinvoke <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>($r5, $l0, $r2, $r4);

        $i1 = virtualinvoke $r4.<java.util.LinkedList: int size()>();

        if $i1 != 0 goto label07;

        $r8 = new com.google.bitcoin.core.ScriptException;

        varReplacer4866 = "Stack empty at end of script execution.";

        specialinvoke $r8.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4866);

        throw $r8;

     label07:
        $r11 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r7 = (byte[]) $r11;

        $z1 = staticinvoke <com.google.bitcoin.script.Script: boolean castToBool(byte[])>($r7);

        if $z1 != 0 goto label08;

        $r8 = new com.google.bitcoin.core.ScriptException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer4862 = "Script resulted in a non-true stack: ";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4862);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label08:
        if $z0 == 0 goto label12;

        $z0 = virtualinvoke $r2.<com.google.bitcoin.script.Script: boolean isPayToScriptHash()>();

        if $z0 == 0 goto label12;

        $r14 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.google.bitcoin.script.ScriptChunk) $r11;

        $z0 = virtualinvoke $r16.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

        if $z0 == 0 goto label09;

        $r7 = $r16.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $b2 = $r7[0];

        $s3 = $b2 & 255;

        if $s3 <= 96 goto label09;

        $r8 = new com.google.bitcoin.core.ScriptException;

        varReplacer4863 = "Attempted to spend a P2SH scriptPubKey with a script that contained script ops";

        specialinvoke $r8.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4863);

        throw $r8;

     label10:
        $r11 = virtualinvoke $r10.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r7 = (byte[]) $r11;

        $r0 = new com.google.bitcoin.script.Script;

        specialinvoke $r0.<com.google.bitcoin.script.Script: void <init>(byte[])>($r7);

        staticinvoke <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>($r5, $l0, $r0, $r10);

        $i1 = virtualinvoke $r10.<java.util.LinkedList: int size()>();

        if $i1 != 0 goto label11;

        $r8 = new com.google.bitcoin.core.ScriptException;

        varReplacer4867 = "P2SH stack empty at end of script execution.";

        specialinvoke $r8.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4867);

        throw $r8;

     label11:
        $r11 = virtualinvoke $r10.<java.util.LinkedList: java.lang.Object pollLast()>();

        $r7 = (byte[]) $r11;

        $z0 = staticinvoke <com.google.bitcoin.script.Script: boolean castToBool(byte[])>($r7);

        if $z0 != 0 goto label12;

        $r8 = new com.google.bitcoin.core.ScriptException;

        varReplacer4865 = "P2SH script execution resulted in a non-true stack";

        specialinvoke $r8.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>(varReplacer4865);

        throw $r8;

     label12:
        return;

        catch com.google.bitcoin.core.ProtocolException from label01 to label02 with label04;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.bitcoin.script.Script $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        byte[] $r3, $r4;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.bitcoin.script.Script;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (com.google.bitcoin.script.Script) $r1;

        $r3 = specialinvoke $r0.<com.google.bitcoin.script.Script: byte[] getQuickProgram()>();

        $r4 = specialinvoke $r2.<com.google.bitcoin.script.Script: byte[] getQuickProgram()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r4);

        return $z0;
    }

    public java.util.List getChunks()
    {
        com.google.bitcoin.script.Script $r0;
        java.util.List $r1;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r1;
    }

    public long getCreationTimeSeconds()
    {
        com.google.bitcoin.script.Script $r0;
        long l0;

        $r0 := @this: com.google.bitcoin.script.Script;

        l0 = $r0.<com.google.bitcoin.script.Script: long creationTimeSeconds>;

        return l0;
    }

    public com.google.bitcoin.core.Address getFromAddress(com.google.bitcoin.core.NetworkParameters) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0;
        com.google.bitcoin.core.NetworkParameters $r1;
        com.google.bitcoin.core.Address $r2;
        byte[] $r3;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: com.google.bitcoin.core.NetworkParameters;

        $r2 = new com.google.bitcoin.core.Address;

        $r3 = virtualinvoke $r0.<com.google.bitcoin.script.Script: byte[] getPubKey()>();

        $r3 = staticinvoke <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>($r3);

        specialinvoke $r2.<com.google.bitcoin.core.Address: void <init>(com.google.bitcoin.core.NetworkParameters,byte[])>($r1, $r3);

        return $r2;
    }

    public byte[] getProgram()
    {
        com.google.bitcoin.script.Script $r0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.Throwable $r2;
        byte[] $r3, $r4;
        int $i0;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.google.bitcoin.script.ScriptChunk $r8;
        java.lang.RuntimeException $r9;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r3 = $r0.<com.google.bitcoin.script.Script: byte[] program>;

        if $r3 == null goto label03;

        $r3 = $r0.<com.google.bitcoin.script.Script: byte[] program>;

        $r4 = $r0.<com.google.bitcoin.script.Script: byte[] program>;

        $i0 = lengthof $r4;

     label01:
        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r3, $i0);

     label02:
        return $r3;

     label03:
        $r1 = new java.io.ByteArrayOutputStream;

     label04:
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label05:
        $r5 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

     label06:
        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label08:
        if $z0 == 0 goto label14;

     label09:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

     label10:
        $r8 = (com.google.bitcoin.script.ScriptChunk) $r7;

     label11:
        virtualinvoke $r8.<com.google.bitcoin.script.ScriptChunk: void write(java.io.OutputStream)>($r1);

     label12:
        goto label07;

     label13:
        $r2 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r9;

     label14:
        $r3 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label15:
        $r0.<com.google.bitcoin.script.Script: byte[] program> = $r3;

        $r3 = $r0.<com.google.bitcoin.script.Script: byte[] program>;

        return $r3;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label04 to label05 with label13;
        catch java.io.IOException from label06 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label13;
    }

    public byte[] getPubKey() throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0;
        java.util.List $r1;
        int $i0;
        com.google.bitcoin.core.ScriptException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object $r5;
        com.google.bitcoin.script.ScriptChunk $r6;
        byte[] $r7;
        boolean $z0;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == 2 goto label1;

        $r2 = new com.google.bitcoin.core.ScriptException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Script not of right size, expecting 2 but got ");

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.google.bitcoin.script.ScriptChunk) $r5;

        $r7 = $r6.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i0 = lengthof $r7;

        if $i0 <= 2 goto label2;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (com.google.bitcoin.script.ScriptChunk) $r5;

        $r7 = $r6.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i0 = lengthof $r7;

        if $i0 <= 2 goto label2;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (com.google.bitcoin.script.ScriptChunk) $r5;

        $r7 = $r6.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        return $r7;

     label2:
        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (com.google.bitcoin.script.ScriptChunk) $r5;

        $r7 = $r6.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i0 = lengthof $r7;

        if $i0 != 1 goto label3;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (com.google.bitcoin.script.ScriptChunk) $r5;

        $z0 = virtualinvoke $r6.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(172);

        if $z0 == 0 goto label3;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.google.bitcoin.script.ScriptChunk) $r5;

        $r7 = $r6.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i0 = lengthof $r7;

        if $i0 <= 2 goto label3;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.google.bitcoin.script.ScriptChunk) $r5;

        $r7 = $r6.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        return $r7;

     label3:
        $r2 = new com.google.bitcoin.core.ScriptException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Script did not match expected form: ");

        $r4 = virtualinvoke $r0.<com.google.bitcoin.script.Script: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public byte[] getPubKeyHash() throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2;
        com.google.bitcoin.script.ScriptChunk $r3;
        com.google.bitcoin.core.ScriptException $r4;
        byte[] r5;

        $r0 := @this: com.google.bitcoin.script.Script;

        $z0 = virtualinvoke $r0.<com.google.bitcoin.script.Script: boolean isSentToAddress()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(2);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        r5 = $r3.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        return r5;

     label1:
        $z0 = virtualinvoke $r0.<com.google.bitcoin.script.Script: boolean isSentToP2SH()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        r5 = $r3.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        return r5;

     label2:
        $r4 = new com.google.bitcoin.core.ScriptException;

        specialinvoke $r4.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>("Script not in the standard scriptPubKey form");

        throw $r4;
    }

    public com.google.bitcoin.core.Address getToAddress(com.google.bitcoin.core.NetworkParameters) throws com.google.bitcoin.core.ScriptException
    {
        com.google.bitcoin.script.Script $r0;
        com.google.bitcoin.core.NetworkParameters $r1;
        boolean $z0;
        com.google.bitcoin.core.Address $r2;
        byte[] $r3;
        com.google.bitcoin.core.ScriptException $r4;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 := @parameter0: com.google.bitcoin.core.NetworkParameters;

        $z0 = virtualinvoke $r0.<com.google.bitcoin.script.Script: boolean isSentToAddress()>();

        if $z0 == 0 goto label1;

        $r2 = new com.google.bitcoin.core.Address;

        $r3 = virtualinvoke $r0.<com.google.bitcoin.script.Script: byte[] getPubKeyHash()>();

        specialinvoke $r2.<com.google.bitcoin.core.Address: void <init>(com.google.bitcoin.core.NetworkParameters,byte[])>($r1, $r3);

        return $r2;

     label1:
        $z0 = virtualinvoke $r0.<com.google.bitcoin.script.Script: boolean isSentToP2SH()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <com.google.bitcoin.core.Address: com.google.bitcoin.core.Address fromP2SHScript(com.google.bitcoin.core.NetworkParameters,com.google.bitcoin.script.Script)>($r1, $r0);

        return $r2;

     label2:
        $r4 = new com.google.bitcoin.core.ScriptException;

        specialinvoke $r4.<com.google.bitcoin.core.ScriptException: void <init>(java.lang.String)>("Cannot cast this script to a pay-to-address type");

        throw $r4;
    }

    public int hashCode()
    {
        com.google.bitcoin.script.Script $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = specialinvoke $r0.<com.google.bitcoin.script.Script: byte[] getQuickProgram()>();

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        return $i0;
    }

    public boolean isPayToScriptHash()
    {
        com.google.bitcoin.script.Script $r0;
        byte[] $r1;
        int $i0;
        byte $b1;
        short $s2;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = virtualinvoke $r0.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        $i0 = lengthof $r1;

        if $i0 != 23 goto label1;

        $b1 = $r1[0];

        $s2 = $b1 & 255;

        if $s2 != 169 goto label1;

        $b1 = $r1[1];

        $s2 = $b1 & 255;

        if $s2 != 20 goto label1;

        $b1 = $r1[22];

        $s2 = $b1 & 255;

        if $s2 != 135 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSentToAddress()
    {
        com.google.bitcoin.script.Script $r0;
        java.util.List $r1;
        int $i0, varReplacer4868, varReplacer4869, varReplacer4870, varReplacer4871, varReplacer4872, varReplacer4873, varReplacer4874, varReplacer4875, varReplacer4876, varReplacer4877, varReplacer4878;
        java.lang.Object $r2;
        com.google.bitcoin.script.ScriptChunk $r3;
        boolean $z0;
        byte[] $r4;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 5 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4878 = 0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4878);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        varReplacer4875 = 118;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(varReplacer4875);

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4873 = 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4873);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        varReplacer4870 = 169;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(varReplacer4870);

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4871 = 2;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4871);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        $r4 = $r3.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i0 = lengthof $r4;

        if $i0 != 20 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4876 = 3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4876);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        varReplacer4877 = 136;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(varReplacer4877);

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4872 = 4;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4872);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        varReplacer4874 = 172;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(varReplacer4874);

        if $z0 == 0 goto label1;

        varReplacer4869 = 1;

        return varReplacer4869;

     label1:
        varReplacer4868 = 0;

        return varReplacer4868;
    }

    public boolean isSentToMultiSig()
    {
        com.google.bitcoin.script.Script $r0;
        java.lang.Throwable $r1;
        java.util.List $r2, $r3;
        int $i0, $i2;
        java.lang.Object $r4;
        com.google.bitcoin.script.ScriptChunk $r5;
        boolean $z0;
        byte[] $r6;
        byte $b1;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= 4 goto label01;

        return 0;

     label01:
        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r3 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.bitcoin.script.ScriptChunk) $r4;

        $z0 = virtualinvoke $r5.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $z0 = virtualinvoke $r5.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(174);

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke $r5.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(175);

        if $z0 != 0 goto label03;

        return 0;

     label03:
        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r3 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

     label04:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label05:
        $i0 = $i0 + -2;

     label06:
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

     label07:
        $r5 = (com.google.bitcoin.script.ScriptChunk) $r4;

     label08:
        $z0 = virtualinvoke $r5.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

     label09:
        if $z0 != 0 goto label10;

        return 0;

     label10:
        $r6 = $r5.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $b1 = $r6[0];

     label11:
        $i2 = staticinvoke <com.google.bitcoin.script.Script: int decodeFromOpN(byte)>($b1);

     label12:
        if $i2 < 1 goto label15;

        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

     label13:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label14:
        $i2 = $i2 + 3;

        if $i0 == $i2 goto label16;

     label15:
        return 0;

     label16:
        $i0 = 1;

     label17:
        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

     label18:
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

     label19:
        $i2 = $i2 + -2;

        if $i0 >= $i2 goto label25;

        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

     label20:
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

     label21:
        $r5 = (com.google.bitcoin.script.ScriptChunk) $r4;

     label22:
        $z0 = virtualinvoke $r5.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

     label23:
        if $z0 == 0 goto label24;

        return 0;

     label24:
        $i0 = $i0 + 1;

        goto label17;

     label25:
        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

     label26:
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

     label27:
        $r5 = (com.google.bitcoin.script.ScriptChunk) $r4;

        $r6 = $r5.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $b1 = $r6[0];

     label28:
        $i0 = staticinvoke <com.google.bitcoin.script.Script: int decodeFromOpN(byte)>($b1);

     label29:
        if $i0 >= 1 goto label31;

        return 0;

     label30:
        $r1 := @caughtexception;

        return 0;

     label31:
        return 1;

        catch java.lang.IllegalStateException from label04 to label05 with label30;
        catch java.lang.IllegalStateException from label06 to label07 with label30;
        catch java.lang.IllegalStateException from label08 to label09 with label30;
        catch java.lang.IllegalStateException from label11 to label12 with label30;
        catch java.lang.IllegalStateException from label13 to label14 with label30;
        catch java.lang.IllegalStateException from label18 to label19 with label30;
        catch java.lang.IllegalStateException from label20 to label21 with label30;
        catch java.lang.IllegalStateException from label22 to label23 with label30;
        catch java.lang.IllegalStateException from label26 to label27 with label30;
        catch java.lang.IllegalStateException from label28 to label29 with label30;
    }

    public boolean isSentToP2SH()
    {
        com.google.bitcoin.script.Script $r0;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r2;
        com.google.bitcoin.script.ScriptChunk $r3;
        boolean $z0;
        byte[] $r4;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 3 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(169);

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        $r4 = $r3.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i0 = lengthof $r4;

        if $i0 != 20 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(2);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(135);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSentToRawPubKey()
    {
        com.google.bitcoin.script.Script $r0;
        java.util.List $r1;
        int $i0, varReplacer4879, varReplacer4880, varReplacer4881, varReplacer4882, varReplacer4883, varReplacer4884;
        java.lang.Object $r2;
        com.google.bitcoin.script.ScriptChunk $r3;
        boolean $z0;
        byte[] $r4;

        nop;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 2 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4880 = 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4880);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        varReplacer4882 = 172;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean equalsOpCode(int)>(varReplacer4882);

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4881 = 0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4881);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        $z0 = virtualinvoke $r3.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        varReplacer4883 = 0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(varReplacer4883);

        $r3 = (com.google.bitcoin.script.ScriptChunk) $r2;

        $r4 = $r3.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $i0 = lengthof $r4;

        if $i0 <= 1 goto label1;

        varReplacer4884 = 1;

        return varReplacer4884;

     label1:
        varReplacer4879 = 0;

        return varReplacer4879;
    }

    public void setCreationTimeSeconds(long)
    {
        com.google.bitcoin.script.Script $r0;
        long $l0;

        $r0 := @this: com.google.bitcoin.script.Script;

        $l0 := @parameter0: long;

        $r0.<com.google.bitcoin.script.Script: long creationTimeSeconds> = $l0;

        return;
    }

    public java.lang.String toString()
    {
        com.google.bitcoin.script.Script $r0;
        java.lang.StringBuilder $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.google.bitcoin.script.ScriptChunk $r5;
        byte[] $r6;
        byte $b0;
        java.lang.String $r7;

        $r0 := @this: com.google.bitcoin.script.Script;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<com.google.bitcoin.script.Script: java.util.List chunks>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.google.bitcoin.script.ScriptChunk) $r4;

        $z0 = virtualinvoke $r5.<com.google.bitcoin.script.ScriptChunk: boolean isOpCode()>();

        if $z0 == 0 goto label2;

        $r6 = $r5.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $b0 = $r6[0];

        $r7 = staticinvoke <com.google.bitcoin.script.ScriptOpCodes: java.lang.String getOpCodeName(byte)>($b0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label1;

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = $r5.<com.google.bitcoin.script.ScriptChunk: byte[] data>;

        $r7 = staticinvoke <com.google.bitcoin.core.Utils: java.lang.String bytesToHexString(byte[])>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        goto label1;

     label3:
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        return $r7;
    }
}
