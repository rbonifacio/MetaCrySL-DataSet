public class utilities.PaoEncriptor extends java.lang.Object
{
    private final byte NOT_USING_SYSTEM_USERNAME;
    private final byte USING_SYSTEM_USERNAME;

    public void <init>()
    {
        utilities.PaoEncriptor $r0;
        int varReplacer226, varReplacer227;

        nop;

        $r0 := @this: utilities.PaoEncriptor;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer226 = 1;

        $r0.<utilities.PaoEncriptor: byte USING_SYSTEM_USERNAME> = varReplacer226;

        varReplacer227 = 0;

        $r0.<utilities.PaoEncriptor: byte NOT_USING_SYSTEM_USERNAME> = varReplacer227;

        return;
    }

    private java.lang.String bytesToString(byte[])
    {
        utilities.PaoEncriptor $r0;
        byte[] $r1;
        byte $b0;
        int $i1, $i3;
        char $c2;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: byte[];

        $r2 = "";

        $i1 = lengthof $r1;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label2;

        $b0 = $r1[$i3];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $c2 = (char) $b0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private byte[] getSumary(java.lang.String)
    {
        utilities.PaoEncriptor $r0;
        java.lang.String $r1, varReplacer2365, varReplacer2366;
        byte[] $r2;
        java.security.MessageDigest $r3;
        java.lang.Throwable $r4, $r8;
        java.lang.Class $r5;
        java.util.logging.Logger $r6;
        java.util.logging.Level $r7;
        null_type varReplacer2363, varReplacer2367, varReplacer2368;
        int varReplacer2364;

        nop;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: java.lang.String;

     label1:
        varReplacer2365 = "UTF-8";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2365);

        varReplacer2366 = "SHA-1";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2366);

        $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        varReplacer2364 = 16;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, varReplacer2364);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        $r7 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2367 = null;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, varReplacer2367, $r4);

     label4:
        varReplacer2368 = null;

        return varReplacer2368;

     label5:
        $r8 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        $r7 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2363 = null;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, varReplacer2363, $r8);

        goto label4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
    }

    private byte[] stringToBytes(java.lang.String)
    {
        utilities.PaoEncriptor $r0;
        java.lang.String $r1;
        byte[] $r2;
        int $i0, $i1;
        char $c2;
        byte $b3;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $b3 = (byte) $c2;

        $r2[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public byte[] decryptBytes(byte[], boolean)
    {
        utilities.PaoEncriptor $r0;
        byte[] $r1;
        boolean $z0;
        javax.crypto.Cipher $r2;
        javax.crypto.SecretKey $r3;
        java.lang.Throwable $r4, $r9, $r10, $r11, $r12;
        java.lang.Class $r5;
        java.lang.String $r6, varReplacer2351;
        java.util.logging.Logger $r7;
        java.util.logging.Level $r8;
        null_type varReplacer2350, varReplacer2352, varReplacer2353, varReplacer2355, varReplacer2356;
        int varReplacer2354;

        nop;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

     label1:
        varReplacer2351 = "AES";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2351);

        $r3 = virtualinvoke $r0.<utilities.PaoEncriptor: javax.crypto.SecretKey getPath2(boolean)>($z0);

        varReplacer2354 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2354, $r3);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2350 = null;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, varReplacer2350, $r4);

     label4:
        $r1 = newarray (byte)[0];

        return $r1;

     label5:
        $r9 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2352 = null;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, varReplacer2352, $r9);

        goto label4;

     label6:
        $r10 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2353 = null;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, varReplacer2353, $r10);

        goto label4;

     label7:
        $r11 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2355 = null;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, varReplacer2355, $r11);

        goto label4;

     label8:
        $r12 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2356 = null;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, varReplacer2356, $r12);

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label5;
        catch java.security.InvalidKeyException from label1 to label2 with label6;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label7;
        catch javax.crypto.BadPaddingException from label1 to label2 with label8;
    }

    public java.io.ByteArrayInputStream decryptFile(java.io.ByteArrayInputStream)
    {
        utilities.PaoEncriptor $r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        java.lang.Throwable $r3;
        byte $b0;
        boolean $z0;
        int $i1;
        java.lang.Class $r4;
        java.lang.String $r5;
        java.util.logging.Logger $r6;
        java.util.logging.Level $r7;
        null_type varReplacer2349;

        nop;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: java.io.ByteArrayInputStream;

        $z0 = 1;

     label01:
        $i1 = virtualinvoke $r1.<java.io.ByteArrayInputStream: int read()>();

     label02:
        $b0 = (byte) $i1;

     label03:
        $i1 = virtualinvoke $r1.<java.io.ByteArrayInputStream: int available()>();

     label04:
        $r2 = newarray (byte)[$i1];

     label05:
        virtualinvoke $r1.<java.io.ByteArrayInputStream: int read(byte[])>($r2);

        virtualinvoke $r1.<java.io.ByteArrayInputStream: void close()>();

     label06:
        if $b0 != 1 goto label11;

     label07:
        $r2 = virtualinvoke $r0.<utilities.PaoEncriptor: byte[] decryptBytes(byte[],boolean)>($r2, $z0);

     label08:
        $r1 = new java.io.ByteArrayInputStream;

     label09:
        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

     label10:
        return $r1;

     label11:
        $z0 = 0;

        goto label07;

     label12:
        $r3 := @caughtexception;

        $r4 = class "Lutilities/PaoEncriptor;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r5);

        $r7 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        varReplacer2349 = null;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r7, varReplacer2349, $r3);

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = newarray (byte)[0];

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r1;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label09 to label10 with label12;
    }

    public java.lang.String decryptString(java.lang.String)
    {
        utilities.PaoEncriptor $r0;
        java.lang.String $r1, $r2;
        byte[] $r3;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.String;

        $r3 = specialinvoke $r0.<utilities.PaoEncriptor: byte[] stringToBytes(java.lang.String)>($r1);

        $r3 = virtualinvoke $r0.<utilities.PaoEncriptor: byte[] decryptBytes(byte[],boolean)>($r3, 1);

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        return $r2;
    }

    public byte[] encryptBytes(byte[], boolean)
    {
        utilities.PaoEncriptor $r0;
        byte[] $r1;
        boolean $z0;
        javax.crypto.Cipher $r2;
        javax.crypto.SecretKey $r3;
        java.lang.Throwable $r4, $r9, $r10, $r11, $r12;
        java.lang.Class $r5;
        java.lang.String $r6;
        java.util.logging.Logger $r7;
        java.util.logging.Level $r8;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

     label1:
        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        $r3 = virtualinvoke $r0.<utilities.PaoEncriptor: javax.crypto.SecretKey getPath2(boolean)>($z0);

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r3);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, null, $r4);

     label4:
        $r1 = newarray (byte)[0];

        return $r1;

     label5:
        $r9 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, null, $r9);

        goto label4;

     label6:
        $r10 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, null, $r10);

        goto label4;

     label7:
        $r11 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, null, $r11);

        goto label4;

     label8:
        $r12 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r6);

        $r8 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r8, null, $r12);

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label5;
        catch java.security.InvalidKeyException from label1 to label2 with label6;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label7;
        catch javax.crypto.BadPaddingException from label1 to label2 with label8;
    }

    public void encryptFile(byte[], java.lang.String, boolean)
    {
        utilities.PaoEncriptor $r0;
        byte[] $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        java.util.logging.Level $r4;
        java.lang.Class $r5;
        java.util.logging.Logger $r6;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

     label1:
        $r1 = virtualinvoke $r0.<utilities.PaoEncriptor: byte[] encryptBytes(byte[],boolean)>($r1, $z0);

        virtualinvoke $r0.<utilities.PaoEncriptor: void write(java.lang.String,byte[],boolean)>($r2, $r1, $z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r5 = class "Lutilities/PaoEncriptor;";

        $r2 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        $r4 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r4, null, $r3);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String encryptString(java.lang.String)
    {
        utilities.PaoEncriptor $r0;
        java.lang.String $r1;
        byte[] $r2;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r2 = virtualinvoke $r0.<utilities.PaoEncriptor: byte[] encryptBytes(byte[],boolean)>($r2, 1);

        $r1 = specialinvoke $r0.<utilities.PaoEncriptor: java.lang.String bytesToString(byte[])>($r2);

        return $r1;
    }

    public javax.crypto.SecretKey getPath2(boolean)
    {
        utilities.PaoEncriptor $r0;
        boolean $z0;
        java.lang.String $r1, $r2, varReplacer2358, varReplacer2360, varReplacer2361, varReplacer2362;
        java.lang.StringBuilder $r3;
        int $i0, varReplacer2357, varReplacer2359;
        java.io.PrintStream $r4;
        byte[] $r5;
        javax.crypto.spec.SecretKeySpec $r6;

        nop;

        $r0 := @this: utilities.PaoEncriptor;

        $z0 := @parameter0: boolean;

        $r2 = "";

        if $z0 == 0 goto label1;

        varReplacer2361 = "user.name";

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer2361);

     label1:
        $r1 = "wIzlIzIJrhV6nYBsA8GHMw==";

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer2358 = "wIzlIzIJrhV6nYBsA8GHMw==";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2358);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        varReplacer2357 = 0;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2357, $i0);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2362 = "Encription key: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2362);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r2);

        $r5 = specialinvoke $r0.<utilities.PaoEncriptor: byte[] getSumary(java.lang.String)>($r1);

        $r6 = new javax.crypto.spec.SecretKeySpec;

        $i0 = lengthof $r5;

        varReplacer2359 = 0;

        varReplacer2360 = "AES";

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer2359, $i0, varReplacer2360);

        return $r6;
    }

    public void write(java.lang.String, byte[], boolean) throws java.io.IOException
    {
        utilities.PaoEncriptor $r0;
        java.lang.String $r1;
        byte[] $r2;
        boolean $z0, $z1;
        java.io.DataOutputStream $r3, r12;
        java.lang.Throwable $r4, $r9;
        java.io.File $r5, r10;
        java.io.FileOutputStream $r6, r11;
        java.io.PrintStream $r7;
        java.lang.StringBuilder $r8, r13;
        int $i0;
        java.io.IOException r14;

        $r0 := @this: utilities.PaoEncriptor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $z0 := @parameter2: boolean;

     label01:
        r10 = new java.io.File;

     label02:
        $r5 = r10;

     label03:
        specialinvoke r10.<java.io.File: void <init>(java.lang.String)>($r1);

     label04:
        r11 = new java.io.FileOutputStream;

     label05:
        $r6 = r11;

     label06:
        specialinvoke r11.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

     label07:
        r12 = new java.io.DataOutputStream;

     label08:
        $r3 = r12;

     label09:
        specialinvoke r12.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label10:
        if $z1 != 0 goto label12;

     label11:
        virtualinvoke $r5.<java.io.File: boolean createNewFile()>();

     label12:
        if $z0 == 0 goto label21;

     label13:
        $r7 = <java.lang.System: java.io.PrintStream out>;

     label14:
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("write: USING_SYSTEM_USERNAME");

        virtualinvoke $r3.<java.io.DataOutputStream: void write(int)>(1);

     label15:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        r13 = new java.lang.StringBuilder;

     label16:
        $r8 = r13;

     label17:
        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Save: ");

     label18:
        $i0 = lengthof $r2;

     label19:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.DataOutputStream: void write(byte[])>($r2);

        virtualinvoke $r3.<java.io.DataOutputStream: void flush()>();

        virtualinvoke $r3.<java.io.DataOutputStream: void close()>();

        virtualinvoke $r6.<java.io.FileOutputStream: void close()>();

     label20:
        return;

     label21:
        $r7 = <java.lang.System: java.io.PrintStream out>;

     label22:
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("write: NOT_USING_SYSTEM_USERNAME");

        virtualinvoke $r3.<java.io.DataOutputStream: void write(int)>(0);

     label23:
        goto label15;

     label24:
        $r4 := @caughtexception;

     label25:
        r14 = (java.io.IOException) $r4;

        virtualinvoke r14.<java.io.IOException: void printStackTrace()>();

     label26:
        return;

     label27:
        $r9 := @caughtexception;

        throw $r9;

        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.io.IOException from label14 to label15 with label24;
        catch java.io.IOException from label17 to label18 with label24;
        catch java.io.IOException from label19 to label20 with label24;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label05 with label27;
        catch java.lang.Throwable from label06 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label16 with label27;
        catch java.lang.Throwable from label17 to label20 with label27;
        catch java.lang.Throwable from label21 to label23 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
    }
}
