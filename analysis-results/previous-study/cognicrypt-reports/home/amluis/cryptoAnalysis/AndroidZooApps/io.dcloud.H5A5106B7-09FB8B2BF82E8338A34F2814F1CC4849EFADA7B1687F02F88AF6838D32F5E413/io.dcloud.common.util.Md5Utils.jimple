public class io.dcloud.common.util.Md5Utils extends java.lang.Object
{
    public static final java.lang.String ALGORITHM;
    public static final java.lang.String DEFAULT_CHARSET;
    private static final char[] HEX;
    private static final char[] HEX_LOWER_CASE;

    static void <clinit>()
    {
        char[] $r0;

        nop;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <io.dcloud.common.util.Md5Utils: char[] HEX> = $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <io.dcloud.common.util.Md5Utils: char[] HEX_LOWER_CASE> = $r0;

        return;
    }

    public void <init>()
    {
        io.dcloud.common.util.Md5Utils $r0;

        $r0 := @this: io.dcloud.common.util.Md5Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String md5(java.io.File)
    {
        java.io.File $r0;
        byte[] $r1;
        java.io.FileInputStream $r2, r11;
        java.security.MessageDigest $r3;
        int $i0;
        java.lang.Exception $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10;
        java.io.IOException r12;

        $r0 := @parameter0: java.io.File;

        $r1 = newarray (byte)[1024];

     label01:
        r11 = new java.io.FileInputStream;

     label02:
        $r2 = r11;

     label03:
        specialinvoke r11.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label04:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label05:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1);

     label06:
        if $i0 <= 0 goto label14;

     label07:
        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[],int,int)>($r1, 0, $i0);

     label08:
        goto label05;

     label09:
        $r4 := @caughtexception;

     label10:
        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

     label11:
        if $r2 == null goto label27;

     label12:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label13:
        return null;

     label14:
        $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        $r5 = staticinvoke <io.dcloud.common.util.Md5Utils: java.lang.String toHex(byte[])>($r1);

     label15:
        if $r2 == null goto label28;

     label16:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label17:
        return $r5;

     label18:
        $r6 := @caughtexception;

        r12 = (java.io.IOException) $r6;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        return $r5;

     label19:
        $r7 := @caughtexception;

        r12 = (java.io.IOException) $r7;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        return null;

     label20:
        $r8 := @caughtexception;

        $r2 = null;

        $r9 = $r8;

     label21:
        if $r2 == null goto label23;

     label22:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label23:
        throw $r9;

     label24:
        $r10 := @caughtexception;

        r12 = (java.io.IOException) $r10;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        goto label23;

     label25:
        $r9 := @caughtexception;

        goto label21;

     label26:
        $r4 := @caughtexception;

        $r2 = null;

        goto label10;

     label27:
        return null;

     label28:
        return $r5;

        catch java.lang.Exception from label03 to label04 with label26;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Exception from label04 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.io.IOException from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label09;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Exception $r4;
        java.lang.Throwable $r5, $r6;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <io.dcloud.common.util.Md5Utils: java.lang.String toHex(byte[])>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return $r0;

     label4:
        $r5 := @caughtexception;

        return $r0;

     label5:
        $r6 := @caughtexception;

        return $r0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String md5(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r2 = staticinvoke <io.dcloud.common.util.Md5Utils: java.lang.String toHex(byte[])>($r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return "";

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String md5LowerCase(java.lang.String)
    {
        java.lang.String $r0, $r3, varReplacer3887, varReplacer3888, varReplacer3889;
        boolean $z0;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Exception $r4;
        java.lang.Throwable $r5, $r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        varReplacer3888 = "";

        return varReplacer3888;

     label1:
        varReplacer3889 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3889);

        varReplacer3887 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3887);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <io.dcloud.common.util.Md5Utils: java.lang.String toLowerCaseHex(byte[])>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return $r0;

     label4:
        $r5 := @caughtexception;

        return $r0;

     label5:
        $r6 := @caughtexception;

        return $r0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String toHex(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        java.lang.String $r2;
        byte $b2;
        char[] $r3;
        short $s3;
        char $c4;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = <io.dcloud.common.util.Md5Utils: char[] HEX>;

        $s3 = $b2 & 240;

        $s3 = $s3 >> 4;

        $c4 = $r3[$s3];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r3 = <io.dcloud.common.util.Md5Utils: char[] HEX>;

        $b2 = $b2 & 15;

        $c4 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String toLowerCaseHex(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        java.lang.String $r2;
        byte $b2;
        char[] $r3;
        short $s3;
        char $c4;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = <io.dcloud.common.util.Md5Utils: char[] HEX_LOWER_CASE>;

        $s3 = $b2 & 240;

        $s3 = $s3 >> 4;

        $c4 = $r3[$s3];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r3 = <io.dcloud.common.util.Md5Utils: char[] HEX_LOWER_CASE>;

        $b2 = $b2 & 15;

        $c4 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static boolean verifyFileMd5(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;
        java.io.File $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <io.dcloud.common.util.Md5Utils: java.lang.String md5(java.io.File)>($r2);

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
