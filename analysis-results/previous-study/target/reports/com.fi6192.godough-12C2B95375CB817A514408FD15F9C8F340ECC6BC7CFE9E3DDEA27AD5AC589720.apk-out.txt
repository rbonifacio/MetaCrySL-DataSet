Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.fi6192.godough-12C2B95375CB817A514408FD15F9C8F340ECC6BC7CFE9E3DDEA27AD5AC589720.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r13
		Type: java.security.KeyPairGenerator
		Statement: $r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer1994, varReplacer1995)
		Method: <com.jackhenry.godough.core.e.a.d: java.security.KeyPair a()>
		SHA-256: 794925cd259efdcecf9eace5ba1bbe6868c1adc2fa935ca185cbe982fe32e366
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1993)
		Method: <com.jackhenry.godough.core.e.a.d: javax.crypto.Cipher a(int)>
		SHA-256: 7f6fa855466d183deba8b9be12d43232539723cc57f99fb479d1fd3d54d149e1
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r6)
		Method: <com.jackhenry.godough.core.e.a.d: java.security.KeyPair a(java.lang.String)>
		SHA-256: 9612aa3aee259dde19f760f16bee980e836ca14afe93957b9d5791a9acc61168
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.jackhenry.godough.core.e.a.d: javax.crypto.Cipher a(int)>
		SHA-256: 5215b964eb2e8f774ee768a16b2584b0d493a4f8786b91d357be14eb7c7e8f10
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.jackhenry.godough.core.e.a.e: byte[] a(java.lang.String)>
		SHA-256: 8637b7154cdebdd48d206b99a9406676c959fe44a7e4a9ab9a8c6a33c7a2e073
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.jackhenry.godough.core.e.a.a: byte[] a(int)>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1987)
		Method: <com.jackhenry.godough.core.e.a.a: byte[] a(int)>
		SHA-256: 7cddcabae2370399d929b60147acaff8f02c8a8272a69da2827d768d5fda8aa9
		Secure: true
	Object:
		Variable: varReplacer1968
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1968)
		Method: <com.jackhenry.godough.core.e.a.a: javax.crypto.Cipher b(int)>
		SHA-256: 92a3559b3bc50fdb2ab73d4b68af43625636d9a2f61a95cdc8172cb2fdc4e0d5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.jackhenry.godough.core.e.a.d: javax.crypto.Cipher a(int)>
		SHA-256: 62fbee5e5ba0e81690016fec71b4cc6ba064e3d7b352683ce2bd21e393fa9be1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.jackhenry.godough.core.e.a.a: javax.crypto.Cipher b(int)>
		SHA-256: 75727520317936b5e950ac40cf3484a5dd1b4e18e8bb3589fadcfc9bd893b303
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: $r14 = virtualinvoke $r13.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.jackhenry.godough.core.e.a.d: java.security.KeyPair a()>
		SHA-256: d31e3da1609968867cded29054fa423016e5607de63abf9d9898983b3b345070
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.jackhenry.godough.core.e.a.a: byte[] a(int)>
		SHA-256: 23bf3f2269bb3af399aea9613d16ef7955d7b25444e189117bb8f94f5792c575
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <com.jackhenry.godough.core.e.a.a: byte[] a(int)>
		SHA-256: 5a1bf219c2fe1b2c9b733a51594f1bae689bd92e22b45b728e56b7d657587264
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jackhenry.godough.core.e.a.d: byte[] b(byte[])>
		SHA-256: 763b33888c9094894135257df908eb686ea447392812f5600bab076965330f86
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.jackhenry.godough.core.e.a.a: byte[] a(int)>
		SHA-256: 226375bb7a6951192f4a9c9b0947dea97948f9b80782b7299d847544c521d3a7
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jackhenry.godough.core.e.a.d: byte[] a(byte[])>
		SHA-256: a6508c618359f777761bc612cf11f414d16585735b4e1ef1b7cd3ea629b16cfe
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1968)
		Method: <com.jackhenry.godough.core.e.a.a: javax.crypto.Cipher b(int)>
		SHA-256: 8f316009b78e30c58ecd91f6c9dcc624f30c5e43716085c45657669261ae47d8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1333)
		Method: <com.jackhenry.godough.core.e.a.d: void <init>(java.lang.String)>
		SHA-256: 3c47a73ffab5e56c337eaa7e6bcee4b9712e8ab78f7daa6a8e9a093513185f73
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1970)
		Method: <com.jackhenry.godough.core.e.a.a: javax.crypto.Cipher b(int)>
		SHA-256: 2179869174455efdad0e34843372ac8967d0dd171cc5085984b385fb22f08dca
		Secure: false

Findings in Java Class: com.jackhenry.godough.core.e.a.e

	 in Method: byte[] a(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2179869174455efdad0e34843372ac8967d0dd171cc5085984b385fb22f08dca)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2179869174455efdad0e34843372ac8967d0dd171cc5085984b385fb22f08dca)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r5 = virtualinvoke $r4.<com.jackhenry.godough.core.e.a.a: javax.crypto.Cipher b(int)>(varReplacer1365)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2179869174455efdad0e34843372ac8967d0dd171cc5085984b385fb22f08dca)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r5 = virtualinvoke $r4.<com.jackhenry.godough.core.e.a.a: javax.crypto.Cipher b(int)>(varReplacer1365)


Findings in Java Class: com.jackhenry.godough.core.e.a.d

	 in Method: javax.crypto.Cipher a(int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1992, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7f6fa855466d183deba8b9be12d43232539723cc57f99fb479d1fd3d54d149e1)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1993)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1990, $r4)


	 in Method: java.security.KeyPair a()
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r13.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r12)


Findings in Java Class: com.jackhenry.godough.core.e.a.a

	 in Method: javax.crypto.Cipher b(int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1967, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1968)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 6
	IncompleteOperationError: 3
=====================================================================
