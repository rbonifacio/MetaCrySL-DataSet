Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.globalegrow.app.sammydress-0DDA9CE9F3D0839F5E993D0607DB173DF1C5E847795A6D760FCD223D4F11A5EC.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.globalegrow.library.d.a.d: javax.net.ssl.SSLSocketFactory a(java.util.List)>
		SHA-256: 4f015ccc4884c71c605d91bb34d1b7ea89a1c467375fc88ff47d2f998e3fad95
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <a.u: javax.net.ssl.X509TrustManager y()>
		SHA-256: 4f723cc8be1e867dcd9a194d13d38b5358b6108102cbc20cab3eaba0dcedc827
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.avos.avoscloud.AVUtils: java.lang.String computeMD5(byte[])>
		SHA-256: 248453ee826c04a9eaf20e11c3c3c03dbf8ee126a38696eea76ca6b49de60f15
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.globalegrow.library.d.a.d: javax.net.ssl.SSLSocketFactory a(java.util.List)>
		SHA-256: d77c0ae4e2c68f06bf04e2cf0402c8c87e43082dc728a9bda557190e6d0c2e84
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <a.u: javax.net.ssl.X509TrustManager y()>
		SHA-256: a4bff4416b21c3a1f16b9c1696425a6f7dd5ce292644b257c0d2ac5fdc440a54
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20231)
		Method: <com.avos.avoscloud.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: b5a58c503e069c2e62f2f170c987967b2e1bde1ad4449be36fa044cdaa00d475
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12628)
		Method: <a.u: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 70bb3b1688721f09be6075300c5f3082afa087fd6f992d690e0036276a3efbf4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13909)
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: a272ed320a6615e276136861bf24fa46eddf430626d826ff3675034e576c857a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15117)
		Method: <com.avos.avoscloud.okhttp.internal.Util: com.avos.avoscloud.okio.ByteString sha1(com.avos.avoscloud.okio.ByteString)>
		SHA-256: 2e35752ad49e533ed5f5d9871c8317928aeb57ff62a7fed967748dff553eb0e4
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.globalegrow.library.d.a.d: javax.net.ssl.SSLSocketFactory a(java.util.List)>
		SHA-256: 424bf12f3e1f850352bd1380f6d91c2c77546b2b7c403a932e1e1391da2cffa0
		Secure: true
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: specialinvoke r14.<java.security.SecureRandom: void <init>()>()
		Method: <com.globalegrow.library.d.a.d: javax.net.ssl.SSLSocketFactory a(java.util.List)>
		SHA-256: f3e9e30d034a240cc319d09c10e8f1f4117f530f04a5e9a24bfca67428ff38a9
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.alipay.euler.andfix.security.SecurityChecker: java.lang.String getFileMD5(java.io.File)>
		SHA-256: de21bc10c67c4693465fb1ea48cc73a0cf4b4e0c29eeaddd8ce31432d0dc6fb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.avos.avoscloud.okhttp.internal.Util: com.avos.avoscloud.okio.ByteString sha1(com.avos.avoscloud.okio.ByteString)>
		SHA-256: 533790f741ccce52b37b13a1f5b15685cf6be9dbae4d3ca5f2ae063c0b550248
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1258)
		Method: <com.avos.avoscloud.AVUtils: java.lang.String computeMD5(byte[])>
		SHA-256: 426de44d8ee320314de2addcac467972d1841914d286e40a16ae5fe1c8b7bdd7
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: abd1cc9f80c67de535f86f9bb48b3839c33707fb833d4e72c1309dc4393b0030
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.avos.avoscloud.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: 6f7e0d009fe843781c6583c4c2d94575a8e4890331abe5d479f088ab2467a31e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5155)
		Method: <com.avos.avoscloud.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 5be42a97e62d2d41c871b6c4cd631bb07cb8bf514e1b9b385e276067d7ad448a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12775)
		Method: <com.alipay.euler.andfix.security.SecurityChecker: java.lang.String getFileMD5(java.io.File)>
		SHA-256: 7e38731daa14b5f842636179398e77c1daddc0da58011d236ba59c44ea6da5b2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12297)
		Method: <com.globalegrow.library.d.a.d: javax.net.ssl.SSLSocketFactory a(java.util.List)>
		SHA-256: a573cfc6d504fa1b4ad2d842392db24478bde07240a275ac4b5b2a95bc68c4b2
		Secure: false

Findings in Java Class: com.avos.avoscloud.AVPushWebSocketClient

	 in Method: void setSocket()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: com.avos.avoscloud.AVUtils

	 in Method: java.lang.String computeMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #426de44d8ee320314de2addcac467972d1841914d286e40a16ae5fe1c8b7bdd7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1258)


Findings in Java Class: com.avos.avoscloud.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5152, varReplacer5152, varReplacer5152)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5152, varReplacer5152, varReplacer5152)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5be42a97e62d2d41c871b6c4cd631bb07cb8bf514e1b9b385e276067d7ad448a)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5155)


Findings in Java Class: com.globalegrow.library.d.a.d

	 in Method: javax.net.ssl.SSLSocketFactory a(java.util.List)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12295, $r10, $r11)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a573cfc6d504fa1b4ad2d842392db24478bde07240a275ac4b5b2a95bc68c4b2)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12297)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12295, $r10, $r11)


Findings in Java Class: a.u

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12629, r7, varReplacer12629)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12629, r7, varReplacer12629)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #70bb3b1688721f09be6075300c5f3082afa087fd6f992d690e0036276a3efbf4)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12628)


	 in Method: javax.net.ssl.X509TrustManager y()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12627)


Findings in Java Class: com.alipay.euler.andfix.security.SecurityChecker

	 in Method: java.lang.String getFileMD5(java.io.File)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7e38731daa14b5f842636179398e77c1daddc0da58011d236ba59c44ea6da5b2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12775)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #7e38731daa14b5f842636179398e77c1daddc0da58011d236ba59c44ea6da5b2)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.ads.conversiontracking.g

	 in Method: java.lang.String e(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a272ed320a6615e276136861bf24fa46eddf430626d826ff3675034e576c857a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13909)


Findings in Java Class: com.avos.avoscloud.okhttp.internal.Util

	 in Method: com.avos.avoscloud.okio.ByteString sha1(com.avos.avoscloud.okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2e35752ad49e533ed5f5d9871c8317928aeb57ff62a7fed967748dff553eb0e4)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15117)


Findings in Java Class: com.avos.avoscloud.java_websocket.drafts.Draft_10

	 in Method: java.lang.String generateFinalKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b5a58c503e069c2e62f2f170c987967b2e1bde1ad4449be36fa044cdaa00d475)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20231)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
	TypestateError: 1
	ConstraintError: 8
	ForbiddenMethodError: 1
=====================================================================
