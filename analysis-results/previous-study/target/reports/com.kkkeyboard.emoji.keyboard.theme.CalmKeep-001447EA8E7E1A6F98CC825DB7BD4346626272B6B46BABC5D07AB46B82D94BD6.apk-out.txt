Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.kkkeyboard.emoji.keyboard.theme.CalmKeep-001447EA8E7E1A6F98CC825DB7BD4346626272B6B46BABC5D07AB46B82D94BD6.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4400)
		Method: <a.a.au: java.lang.String a(java.lang.String)>
		SHA-256: ec529601c7728445abca4f668c1dfaf06fd1341866466163828e8302b0c82bd5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4303)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: ef363df6064fb1ce7b6f5452514bc4f9ae3e64f53a78a530a104e1cd17efaed8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: 5a679f8719f58d1eaaa68f7cf11745c5bfd7936237332f3d59dab073baf855c2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4913)
		Method: <a.a.au: java.lang.String b(java.lang.String)>
		SHA-256: 5a7e17eb90adb8773449460147085903b323a44da467e8bf271bf14e91f8e199
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 1f87e1baa8c3ad9c70f127ae5ebdc4c2c194a85f916da08c13fbd7dbae613cad
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.ar: byte[] b(byte[])>
		SHA-256: 5e197dc752e049a068609d2641d4025655feee8c439d33b1b70d474fa3034bc0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4914)
		Method: <a.a.ar: byte[] b(byte[])>
		SHA-256: 303a9206215605e84f8708f8597cc9739b7de7a282fe67a15752a09d17e253ce
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <a.a.w: void a()>
		SHA-256: 151f8099740741e36599ed2c97f90f4e265b9344d358d05ac8628308b5868b7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4304)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 54de0a347629f4b8d3cd0503fd062ac22576fb2b285cbf61cb29b4c096fc1c42
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4607)
		Method: <a.a.ar: java.lang.String c(java.lang.String)>
		SHA-256: 6afc72f38cfe572015718ea7f3f56e4d25d0ed9a27f69e37ddf1d84b658014f0
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5118)
		Method: <a.a.at: java.lang.String r(android.content.Context)>
		SHA-256: 83099d237f3655c9d1a8ee36418dce00d6522dc4c1cddda40d7cbae3125a8665
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.b.a.a.f: java.security.KeyStore a()>
		SHA-256: eaf8bb3c88421a6edf62ce1882d65151d8843abab103d996dad9883e23249e15
		Secure: true
	Object:
		Variable: varReplacer4304
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4304)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 390a7572ec4ecba54e164cbb6daa02856adf31758b78a240a5e6b6255c58d7fb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2756)
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: b934599bf2e47c9ef35c1bdc1b6c0568c7a0eb8b73ca63817af0a066651b6bfd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5397)
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: c1c615576043e753d3f2cb55bfe772241f401fe91dfb4a83b70a092500a1101b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: e862db82b73e5f4124612e54d21215997c37b304f828cf00cd5042195e28c5a0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1012)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 6598bdad31914ae99f624e5456019ae34673193db6e9d736f9c8c880fe3c0422
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <a.a.o: void <init>()>
		SHA-256: 1e8ba1cb792bece957f9acd4f38ca99f87b6464c892384fe1e245f28f1b94760
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4306)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 518795278f4dd4488a10749a34bb34ad9b1600dee84e0a5c61d953aa526966f6
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <a.a.at: java.lang.String r(android.content.Context)>
		SHA-256: 1a364a63aa0e538fa99c110fabfb520f0441321eda8386dda3ad9c834e56d0ac
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <a.a.o: void <init>()>
		SHA-256: e336a84a342f73919fda70c98740db076381969400df15605914f9ef38e4a2ee
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2986)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: f9966807e96687e036b67db44555cb0c30aeeaf5d1ec0407821f3c674aac0f64
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 43c0d5bfd9533c9587d26cfec43e24806645117113b670162ff037504aa69d07
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.au: java.lang.String b(java.lang.String)>
		SHA-256: 4e460b4ff73f0f25b68d1e0a0d74bf13b3cdb8e3e70e22663da94fcb4c9ade82
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: a718a0e442a1301d9330bf69344c7d4ef6091c0ee1006b26f9ac8b1a5bd8ff8d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4302)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: cea02399d59c39281d6db54cffafbcb248a26d70b6eacadd703a684e9ff32918
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6388)
		Method: <a.a.ab: void <init>(java.security.KeyStore)>
		SHA-256: fac14ae698a72618a65f668680002330ead8ebfcbdcc634d8dbde68b0c77f5ad
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3919)
		Method: <com.b.a.a.f: void <init>(java.security.KeyStore)>
		SHA-256: 87b34236a364bae29289dae8496d85bfc4f5949241a7822d2f9dd799fd8074da
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: c2e06dfe01820b839828dd443b25fea24d2276e60fa7df30642fda2b37b5adb7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.ar: java.lang.String c(java.lang.String)>
		SHA-256: 4374c83537e102c7d4408b437e35c84a127990d3a653ee15c9af555edf736850
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.ar: byte[] b(byte[],byte[])>
		SHA-256: 5d374aee80c16531657cf4355ccbf663195551bd886687c1569c2cafb322b247
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.au: java.lang.String a(java.lang.String)>
		SHA-256: 548e8f4586fad86b0d778f785c0b41f85ac0c12c8a29e126c17a5bd992a1022a
		Secure: false
	Object:
		Variable: varReplacer4303
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4303)
		Method: <a.a.ar: byte[] a(byte[],byte[])>
		SHA-256: 1e86f32817014db2fd9b0d52e8c4e1e87d69d73ef821d8d917c628428a57b1b3
		Secure: false

Findings in Java Class: com.mopub.common.util.Utils

	 in Method: java.lang.String sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6598bdad31914ae99f624e5456019ae34673193db6e9d736f9c8c880fe3c0422)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1012)


Findings in Java Class: com.android.volley.f

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b934599bf2e47c9ef35c1bdc1b6c0568c7a0eb8b73ca63817af0a066651b6bfd)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2756)


Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f9966807e96687e036b67db44555cb0c30aeeaf5d1ec0407821f3c674aac0f64)
			First parameter (with value "SSL") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2986)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2987, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2987, r12, $r3)


Findings in Java Class: com.b.a.a.f

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3917, r5, varReplacer3917)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #87b34236a364bae29289dae8496d85bfc4f5949241a7822d2f9dd799fd8074da)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3919)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3917, r5, varReplacer3917)


Findings in Java Class: a.a.au

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ec529601c7728445abca4f668c1dfaf06fd1341866466163828e8302b0c82bd5)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4400)


	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5a7e17eb90adb8773449460147085903b323a44da467e8bf271bf14e91f8e199)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4913)


Findings in Java Class: a.a.ar

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6afc72f38cfe572015718ea7f3f56e4d25d0ed9a27f69e37ddf1d84b658014f0)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4607)


	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #303a9206215605e84f8708f8597cc9739b7de7a282fe67a15752a09d17e253ce)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4914)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4301, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4303)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4301, $r2, $r4)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4304)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4305, $r2, $r4)


Findings in Java Class: a.a.at

	 in Method: java.lang.String r(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #83099d237f3655c9d1a8ee36418dce00d6522dc4c1cddda40d7cbae3125a8665)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5118)


Findings in Java Class: com.d.b.a.f

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c1c615576043e753d3f2cb55bfe772241f401fe91dfb4a83b70a092500a1101b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5397)


Findings in Java Class: a.a.ab

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6386, r7, varReplacer6386)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6386, r7, varReplacer6386)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #fac14ae698a72618a65f668680002330ead8ebfcbdcc634d8dbde68b0c77f5ad)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6388)


Findings in Java Class: a.a.o

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer6389)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 11
	RequiredPredicateError: 14
=====================================================================
