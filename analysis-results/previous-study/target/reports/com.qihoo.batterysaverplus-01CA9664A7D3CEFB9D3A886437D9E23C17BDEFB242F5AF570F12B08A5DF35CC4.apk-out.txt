Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.qihoo.batterysaverplus-01CA9664A7D3CEFB9D3A886437D9E23C17BDEFB242F5AF570F12B08A5DF35CC4.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(byte[])>
		SHA-256: e0f2e0fc9f3af12fa38b1ba8fdc56de4110c6d0497ba61b88885192bb783f52a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2791)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 678f105e6bfd9892f327549f19f6d6073561fd845e0203c84c472871700b6bae
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11823)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: 3688a35db51db28638850e1e28c0205150653317b7841444e993f052c8035096
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1615)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[])>
		SHA-256: 4e0c38c2676734709d67b0c51ded123ff148e9974fa8989c8ef1d21f2effdaeb
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13125)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 4257a9fd44b5a2e94d0849d8fdc3dc356eff9e58a7c2449a3f67cae92fad799a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 19eff7b194043eafc9ebfc4e805f6473d9e820d5718eb3a8e65b28ab6d9076f6
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13123)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 48cfdcad0cf8ac6970e4f7bc9e56dc386cdaf3125b5b8212ee56fc3d56001be8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4847)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: b6d92c289c9452aa618af193f69f4e1fa18f13c00927039a6fb5bb8432c4b968
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: 8c365ed273bc7d550fdfc65fa696143a8f9c4b007af6c53647bc2fe317aa3ee4
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: 6a82edd009dbef89565a62019fdff9802d1a7891520c5664e3c386e964bd3f6a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4849)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 5d224a6e4e1e8c1972ff76d3cd36b41c4bbb0beefa7f42a2ce4db55a3a07f533
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 96b0a650ef43bded912c68964b86200055fcfccb9046288b0f21ec0e69f08a5d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4857)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: cbf4ea539243770aaa2d276c125b7a284ea4f59eba15e6e6a62a5b934882bdaa
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11826)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: 91a838539711fd7f3eb1fe596e3bcfcec0a1fed9261cf2331e2863c815840fa1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7778)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: a360efeae28ec05e1ababf6795e17555acf9514de62b382148cc5bcc1b623338
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11828)
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(byte[])>
		SHA-256: 2bbd19be1e03d7cb1ad9750905d5465d23a6a72be3d7302971f1100f9cbb21a1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: e116332ddaea05e611e5483f42ad792ce6620b7fe82169f4a41b79d95d0b9ac7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4856)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: 4d02414c4894c408ea164d4091529d0db9b41abeb3292245748e2da57bfe6ee3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 15d150e79c5e7661dbb05a65575bbd7ee200f49ab8c8aa54c98825dff5f98f83
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7884)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: adc3cb4ddfb63ecd33b3cc7070fc9b793caed31ecfc4a42a4460c501357afdf2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(java.io.File)>
		SHA-256: a8a907ae858b6b0863484d57ea53c0f93b5e30fc2236d5a58df313e2a9744734
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: f553b48a635029790275912b97d0aacc6da60ddbca420931ab14baf838d2e16c
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: 7db32a49ea5dc429de86995e2eed699b72f2aae12158b456b4483d8fcf6e3495
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: f605ba6ccea829a846cc3cf5825300efbe6a39adf07ce6c8c48264a265559476
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 68f07c74644a6c26198dad4139f50db826bce0abd5cb56bebd6dd26d15ec8daf
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 43c0d5bfd9533c9587d26cfec43e24806645117113b670162ff037504aa69d07
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16048)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 17d737c5751458b5fc3e45d270a7590372159d033967e1be2c84ee3b514dce8a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: f4d66bad6a363c501179b1552749fa14392ef460d7363b0cacd66e5e6f9938f6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16291)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: 838f345c202a61e6bd1a93816ccfc6da562fb44fc0e299c49d1824a9342a5d13
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 40981221c4e9a1eb40d5cb8e6190863279ffa87e10af25efd7c624a398c8c15f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[])>
		SHA-256: e9f827e7785cf3c85d8c44f9439d2836f0f502263fa67157b319ec9194152065
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5883)
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(java.io.File)>
		SHA-256: 92759274eff72b7dafdec050537c69af33a0ede0a22c49d12adb74c7c6046186
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 94ebb5ffe8464dbb08b442cf756593c1e52a3ad4b9217926b8950cc1b0f05547
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: fd9ba5f66eab81a4f810b7f77ee34936e2a6caa5b54e1ab6cdfcff24284ab1d4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: bb65d23197ce4f3d2dadabc31a685fffd222ed3b28775800a42f22cd2e296f56
		Secure: false

Findings in Java Class: com.mobimagic.adv.f.b.c

	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4e0c38c2676734709d67b0c51ded123ff148e9974fa8989c8ef1d21f2effdaeb)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1615)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer4848, $r5, $r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b6d92c289c9452aa618af193f69f4e1fa18f13c00927039a6fb5bb8432c4b968)
			First parameter (with value "DES") should be any of {PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBKDF2WithHmacSHA224, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA512, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4847)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5d224a6e4e1e8c1972ff76d3cd36b41c4bbb0beefa7f42a2ce4db55a3a07f533)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4849)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4d02414c4894c408ea164d4091529d0db9b41abeb3292245748e2da57bfe6ee3)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4856)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer4858, $r5, $r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #cbf4ea539243770aaa2d276c125b7a284ea4f59eba15e6e6a62a5b934882bdaa)
			First parameter (with value "DES") should be any of {PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBKDF2WithHmacSHA224, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA512, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4857)


Findings in Java Class: com.mopub.common.util.Utils

	 in Method: java.lang.String sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #678f105e6bfd9892f327549f19f6d6073561fd845e0203c84c472871700b6bae)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2791)


Findings in Java Class: com.qihoo360.common.utils.SecurityUtil

	 in Method: byte[] MD5(java.io.File)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #92759274eff72b7dafdec050537c69af33a0ede0a22c49d12adb74c7c6046186)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5883)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #92759274eff72b7dafdec050537c69af33a0ede0a22c49d12adb74c7c6046186)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.lang.String DES_decrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer11824, $r6, $r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #91a838539711fd7f3eb1fe596e3bcfcec0a1fed9261cf2331e2863c815840fa1)
			First parameter (with value "DES") should be any of {PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBKDF2WithHmacSHA224, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA512, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11826)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3688a35db51db28638850e1e28c0205150653317b7841444e993f052c8035096)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11823)


	 in Method: byte[] MD5(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2bbd19be1e03d7cb1ad9750905d5465d23a6a72be3d7302971f1100f9cbb21a1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2bbd19be1e03d7cb1ad9750905d5465d23a6a72be3d7302971f1100f9cbb21a1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11828)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2bbd19be1e03d7cb1ad9750905d5465d23a6a72be3d7302971f1100f9cbb21a1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11828)


	 in Method: java.lang.String DES_encrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer13126, $r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4257a9fd44b5a2e94d0849d8fdc3dc356eff9e58a7c2449a3f67cae92fad799a)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13125)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #48cfdcad0cf8ac6970e4f7bc9e56dc386cdaf3125b5b8212ee56fc3d56001be8)
			First parameter (with value "DES") should be any of {PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBKDF2WithHmacSHA224, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA512, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13123)


Findings in Java Class: com.facebook.ads.internal.util.u

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a360efeae28ec05e1ababf6795e17555acf9514de62b382148cc5bcc1b623338)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7778)


Findings in Java Class: com.mobvista.msdk.base.utils.CommonMD5

	 in Method: java.lang.String getMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #adc3cb4ddfb63ecd33b3cc7070fc9b793caed31ecfc4a42a4460c501357afdf2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7884)


	 in Method: java.lang.String getUPMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #17d737c5751458b5fc3e45d270a7590372159d033967e1be2c84ee3b514dce8a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16048)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.zza

	 in Method: java.lang.String zzcv(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #838f345c202a61e6bd1a93816ccfc6da562fb44fc0e299c49d1824a9342a5d13)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16291)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	IncompleteOperationError: 2
	RequiredPredicateError: 8
	ConstraintError: 16
=====================================================================
