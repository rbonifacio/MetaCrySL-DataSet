Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.smm.epctrackerapp-139A5C4C321DFFE9D4DB9C561AA559DE730FA25EB4AC1CDEAF4162F67B8FA779.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager: void <init>(java.security.KeyStore[])>
		SHA-256: df4f12ec9d4e4644098ba74af994087b51819644f48e73486332fc148136649d
		Secure: false
	Object:
		Variable: r32
		Type: java.security.SecureRandom
		Statement: specialinvoke r32.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: ec5a3b9c459e095d06455cbfbb767d05f39652ee39e2deb63e1be93dffc7f5e7
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 954e9f666dc6663ac3198d4c83a7c885893390e9e77a37fe053a41ffaa347eb7
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManager[]
		Statement: $r4 = virtualinvoke $r15.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 85f0f8ba039cc946175abbca687425938ecca15a61ea232af1ff5e5b8aab7319
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6555)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 5fb125a2260d8c466c530c19f4d9a322da8c4c650e26509283f18be33b1ea795
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 9ca6b94bcc78ec68d44ba6e8ba6739871ce139cd6d2a452f1bea91ce2cea6e26
		Secure: true
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: cd50170b259544d5988be3439b122434391ff468a188c8a02ab1e73af48c6617
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer16987, varReplacer16988)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: db15fdebdc15d5d84480eedaae4f0767f86ab0354cdbe21d415fb11b5948986
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r15 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer17000)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: fa4c4f0cfc006b6721ee7651545dc7e06d61fc3550a4bf9f37f36b117343ad40
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager: void <init>(java.security.KeyStore[])>
		SHA-256: df4f12ec9d4e4644098ba74af994087b51819644f48e73486332fc148136649d
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory createAdditionalApacheCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 15dd4c09357370287da655c9000eb19b850fa2e138e7fa2b62445048968ecb0c
		Secure: true
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 70227ee4cebe6669aebfadd648a5aa0401905e3b0c149905f4e0b616961e20b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2715)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: a78ea14644ec2d228fa40072dd74761fd4c26f6a3adb5a3f854e0c5e8101fa4b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16989)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 525edb6eea082c496a430fe1465b5337ca2d45dc4e24e8ffc537a5d584d0e06d
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer16992, $r24)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 348e525d46469aed7fa864f7cd61a04fa6849f69cf3eed0446c25cb43a6a861f
		Secure: true

Findings in Java Class: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2716, r6, varReplacer2716)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2716, r6, varReplacer2716)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a78ea14644ec2d228fa40072dd74761fd4c26f6a3adb5a3f854e0c5e8101fa4b)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2715)


	 in Method: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6551, $r10, varReplacer6551)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5fb125a2260d8c466c530c19f4d9a322da8c4c650e26509283f18be33b1ea795)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6555)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6551, $r10, varReplacer6551)


Findings in Java Class: org.jivesoftware.smack.tcp.XMPPTCPConnection

	 in Method: void proceedTLSReceived()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer16997, r32)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #525edb6eea082c496a430fe1465b5337ca2d45dc4e24e8ffc537a5d584d0e06d)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16989)


Findings in Java Class: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager

	 in Method: void <init>(java.security.KeyStore[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer2719)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 6
=====================================================================
