Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.vbulletin.build_973-122B8FAEDCDCE0E67075F832305B3AA7343343E85007AE877D800840F73C6A2A.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5353)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 339e852168bf26d26ede2cbcd0ee08d9e0abdf9fafc60e792efbbe883d13b115
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 60029a1b2e5ee22a3931915434a5fa44cf27db5eb408040851f105ce7e16415b
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5352)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 171d33c3e3b4acaa9e6c25a69222c23db0ade417946285512b8e9bea7e10a2b6
		Secure: true
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentEventStore: void startNewVisit()>
		SHA-256: 16e2093d83c7039b49d21a048d17818591ae5ea22f20400c902dded8894eac28
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.vbulletin.client.httprequest.Util: java.lang.String md5(java.lang.String)>
		SHA-256: 871bb16ee1aa99441faeeb15300b99888c46d2bad174eb35b97e94e35f73239f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1719)
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 63cbc1352fe403dbe74c1e40809ca970f94b8b9a5db66a69f6e3beaf5f73bbd7
		Secure: false
	Object:
		Variable: varReplacer5353
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5353)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 5a0054d23ff8c4191a17cc7df6f4ba0c758d53494907a5501adb3afef77b9749
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6590)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: c7676dfb7fcab2e2f8c6f068e6b857cddbf305333e861e8e1674a75d50e979c4
		Secure: false
	Object:
		Variable: varReplacer6590
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6590)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: f18c5ddaa13470a15f9fa836ad37d1065e850352b33c152f0724da4ef1a5ced7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6851)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 9d8e93f9ee29f91b1f40bbd2f67ee292975d94a0adfa64a1a0a6f40a897387d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: a1c52ee0141a291e49d55149b1b46b02367091bac3fa2d0baedf5190c42597d2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: f33d2f7e82a1ae6a1df06258ac7921e0d9cdbc3113b01f82681ea71491a7857b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: dae50a7a3480c41072b412801df159b36d80d91d815fe01726a27974aeb4bc28
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6591)
		Method: <com.vbulletin.util.FacebookUtils: java.lang.String hmacForSecret(java.lang.String,java.lang.String)>
		SHA-256: 2816ca91be819a3638501f0777bd81bbcb0d9ae2b58ee5c0b56869c1211aa0ef
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3104)
		Method: <com.vbulletin.client.httprequest.Util: java.lang.String md5(java.lang.String)>
		SHA-256: d68e942b3513393e68666230502fd203c110f3c6612f3777384483bf3d445b29
		Secure: false

Findings in Java Class: com.facebook.internal.Utility

	 in Method: java.lang.String md5hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #63cbc1352fe403dbe74c1e40809ca970f94b8b9a5db66a69f6e3beaf5f73bbd7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1719)


Findings in Java Class: com.vbulletin.client.httprequest.Util

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d68e942b3513393e68666230502fd203c110f3c6612f3777384483bf3d445b29)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3104)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.zza

	 in Method: java.lang.String zzaE(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9d8e93f9ee29f91b1f40bbd2f67ee292975d94a0adfa64a1a0a6f40a897387d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6851)


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5353)


Findings in Java Class: com.vbulletin.util.FacebookUtils

	 in Method: java.lang.String hmacForSecret(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6590)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 2
=====================================================================
