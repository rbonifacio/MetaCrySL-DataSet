Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.vdomain.webeyesos-0432C1C1994BC6CFA3300119CBCF97908951029DE7DFAED73471A9CA67BF7910.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendLogin(int)>
		SHA-256: 89524954dbcba724972236ff561f6376cce6715992a27086556a7ecd8981df01
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.KeyStore
		Statement: $r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendRegistration(int)>
		SHA-256: 2e64303799545be3a95b8bd5a475e58f9a2057e448319bd2f68b13317fb9d913
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendLogout(int)>
		SHA-256: 4b923ece0809da9fcd1bcfa45a819ec06de2dbe17ea4ed5f26cd89dd26cb44bb
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3105)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 2b7b633e3cd56adce07bd753838700f315ce4a57c33763ed75b3830164d9db42
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendDeny(int)>
		SHA-256: 91667b6a5156650334ba8636001f2812967b0fe4570773c6968b70ee24a04db8
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendPanic()>
		SHA-256: 783cd2d2471f71f961182fb652ca74facab9f0dcf6428a96feb5e3becc27aa27
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.KeyStore
		Statement: $r15 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r14)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendMP3(int)>
		SHA-256: f5b07e471e2c5aff0d2076e49430d744985658405d3ba86458580ca70caa3d8e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3529)
		Method: <com.example.tammylewis.webeyesos.MainActivity: java.lang.String SHA1(java.lang.String)>
		SHA-256: b323f64306f6c0c94cb528020af726c521a62fdb703f60f3f6dca577609da4c8
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendMandown(int,java.lang.String)>
		SHA-256: a80806e10ee8ce73e10a068e6e5fcc02213c7eef05709e39a6da02a835218243
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendAllow(int)>
		SHA-256: 680b20bbf7148e9ae7d2ca814a75f48af4a92b1ad880bc678a9daba6c1b4b8a0
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendCheckin(int,java.lang.String)>
		SHA-256: bfaeb5e8c3503688db05bbe285850948b5f3c7d771bcfae536a172f9495af733
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendCancelAlarm(int)>
		SHA-256: f47d250ffd5e4e046c1779f67db1f0be5c83c43c4c1577677a041ada30772443
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendUpdate(int)>
		SHA-256: 731406d8b3136f4c3fe42e1197957d0d92da88532063842c13f38e445418757b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendTracking(int,java.lang.String)>
		SHA-256: 138716dbd9c2576383cac2bb0425c469d17701f577c4f23573de18ce2d95ebc4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.example.tammylewis.webeyesos.MainActivity: java.lang.String SHA1(java.lang.String)>
		SHA-256: 2db6fac590bc14182cb5000d8d29a765c4a3ec9e7e8661e36937a332aff42649
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.example.tammylewis.webeyesos.WebeyeSOSService: void sendPing(int)>
		SHA-256: 382e5528ed45a7fed1843c24864e7e4d01b65ebcf90dfbd36dc497c57bab2573
		Secure: true

Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3106, r5, varReplacer3106)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2b7b633e3cd56adce07bd753838700f315ce4a57c33763ed75b3830164d9db42)
			First parameter (with value "TLS") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3105)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3106, r5, varReplacer3106)


Findings in Java Class: com.example.tammylewis.webeyesos.MainActivity

	 in Method: java.lang.String SHA1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b323f64306f6c0c94cb528020af726c521a62fdb703f60f3f6dca577609da4c8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3529)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 17

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 2
=====================================================================
