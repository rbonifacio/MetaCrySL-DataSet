Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/io.dcloud.H5081EE6B-1228BDC8B3623528CBDFAD1C4DDE747AAF25A15FAAF1734E6A0FEBE479A99556.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLParameters
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.spec.DHParameterSpec
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.PBEKeySpec
	java.security.cert.TrustAnchor
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 40cc8c3a68d9234209250460ce9b0386093dea54f2699629f5ca1a61d0ffea1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.dcloud.common.util.HashUtils: java.lang.String getHash(java.lang.String)>
		SHA-256: 1fe9f1b37531e51a34535179f51212095739b0865ce76191f487ca079b76d5b9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: eb8d65f83999bdcf65378e7722b4d34834f48479554ef576b3cdb8a506884074
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1550)
		Method: <io.dcloud.common.util.NetTool: java.net.HttpURLConnection createConnection(java.net.URL,java.lang.String)>
		SHA-256: cf5d7933dba193dfde92e2b104c0f2566139a6d76b1c2517c135b20f16f226e7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1415)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 42bd5f4d9fef29e6800029e776790d94d9673ab219d8f6dc8c75b3a99cf459d4
		Secure: false
	Object:
		Variable: varReplacer1413
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1413)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: df83ff257e33fc524b403c454cfc3ee4235ce6df2226b55a3b603abfece146b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: fc421115d3a426497bc3603cff7013166449bad8a60b3da1eb36aafbfef9ad78
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1556)
		Method: <io.dcloud.common.adapter.util.DCloudTrustManager: java.security.SecureRandom createSecureRandom()>
		SHA-256: ec158fd151471569dd14be8dd4cc2d6f5042ec656330f27bf05501ef8064b2de
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1413)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 9986e4f402861bdaa96987c6ec157c27503b3444dbc2429aa7016ebe5b86207e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1557, varReplacer1558)
		Method: <io.dcloud.common.adapter.util.DCloudTrustManager: java.security.SecureRandom createSecureRandom()>
		SHA-256: db8defafd84ea91f7f4ac1004d2625eae4ee700f6e5ca4e5bd64e8b66d253ded
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3933)
		Method: <io.dcloud.common.util.HashUtils: java.lang.String getHash(java.lang.String)>
		SHA-256: d75e42c902b9d99fea77f9e7875d75f35e31e3391ea369c013b27ba5dac9b1e1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3924)
		Method: <io.dcloud.common.util.Md5Utils: java.lang.String md5LowerCase(java.lang.String)>
		SHA-256: e4b0d8f258d66c04f5d153224f99e36e12d24370849f52560d52ea090caddfe2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.dcloud.common.util.Md5Utils: java.lang.String md5LowerCase(java.lang.String)>
		SHA-256: 1e65f2903e5e6ea436adc9bf07e125765e70ec2d08768e2d764096c6090ef31a
		Secure: false

Findings in Java Class: io.dcloud.common.util.NetTool

	 in Method: java.net.HttpURLConnection createConnection(java.net.URL,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1553, r14, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1553, r14, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cf5d7933dba193dfde92e2b104c0f2566139a6d76b1c2517c135b20f16f226e7)
			First parameter (with value "TLSv1") should be any of {TLSv1.1, TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1550)


Findings in Java Class: io.dcloud.common.util.Md5Utils

	 in Method: java.lang.String md5LowerCase(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e4b0d8f258d66c04f5d153224f99e36e12d24370849f52560d52ea090caddfe2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3924)


Findings in Java Class: io.dcloud.common.util.HashUtils

	 in Method: java.lang.String getHash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d75e42c902b9d99fea77f9e7875d75f35e31e3391ea369c013b27ba5dac9b1e1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3933)


Findings in Java Class: io.dcloud.common.util.AESUtil

	 in Method: byte[] encrypt(byte[],byte[],java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1414, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1413)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1414, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 38
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	ConstraintError: 3
=====================================================================
